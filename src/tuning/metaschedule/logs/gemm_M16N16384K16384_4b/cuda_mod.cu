#if defined(__CUDA_ARCH__) && (__CUDA_ARCH__ >= 530)
#include <cuda_fp16.h>
__device__ half max(half a, half b)
{
  return __hgt(__half(a), __half(b)) ? a : b;
}
__device__ half min(half a, half b)
{
  return __hlt(__half(a), __half(b)) ? a : b;
}
#else

typedef unsigned short uint16_t;
typedef unsigned char uint8_t;
typedef signed char int8_t;
typedef int int32_t;
typedef unsigned long long uint64_t;
typedef unsigned int uint32_t;

#define TVM_FORCE_INLINE inline __attribute__((always_inline))
#define TVM_XINLINE TVM_FORCE_INLINE __device__ __host__
#define TVM_ALIGNED(x) __attribute__ ((aligned(x)))
#define TVM_HALF_OPERATOR(RTYPE, OP)                              \
  TVM_XINLINE RTYPE operator OP (half a, half b) {                \
    return RTYPE(float(a) OP float(b));                           \
  }                                                               \
  template<typename T>                                            \
  TVM_XINLINE RTYPE operator OP (half a, T b) {                   \
    return RTYPE(float(a) OP float(b));                           \
  }                                                               \
  template<typename T>                                            \
  TVM_XINLINE RTYPE operator OP (T a, half b) {                   \
    return RTYPE(float(a) OP float(b));                           \
  }

#define TVM_HALF_ASSIGNOP(AOP, OP)                                \
  template<typename T>                                            \
  TVM_XINLINE half operator AOP (const T& a) {                    \
    return *this = half(float(*this) OP float(a));                \
  }                                                               \
  template<typename T>                                            \
  TVM_XINLINE half operator AOP (const volatile T& a) volatile {  \
    return *this = half(float(*this) OP float(a));                \
  }

class TVM_ALIGNED(2) half {
 public:
  uint16_t half_;

  static TVM_XINLINE half Binary(uint16_t value) {
    half res;
    res.half_ = value;
    return res;
  }

  TVM_XINLINE half() {}

  TVM_XINLINE half(const float& value) { constructor(value); }
  TVM_XINLINE explicit half(const double& value) { constructor(value); }
  TVM_XINLINE explicit half(const int8_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const uint8_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const int32_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const uint32_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const long long& value) { constructor(value); }
  TVM_XINLINE explicit half(const uint64_t& value) { constructor(value); }

  TVM_XINLINE operator float() const {                          \
    return float(half2float(half_));                            \
  }                                                             \
  TVM_XINLINE operator float() const volatile {                 \
    return float(half2float(half_));                            \
  }


  TVM_HALF_ASSIGNOP(+=, +)
  TVM_HALF_ASSIGNOP(-=, -)
  TVM_HALF_ASSIGNOP(*=, *)
  TVM_HALF_ASSIGNOP(/=, /)

  TVM_XINLINE half operator+() {
    return *this;
  }

  TVM_XINLINE half operator-() {
    return half(-float(*this));
  }

  TVM_XINLINE half operator=(const half& a) {
    half_ = a.half_;
    return a;
  }

  template<typename T>
  TVM_XINLINE half operator=(const T& a) {
    return *this = half(a);
  }

  TVM_XINLINE half operator=(const half& a) volatile {
    half_ = a.half_;
    return a;
  }

  template<typename T>
  TVM_XINLINE half operator=(const T& a) volatile {
    return *this = half(a);
  }

 private:
  union Bits {
    float f;
    int32_t si;
    uint32_t ui;
  };

  static int const fp16FractionBits = 10;
  static int const fp32FractionBits = 23;
  static int32_t const fp32FractionMask = ~(~0u << fp32FractionBits);   // == 0x7fffff
  static int32_t const fp32HiddenBit = 1 << fp32FractionBits;   // == 0x800000
  static int const shift = fp32FractionBits - fp16FractionBits;   // == 13
  static int const shiftSign = 16;
  static int32_t const expAdjust = 127 - 15;   // exp32-127 = exp16-15, so exp16 = exp32 - (127-15)

  static int32_t const infN = 0x7F800000;   // flt32 infinity
  static int32_t const maxN = 0x477FFFFF;   // max flt32 that's a flt16 normal after >> by shift
  static int32_t const minN = 0x38800000;   // min flt16 normal as a flt32
  static int32_t const maxZ = 0x33000000;   // max fp32 number that's still rounded to zero in fp16
  static int32_t const signN = 0x80000000;  // flt32 sign bit

  static int32_t const infC = infN >> shift;
  static int32_t const nanN = (infC + 1) << shift;   // minimum flt16 nan as a flt32
  static int32_t const maxC = maxN >> shift;
  static int32_t const minC = minN >> shift;
  static int32_t const signC = signN >> shiftSign;  // flt16 sign bit

  static int32_t const mulN = 0x52000000;  // (1 << 23) / minN
  static int32_t const mulC = 0x33800000;  // minN / (1 << (23 - shift))

  static int32_t const subC = 0x003FF;  // max flt32 subnormal down shifted
  static int32_t const norC = 0x00400;  // min flt32 normal down shifted

  static int32_t const maxD = infC - maxC - 1;
  static int32_t const minD = minC - subC - 1;

  TVM_XINLINE uint16_t float2half(const float& value) const {
    Bits v;
    v.f = value;
    uint32_t sign = v.si & signN;    // grab sign bit
    v.si ^= sign;                    // clear sign bit from v
    sign >>= shiftSign;              // logical shift sign to fp16 position

    if (v.si <= maxZ) {
      // Handle eventual zeros here to ensure
      // vshift will not exceed 32 below.
      v.ui = 0;
    } else if (v.si < minN) {
      // Handle denorms
      uint32_t exp32 = v.ui >> fp32FractionBits;
      int32_t exp16 = exp32 - expAdjust;
      // If exp16 == 0 (just into the denorm range), then significant should be shifted right 1.
      // Smaller (so negative) exp16 values should result in greater right shifts.
      uint32_t vshift = 1 - exp16;
      uint32_t significand = fp32HiddenBit | (v.ui & fp32FractionMask);
      v.ui = significand >> vshift;
      v.ui += (v.ui & 0x3fff) != 0x1000 || (significand & 0x7ff) ? 0x1000 : 0;
    } else if (v.si <= maxN) {
      // Handle norms
      v.ui += (v.ui & 0x3fff) != 0x1000 ? 0x1000 : 0;
      v.ui -= expAdjust << fp32FractionBits;
    } else if (v.si <= infN) {
      v.si = infN;
    } else if (v.si < nanN) {
      v.si = nanN;
    }

    v.ui >>= shift;
    return sign | (v.ui & 0x7fff);
  }

  // Same as above routine, except for addition of volatile keyword
  TVM_XINLINE uint16_t float2half(
    const volatile float& value) const volatile {
    Bits v;
    v.f = value;
    uint32_t sign = v.si & signN;    // grab sign bit
    v.si ^= sign;                    // clear sign bit from v
    sign >>= shiftSign;              // logical shift sign to fp16 position

    if (v.si <= maxZ) {
      // Handle eventual zeros here to ensure
      // vshift will not exceed 32 below.
      v.ui = 0;
    } else if (v.si < minN) {
      // Handle denorms
      uint32_t exp32 = v.ui >> fp32FractionBits;
      int32_t exp16 = exp32 - expAdjust;
      // If exp16 == 0 (just into the denorm range), then significant should be shifted right 1.
      // Smaller (so negative) exp16 values should result in greater right shifts.
      uint32_t vshift = 1 - exp16;
      uint32_t significand = fp32HiddenBit | (v.ui & fp32FractionMask);
      v.ui = significand >> vshift;
      v.ui += (v.ui & 0x3fff) != 0x1000 || (significand & 0x7ff) ? 0x1000 : 0;
    } else if (v.si <= maxN) {
      // Handle norms
      v.ui += (v.ui & 0x3fff) != 0x1000 ? 0x1000 : 0;
      v.ui -= expAdjust << fp32FractionBits;
    } else if (v.si <= infN) {
      v.si = infN;
    } else if (v.si < nanN) {
      v.si = nanN;
    }

    v.ui >>= shift;
    return sign | (v.ui & 0x7fff);
  }

  TVM_XINLINE float half2float(const uint16_t& value) const {
    Bits v;
    v.ui = value;
    int32_t sign = v.si & signC;
    v.si ^= sign;
    sign <<= shiftSign;
    v.si ^= ((v.si + minD) ^ v.si) & -(v.si > subC);
    v.si ^= ((v.si + maxD) ^ v.si) & -(v.si > maxC);
    Bits s;
    s.si = mulC;
    s.f *= v.si;
    int32_t mask = -(norC > v.si);
    v.si <<= shift;
    v.si ^= (s.si ^ v.si) & mask;
    v.si |= sign;
    return v.f;
  }

  TVM_XINLINE float half2float(
    const volatile uint16_t& value) const volatile {
    Bits v;
    v.ui = value;
    int32_t sign = v.si & signC;
    v.si ^= sign;
    sign <<= shiftSign;
    v.si ^= ((v.si + minD) ^ v.si) & -(v.si > subC);
    v.si ^= ((v.si + maxD) ^ v.si) & -(v.si > maxC);
    Bits s;
    s.si = mulC;
    s.f *= v.si;
    int32_t mask = -(norC > v.si);
    v.si <<= shift;
    v.si ^= (s.si ^ v.si) & mask;
    v.si |= sign;
    return v.f;
  }

  template<typename T>
  TVM_XINLINE void constructor(const T& value) {
    half_ = float2half(float(value));
  }
};

TVM_HALF_OPERATOR(half, +)
TVM_HALF_OPERATOR(half, -)
TVM_HALF_OPERATOR(half, *)
TVM_HALF_OPERATOR(half, /)
TVM_HALF_OPERATOR(bool, >)
TVM_HALF_OPERATOR(bool, <)
TVM_HALF_OPERATOR(bool, >=)
TVM_HALF_OPERATOR(bool, <=)

TVM_XINLINE half __float2half_rn(const float a) {
  return half(a);
}
#endif


// Pack two half values.
static inline __device__ __host__ unsigned
__pack_half2(const half x, const half y) {
  unsigned v0 = *((unsigned short *)&x);
  unsigned v1 = *((unsigned short *)&y);
  return (v1 << 16) | v0;
}

// Some fp16 math functions are not supported in cuda_fp16.h,
// so we define them here to make sure the generated CUDA code
// is valid.
#if defined(__CUDA_ARCH__) && (__CUDA_ARCH__ >= 530)
#define CUDA_UNSUPPORTED_HALF_MATH_BINARY(HALF_MATH_NAME, FP32_MATH_NAME) \
static inline __device__ __host__ half HALF_MATH_NAME(half x, half y) {   \
  float tmp_x = __half2float(x);                                          \
  float tmp_y = __half2float(y);                                          \
  float result = FP32_MATH_NAME(tmp_x, tmp_y);                            \
  return __float2half(result);                                            \
}

#define CUDA_UNSUPPORTED_HALF_MATH_UNARY(HALF_MATH_NAME, FP32_MATH_NAME) \
static inline __device__ __host__ half HALF_MATH_NAME(half x) {          \
  float tmp_x = __half2float(x);                                         \
  float result = FP32_MATH_NAME(tmp_x);                                  \
  return __float2half(result);                                           \
}

CUDA_UNSUPPORTED_HALF_MATH_BINARY(hpow, powf)
CUDA_UNSUPPORTED_HALF_MATH_UNARY(htanh, tanhf)
CUDA_UNSUPPORTED_HALF_MATH_UNARY(htan, tanf)
CUDA_UNSUPPORTED_HALF_MATH_UNARY(hatan, atanf)
CUDA_UNSUPPORTED_HALF_MATH_UNARY(herf, erf)

#undef CUDA_UNSUPPORTED_HALF_MATH_BINARY
#undef CUDA_UNSUPPORTED_HALF_MATH_UNARY

#endif
#if defined(__CUDA_ARCH__) && (__CUDA_ARCH__ >= 610)
#include <sm_61_intrinsics.h>
#endif
#include <mma.h>

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(32) main_kernel0(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ C) {
  extern __shared__ uchar buf_dyn_shmem[];
  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_reindex_shared_dyn_wmma_accumulator[2];
  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> A_reindex_shared_dyn_wmma_matrix_a[2];
  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_decompress_reindex_shared_dyn_wmma_matrix_b[4];
  nvcuda::wmma::fill_fragment(C_reindex_shared_dyn_wmma_accumulator[0], 0.000000e+00f);
  nvcuda::wmma::fill_fragment(C_reindex_shared_dyn_wmma_accumulator[1], 0.000000e+00f);
  for (int ax2_0_0 = 0; ax2_0_0 < 128; ++ax2_0_0) {
    __syncthreads();
    *(uint1*)(((half*)buf_dyn_shmem) + (((int)threadIdx.x) * 2)) = *(uint1*)(A + ((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 64)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 64));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 136)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 16384));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 200)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 16448));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 272)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 32768));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 336)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 32832));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 408)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 49152));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 472)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 49216));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 544)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 65536));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 608)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 65600));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 680)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 81920));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 744)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 81984));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 816)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 98304));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 880)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 98368));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 952)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 114688));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1016)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 114752));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1088)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 131072));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1152)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 131136));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1224)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 147456));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1288)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 147520));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1360)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 163840));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1424)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 163904));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1496)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 180224));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1560)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 180288));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1632)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 196608));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1696)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 196672));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1768)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 212992));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1832)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 213056));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1904)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 229376));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 1968)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 229440));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 2040)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 245760));
    *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 2104)) = *(uint1*)(A + (((ax2_0_0 * 128) + (((int)threadIdx.x) * 2)) + 245824));
    uint2 __1;
    int4 __2;
      int4 __3;
        int4 __4;
        int4 __5;
          int4 v_ = make_int4(((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)), ((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)), ((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)), ((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)));
          int4 __6;
            int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__2 = make_int4(2, 2, 2, 2);
            __6.x = (v__1.x%v__2.x);
            __6.y = (v__1.y%v__2.y);
            __6.z = (v__1.z%v__2.z);
            __6.w = (v__1.w%v__2.w);
          int4 __7;
            int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__4 = make_int4(2, 2, 2, 2);
            __7.x = (v__3.x/v__4.x);
            __7.y = (v__3.y/v__4.y);
            __7.z = (v__3.z/v__4.z);
            __7.w = (v__3.w/v__4.w);
          int4 __8;
          ushort4 __9;
            ushort4 __10;
              ushort4 __11;
                int4 v__5 = make_int4(2, 2, 2, 2);
                int4 v__6 = make_int4(0, 0, 0, 0);
                __11.x = (v__5.x>=v__6.x);
                __11.y = (v__5.y>=v__6.y);
                __11.z = (v__5.z>=v__6.z);
                __11.w = (v__5.w>=v__6.w);
              ushort4 __12;
                int4 v__7 = make_int4(0, 0, 0, 0);
                __12.x = (__6.x>=v__7.x);
                __12.y = (__6.y>=v__7.y);
                __12.z = (__6.z>=v__7.z);
                __12.w = (__6.w>=v__7.w);
              __10.x = (__11.x&&__12.x);
              __10.y = (__11.y&&__12.y);
              __10.z = (__11.z&&__12.z);
              __10.w = (__11.w&&__12.w);
            ushort4 __13;
              ushort4 __14;
                int4 v__8 = make_int4(2, 2, 2, 2);
                int4 v__9 = make_int4(0, 0, 0, 0);
                __14.x = (v__8.x<v__9.x);
                __14.y = (v__8.y<v__9.y);
                __14.z = (v__8.z<v__9.z);
                __14.w = (v__8.w<v__9.w);
              ushort4 __15;
                int4 v__10 = make_int4(0, 0, 0, 0);
                __15.x = (__6.x<=v__10.x);
                __15.y = (__6.y<=v__10.y);
                __15.z = (__6.z<=v__10.z);
                __15.w = (__6.w<=v__10.w);
              __13.x = (__14.x&&__15.x);
              __13.y = (__14.y&&__15.y);
              __13.z = (__14.z&&__15.z);
              __13.w = (__14.w&&__15.w);
            __9.x = (__10.x||__13.x);
            __9.y = (__10.y||__13.y);
            __9.z = (__10.z||__13.z);
            __9.w = (__10.w||__13.w);
          int4 __16;
            int4 v__11 = make_int4(1, 1, 1, 1);
            __16.x = (__7.x-v__11.x);
            __16.y = (__7.y-v__11.y);
            __16.z = (__7.z-v__11.z);
            __16.w = (__7.w-v__11.w);
          __8.x = (bool(__9.x)?__7.x:__16.x);
          __8.y = (bool(__9.y)?__7.y:__16.y);
          __8.z = (bool(__9.z)?__7.z:__16.z);
          __8.w = (bool(__9.w)?__7.w:__16.w);
          __5.x = (v_.x+__8.x);
          __5.y = (v_.y+__8.y);
          __5.z = (v_.z+__8.z);
          __5.w = (v_.w+__8.w);
        int v__12 = ((0x000000ff << 0) & (B[__5.x] << 0))|((0x000000ff << 8) & (B[__5.y] << 8))|((0x000000ff << 16) & (B[__5.z] << 16))|((0x000000ff << 24) & (B[__5.w] << 24));
        __4.x = (int)(((char)(v__12 >> 0)));
        __4.y = (int)(((char)(v__12 >> 8)));
        __4.z = (int)(((char)(v__12 >> 16)));
        __4.w = (int)(((char)(v__12 >> 24)));
        int4 __17;
          int4 __18;
            int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__14 = make_int4(2, 2, 2, 2);
            __18.x = (v__13.x%v__14.x);
            __18.y = (v__13.y%v__14.y);
            __18.z = (v__13.z%v__14.z);
            __18.w = (v__13.w%v__14.w);
          int4 __19;
          ushort4 __20;
            ushort4 __21;
              ushort4 __22;
                int4 v__15 = make_int4(2, 2, 2, 2);
                int4 v__16 = make_int4(0, 0, 0, 0);
                __22.x = (v__15.x>=v__16.x);
                __22.y = (v__15.y>=v__16.y);
                __22.z = (v__15.z>=v__16.z);
                __22.w = (v__15.w>=v__16.w);
              ushort4 __23;
                int4 v__17 = make_int4(0, 0, 0, 0);
                __23.x = (__18.x>=v__17.x);
                __23.y = (__18.y>=v__17.y);
                __23.z = (__18.z>=v__17.z);
                __23.w = (__18.w>=v__17.w);
              __21.x = (__22.x&&__23.x);
              __21.y = (__22.y&&__23.y);
              __21.z = (__22.z&&__23.z);
              __21.w = (__22.w&&__23.w);
            ushort4 __24;
              ushort4 __25;
                int4 v__18 = make_int4(2, 2, 2, 2);
                int4 v__19 = make_int4(0, 0, 0, 0);
                __25.x = (v__18.x<v__19.x);
                __25.y = (v__18.y<v__19.y);
                __25.z = (v__18.z<v__19.z);
                __25.w = (v__18.w<v__19.w);
              ushort4 __26;
                int4 v__20 = make_int4(0, 0, 0, 0);
                __26.x = (__18.x<=v__20.x);
                __26.y = (__18.y<=v__20.y);
                __26.z = (__18.z<=v__20.z);
                __26.w = (__18.w<=v__20.w);
              __24.x = (__25.x&&__26.x);
              __24.y = (__25.y&&__26.y);
              __24.z = (__25.z&&__26.z);
              __24.w = (__25.w&&__26.w);
            __20.x = (__21.x||__24.x);
            __20.y = (__21.y||__24.y);
            __20.z = (__21.z||__24.z);
            __20.w = (__21.w||__24.w);
          int4 __27;
            int4 v__21 = make_int4(2, 2, 2, 2);
            __27.x = (__18.x+v__21.x);
            __27.y = (__18.y+v__21.y);
            __27.z = (__18.z+v__21.z);
            __27.w = (__18.w+v__21.w);
          __19.x = (bool(__20.x)?__18.x:__27.x);
          __19.y = (bool(__20.y)?__18.y:__27.y);
          __19.z = (bool(__20.z)?__18.z:__27.z);
          __19.w = (bool(__20.w)?__18.w:__27.w);
          int4 v__22 = make_int4(4, 4, 4, 4);
          __17.x = (__19.x*v__22.x);
          __17.y = (__19.y*v__22.y);
          __17.z = (__19.z*v__22.z);
          __17.w = (__19.w*v__22.w);
        __3.x = (__4.x >> __17.x);
        __3.y = (__4.y >> __17.y);
        __3.z = (__4.z >> __17.z);
        __3.w = (__4.w >> __17.w);
      int4 v__23 = make_int4(15, 15, 15, 15);
      __2.x = (__3.x & v__23.x);
      __2.y = (__3.y & v__23.y);
      __2.z = (__3.z & v__23.z);
      __2.w = (__3.w & v__23.w);
    ((half2*)(&(__1.x)))->x = (half)(__2.x);
    ((half2*)(&(__1.x)))->y = (half)(__2.y);
    ((half2*)(&(__1.y)))->x = (half)(__2.z);
    ((half2*)(&(__1.y)))->y = (half)(__2.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 2176)) = __1;
    uint2 __28;
    int4 __29;
      int4 __30;
        int4 __31;
        int4 __32;
          int4 v__24 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 8192), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 8192), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 8192), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 8192));
          int4 __33;
            int4 v__25 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__26 = make_int4(2, 2, 2, 2);
            __33.x = (v__25.x%v__26.x);
            __33.y = (v__25.y%v__26.y);
            __33.z = (v__25.z%v__26.z);
            __33.w = (v__25.w%v__26.w);
          int4 __34;
            int4 v__27 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__28 = make_int4(2, 2, 2, 2);
            __34.x = (v__27.x/v__28.x);
            __34.y = (v__27.y/v__28.y);
            __34.z = (v__27.z/v__28.z);
            __34.w = (v__27.w/v__28.w);
          int4 __35;
          ushort4 __36;
            ushort4 __37;
              ushort4 __38;
                int4 v__29 = make_int4(2, 2, 2, 2);
                int4 v__30 = make_int4(0, 0, 0, 0);
                __38.x = (v__29.x>=v__30.x);
                __38.y = (v__29.y>=v__30.y);
                __38.z = (v__29.z>=v__30.z);
                __38.w = (v__29.w>=v__30.w);
              ushort4 __39;
                int4 v__31 = make_int4(0, 0, 0, 0);
                __39.x = (__33.x>=v__31.x);
                __39.y = (__33.y>=v__31.y);
                __39.z = (__33.z>=v__31.z);
                __39.w = (__33.w>=v__31.w);
              __37.x = (__38.x&&__39.x);
              __37.y = (__38.y&&__39.y);
              __37.z = (__38.z&&__39.z);
              __37.w = (__38.w&&__39.w);
            ushort4 __40;
              ushort4 __41;
                int4 v__32 = make_int4(2, 2, 2, 2);
                int4 v__33 = make_int4(0, 0, 0, 0);
                __41.x = (v__32.x<v__33.x);
                __41.y = (v__32.y<v__33.y);
                __41.z = (v__32.z<v__33.z);
                __41.w = (v__32.w<v__33.w);
              ushort4 __42;
                int4 v__34 = make_int4(0, 0, 0, 0);
                __42.x = (__33.x<=v__34.x);
                __42.y = (__33.y<=v__34.y);
                __42.z = (__33.z<=v__34.z);
                __42.w = (__33.w<=v__34.w);
              __40.x = (__41.x&&__42.x);
              __40.y = (__41.y&&__42.y);
              __40.z = (__41.z&&__42.z);
              __40.w = (__41.w&&__42.w);
            __36.x = (__37.x||__40.x);
            __36.y = (__37.y||__40.y);
            __36.z = (__37.z||__40.z);
            __36.w = (__37.w||__40.w);
          int4 __43;
            int4 v__35 = make_int4(1, 1, 1, 1);
            __43.x = (__34.x-v__35.x);
            __43.y = (__34.y-v__35.y);
            __43.z = (__34.z-v__35.z);
            __43.w = (__34.w-v__35.w);
          __35.x = (bool(__36.x)?__34.x:__43.x);
          __35.y = (bool(__36.y)?__34.y:__43.y);
          __35.z = (bool(__36.z)?__34.z:__43.z);
          __35.w = (bool(__36.w)?__34.w:__43.w);
          __32.x = (v__24.x+__35.x);
          __32.y = (v__24.y+__35.y);
          __32.z = (v__24.z+__35.z);
          __32.w = (v__24.w+__35.w);
        int v__36 = ((0x000000ff << 0) & (B[__32.x] << 0))|((0x000000ff << 8) & (B[__32.y] << 8))|((0x000000ff << 16) & (B[__32.z] << 16))|((0x000000ff << 24) & (B[__32.w] << 24));
        __31.x = (int)(((char)(v__36 >> 0)));
        __31.y = (int)(((char)(v__36 >> 8)));
        __31.z = (int)(((char)(v__36 >> 16)));
        __31.w = (int)(((char)(v__36 >> 24)));
        int4 __44;
          int4 __45;
            int4 v__37 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__38 = make_int4(2, 2, 2, 2);
            __45.x = (v__37.x%v__38.x);
            __45.y = (v__37.y%v__38.y);
            __45.z = (v__37.z%v__38.z);
            __45.w = (v__37.w%v__38.w);
          int4 __46;
          ushort4 __47;
            ushort4 __48;
              ushort4 __49;
                int4 v__39 = make_int4(2, 2, 2, 2);
                int4 v__40 = make_int4(0, 0, 0, 0);
                __49.x = (v__39.x>=v__40.x);
                __49.y = (v__39.y>=v__40.y);
                __49.z = (v__39.z>=v__40.z);
                __49.w = (v__39.w>=v__40.w);
              ushort4 __50;
                int4 v__41 = make_int4(0, 0, 0, 0);
                __50.x = (__45.x>=v__41.x);
                __50.y = (__45.y>=v__41.y);
                __50.z = (__45.z>=v__41.z);
                __50.w = (__45.w>=v__41.w);
              __48.x = (__49.x&&__50.x);
              __48.y = (__49.y&&__50.y);
              __48.z = (__49.z&&__50.z);
              __48.w = (__49.w&&__50.w);
            ushort4 __51;
              ushort4 __52;
                int4 v__42 = make_int4(2, 2, 2, 2);
                int4 v__43 = make_int4(0, 0, 0, 0);
                __52.x = (v__42.x<v__43.x);
                __52.y = (v__42.y<v__43.y);
                __52.z = (v__42.z<v__43.z);
                __52.w = (v__42.w<v__43.w);
              ushort4 __53;
                int4 v__44 = make_int4(0, 0, 0, 0);
                __53.x = (__45.x<=v__44.x);
                __53.y = (__45.y<=v__44.y);
                __53.z = (__45.z<=v__44.z);
                __53.w = (__45.w<=v__44.w);
              __51.x = (__52.x&&__53.x);
              __51.y = (__52.y&&__53.y);
              __51.z = (__52.z&&__53.z);
              __51.w = (__52.w&&__53.w);
            __47.x = (__48.x||__51.x);
            __47.y = (__48.y||__51.y);
            __47.z = (__48.z||__51.z);
            __47.w = (__48.w||__51.w);
          int4 __54;
            int4 v__45 = make_int4(2, 2, 2, 2);
            __54.x = (__45.x+v__45.x);
            __54.y = (__45.y+v__45.y);
            __54.z = (__45.z+v__45.z);
            __54.w = (__45.w+v__45.w);
          __46.x = (bool(__47.x)?__45.x:__54.x);
          __46.y = (bool(__47.y)?__45.y:__54.y);
          __46.z = (bool(__47.z)?__45.z:__54.z);
          __46.w = (bool(__47.w)?__45.w:__54.w);
          int4 v__46 = make_int4(4, 4, 4, 4);
          __44.x = (__46.x*v__46.x);
          __44.y = (__46.y*v__46.y);
          __44.z = (__46.z*v__46.z);
          __44.w = (__46.w*v__46.w);
        __30.x = (__31.x >> __44.x);
        __30.y = (__31.y >> __44.y);
        __30.z = (__31.z >> __44.z);
        __30.w = (__31.w >> __44.w);
      int4 v__47 = make_int4(15, 15, 15, 15);
      __29.x = (__30.x & v__47.x);
      __29.y = (__30.y & v__47.y);
      __29.z = (__30.z & v__47.z);
      __29.w = (__30.w & v__47.w);
    ((half2*)(&(__28.x)))->x = (half)(__29.x);
    ((half2*)(&(__28.x)))->y = (half)(__29.y);
    ((half2*)(&(__28.y)))->x = (half)(__29.z);
    ((half2*)(&(__28.y)))->y = (half)(__29.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 2312)) = __28;
    uint2 __55;
    int4 __56;
      int4 __57;
        int4 __58;
        int4 __59;
          int4 v__48 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 16384), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 16384), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 16384), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 16384));
          int4 __60;
            int4 v__49 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__50 = make_int4(2, 2, 2, 2);
            __60.x = (v__49.x%v__50.x);
            __60.y = (v__49.y%v__50.y);
            __60.z = (v__49.z%v__50.z);
            __60.w = (v__49.w%v__50.w);
          int4 __61;
            int4 v__51 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__52 = make_int4(2, 2, 2, 2);
            __61.x = (v__51.x/v__52.x);
            __61.y = (v__51.y/v__52.y);
            __61.z = (v__51.z/v__52.z);
            __61.w = (v__51.w/v__52.w);
          int4 __62;
          ushort4 __63;
            ushort4 __64;
              ushort4 __65;
                int4 v__53 = make_int4(2, 2, 2, 2);
                int4 v__54 = make_int4(0, 0, 0, 0);
                __65.x = (v__53.x>=v__54.x);
                __65.y = (v__53.y>=v__54.y);
                __65.z = (v__53.z>=v__54.z);
                __65.w = (v__53.w>=v__54.w);
              ushort4 __66;
                int4 v__55 = make_int4(0, 0, 0, 0);
                __66.x = (__60.x>=v__55.x);
                __66.y = (__60.y>=v__55.y);
                __66.z = (__60.z>=v__55.z);
                __66.w = (__60.w>=v__55.w);
              __64.x = (__65.x&&__66.x);
              __64.y = (__65.y&&__66.y);
              __64.z = (__65.z&&__66.z);
              __64.w = (__65.w&&__66.w);
            ushort4 __67;
              ushort4 __68;
                int4 v__56 = make_int4(2, 2, 2, 2);
                int4 v__57 = make_int4(0, 0, 0, 0);
                __68.x = (v__56.x<v__57.x);
                __68.y = (v__56.y<v__57.y);
                __68.z = (v__56.z<v__57.z);
                __68.w = (v__56.w<v__57.w);
              ushort4 __69;
                int4 v__58 = make_int4(0, 0, 0, 0);
                __69.x = (__60.x<=v__58.x);
                __69.y = (__60.y<=v__58.y);
                __69.z = (__60.z<=v__58.z);
                __69.w = (__60.w<=v__58.w);
              __67.x = (__68.x&&__69.x);
              __67.y = (__68.y&&__69.y);
              __67.z = (__68.z&&__69.z);
              __67.w = (__68.w&&__69.w);
            __63.x = (__64.x||__67.x);
            __63.y = (__64.y||__67.y);
            __63.z = (__64.z||__67.z);
            __63.w = (__64.w||__67.w);
          int4 __70;
            int4 v__59 = make_int4(1, 1, 1, 1);
            __70.x = (__61.x-v__59.x);
            __70.y = (__61.y-v__59.y);
            __70.z = (__61.z-v__59.z);
            __70.w = (__61.w-v__59.w);
          __62.x = (bool(__63.x)?__61.x:__70.x);
          __62.y = (bool(__63.y)?__61.y:__70.y);
          __62.z = (bool(__63.z)?__61.z:__70.z);
          __62.w = (bool(__63.w)?__61.w:__70.w);
          __59.x = (v__48.x+__62.x);
          __59.y = (v__48.y+__62.y);
          __59.z = (v__48.z+__62.z);
          __59.w = (v__48.w+__62.w);
        int v__60 = ((0x000000ff << 0) & (B[__59.x] << 0))|((0x000000ff << 8) & (B[__59.y] << 8))|((0x000000ff << 16) & (B[__59.z] << 16))|((0x000000ff << 24) & (B[__59.w] << 24));
        __58.x = (int)(((char)(v__60 >> 0)));
        __58.y = (int)(((char)(v__60 >> 8)));
        __58.z = (int)(((char)(v__60 >> 16)));
        __58.w = (int)(((char)(v__60 >> 24)));
        int4 __71;
          int4 __72;
            int4 v__61 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__62 = make_int4(2, 2, 2, 2);
            __72.x = (v__61.x%v__62.x);
            __72.y = (v__61.y%v__62.y);
            __72.z = (v__61.z%v__62.z);
            __72.w = (v__61.w%v__62.w);
          int4 __73;
          ushort4 __74;
            ushort4 __75;
              ushort4 __76;
                int4 v__63 = make_int4(2, 2, 2, 2);
                int4 v__64 = make_int4(0, 0, 0, 0);
                __76.x = (v__63.x>=v__64.x);
                __76.y = (v__63.y>=v__64.y);
                __76.z = (v__63.z>=v__64.z);
                __76.w = (v__63.w>=v__64.w);
              ushort4 __77;
                int4 v__65 = make_int4(0, 0, 0, 0);
                __77.x = (__72.x>=v__65.x);
                __77.y = (__72.y>=v__65.y);
                __77.z = (__72.z>=v__65.z);
                __77.w = (__72.w>=v__65.w);
              __75.x = (__76.x&&__77.x);
              __75.y = (__76.y&&__77.y);
              __75.z = (__76.z&&__77.z);
              __75.w = (__76.w&&__77.w);
            ushort4 __78;
              ushort4 __79;
                int4 v__66 = make_int4(2, 2, 2, 2);
                int4 v__67 = make_int4(0, 0, 0, 0);
                __79.x = (v__66.x<v__67.x);
                __79.y = (v__66.y<v__67.y);
                __79.z = (v__66.z<v__67.z);
                __79.w = (v__66.w<v__67.w);
              ushort4 __80;
                int4 v__68 = make_int4(0, 0, 0, 0);
                __80.x = (__72.x<=v__68.x);
                __80.y = (__72.y<=v__68.y);
                __80.z = (__72.z<=v__68.z);
                __80.w = (__72.w<=v__68.w);
              __78.x = (__79.x&&__80.x);
              __78.y = (__79.y&&__80.y);
              __78.z = (__79.z&&__80.z);
              __78.w = (__79.w&&__80.w);
            __74.x = (__75.x||__78.x);
            __74.y = (__75.y||__78.y);
            __74.z = (__75.z||__78.z);
            __74.w = (__75.w||__78.w);
          int4 __81;
            int4 v__69 = make_int4(2, 2, 2, 2);
            __81.x = (__72.x+v__69.x);
            __81.y = (__72.y+v__69.y);
            __81.z = (__72.z+v__69.z);
            __81.w = (__72.w+v__69.w);
          __73.x = (bool(__74.x)?__72.x:__81.x);
          __73.y = (bool(__74.y)?__72.y:__81.y);
          __73.z = (bool(__74.z)?__72.z:__81.z);
          __73.w = (bool(__74.w)?__72.w:__81.w);
          int4 v__70 = make_int4(4, 4, 4, 4);
          __71.x = (__73.x*v__70.x);
          __71.y = (__73.y*v__70.y);
          __71.z = (__73.z*v__70.z);
          __71.w = (__73.w*v__70.w);
        __57.x = (__58.x >> __71.x);
        __57.y = (__58.y >> __71.y);
        __57.z = (__58.z >> __71.z);
        __57.w = (__58.w >> __71.w);
      int4 v__71 = make_int4(15, 15, 15, 15);
      __56.x = (__57.x & v__71.x);
      __56.y = (__57.y & v__71.y);
      __56.z = (__57.z & v__71.z);
      __56.w = (__57.w & v__71.w);
    ((half2*)(&(__55.x)))->x = (half)(__56.x);
    ((half2*)(&(__55.x)))->y = (half)(__56.y);
    ((half2*)(&(__55.y)))->x = (half)(__56.z);
    ((half2*)(&(__55.y)))->y = (half)(__56.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 2448)) = __55;
    uint2 __82;
    int4 __83;
      int4 __84;
        int4 __85;
        int4 __86;
          int4 v__72 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 24576), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 24576), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 24576), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 24576));
          int4 __87;
            int4 v__73 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__74 = make_int4(2, 2, 2, 2);
            __87.x = (v__73.x%v__74.x);
            __87.y = (v__73.y%v__74.y);
            __87.z = (v__73.z%v__74.z);
            __87.w = (v__73.w%v__74.w);
          int4 __88;
            int4 v__75 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__76 = make_int4(2, 2, 2, 2);
            __88.x = (v__75.x/v__76.x);
            __88.y = (v__75.y/v__76.y);
            __88.z = (v__75.z/v__76.z);
            __88.w = (v__75.w/v__76.w);
          int4 __89;
          ushort4 __90;
            ushort4 __91;
              ushort4 __92;
                int4 v__77 = make_int4(2, 2, 2, 2);
                int4 v__78 = make_int4(0, 0, 0, 0);
                __92.x = (v__77.x>=v__78.x);
                __92.y = (v__77.y>=v__78.y);
                __92.z = (v__77.z>=v__78.z);
                __92.w = (v__77.w>=v__78.w);
              ushort4 __93;
                int4 v__79 = make_int4(0, 0, 0, 0);
                __93.x = (__87.x>=v__79.x);
                __93.y = (__87.y>=v__79.y);
                __93.z = (__87.z>=v__79.z);
                __93.w = (__87.w>=v__79.w);
              __91.x = (__92.x&&__93.x);
              __91.y = (__92.y&&__93.y);
              __91.z = (__92.z&&__93.z);
              __91.w = (__92.w&&__93.w);
            ushort4 __94;
              ushort4 __95;
                int4 v__80 = make_int4(2, 2, 2, 2);
                int4 v__81 = make_int4(0, 0, 0, 0);
                __95.x = (v__80.x<v__81.x);
                __95.y = (v__80.y<v__81.y);
                __95.z = (v__80.z<v__81.z);
                __95.w = (v__80.w<v__81.w);
              ushort4 __96;
                int4 v__82 = make_int4(0, 0, 0, 0);
                __96.x = (__87.x<=v__82.x);
                __96.y = (__87.y<=v__82.y);
                __96.z = (__87.z<=v__82.z);
                __96.w = (__87.w<=v__82.w);
              __94.x = (__95.x&&__96.x);
              __94.y = (__95.y&&__96.y);
              __94.z = (__95.z&&__96.z);
              __94.w = (__95.w&&__96.w);
            __90.x = (__91.x||__94.x);
            __90.y = (__91.y||__94.y);
            __90.z = (__91.z||__94.z);
            __90.w = (__91.w||__94.w);
          int4 __97;
            int4 v__83 = make_int4(1, 1, 1, 1);
            __97.x = (__88.x-v__83.x);
            __97.y = (__88.y-v__83.y);
            __97.z = (__88.z-v__83.z);
            __97.w = (__88.w-v__83.w);
          __89.x = (bool(__90.x)?__88.x:__97.x);
          __89.y = (bool(__90.y)?__88.y:__97.y);
          __89.z = (bool(__90.z)?__88.z:__97.z);
          __89.w = (bool(__90.w)?__88.w:__97.w);
          __86.x = (v__72.x+__89.x);
          __86.y = (v__72.y+__89.y);
          __86.z = (v__72.z+__89.z);
          __86.w = (v__72.w+__89.w);
        int v__84 = ((0x000000ff << 0) & (B[__86.x] << 0))|((0x000000ff << 8) & (B[__86.y] << 8))|((0x000000ff << 16) & (B[__86.z] << 16))|((0x000000ff << 24) & (B[__86.w] << 24));
        __85.x = (int)(((char)(v__84 >> 0)));
        __85.y = (int)(((char)(v__84 >> 8)));
        __85.z = (int)(((char)(v__84 >> 16)));
        __85.w = (int)(((char)(v__84 >> 24)));
        int4 __98;
          int4 __99;
            int4 v__85 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__86 = make_int4(2, 2, 2, 2);
            __99.x = (v__85.x%v__86.x);
            __99.y = (v__85.y%v__86.y);
            __99.z = (v__85.z%v__86.z);
            __99.w = (v__85.w%v__86.w);
          int4 __100;
          ushort4 __101;
            ushort4 __102;
              ushort4 __103;
                int4 v__87 = make_int4(2, 2, 2, 2);
                int4 v__88 = make_int4(0, 0, 0, 0);
                __103.x = (v__87.x>=v__88.x);
                __103.y = (v__87.y>=v__88.y);
                __103.z = (v__87.z>=v__88.z);
                __103.w = (v__87.w>=v__88.w);
              ushort4 __104;
                int4 v__89 = make_int4(0, 0, 0, 0);
                __104.x = (__99.x>=v__89.x);
                __104.y = (__99.y>=v__89.y);
                __104.z = (__99.z>=v__89.z);
                __104.w = (__99.w>=v__89.w);
              __102.x = (__103.x&&__104.x);
              __102.y = (__103.y&&__104.y);
              __102.z = (__103.z&&__104.z);
              __102.w = (__103.w&&__104.w);
            ushort4 __105;
              ushort4 __106;
                int4 v__90 = make_int4(2, 2, 2, 2);
                int4 v__91 = make_int4(0, 0, 0, 0);
                __106.x = (v__90.x<v__91.x);
                __106.y = (v__90.y<v__91.y);
                __106.z = (v__90.z<v__91.z);
                __106.w = (v__90.w<v__91.w);
              ushort4 __107;
                int4 v__92 = make_int4(0, 0, 0, 0);
                __107.x = (__99.x<=v__92.x);
                __107.y = (__99.y<=v__92.y);
                __107.z = (__99.z<=v__92.z);
                __107.w = (__99.w<=v__92.w);
              __105.x = (__106.x&&__107.x);
              __105.y = (__106.y&&__107.y);
              __105.z = (__106.z&&__107.z);
              __105.w = (__106.w&&__107.w);
            __101.x = (__102.x||__105.x);
            __101.y = (__102.y||__105.y);
            __101.z = (__102.z||__105.z);
            __101.w = (__102.w||__105.w);
          int4 __108;
            int4 v__93 = make_int4(2, 2, 2, 2);
            __108.x = (__99.x+v__93.x);
            __108.y = (__99.y+v__93.y);
            __108.z = (__99.z+v__93.z);
            __108.w = (__99.w+v__93.w);
          __100.x = (bool(__101.x)?__99.x:__108.x);
          __100.y = (bool(__101.y)?__99.y:__108.y);
          __100.z = (bool(__101.z)?__99.z:__108.z);
          __100.w = (bool(__101.w)?__99.w:__108.w);
          int4 v__94 = make_int4(4, 4, 4, 4);
          __98.x = (__100.x*v__94.x);
          __98.y = (__100.y*v__94.y);
          __98.z = (__100.z*v__94.z);
          __98.w = (__100.w*v__94.w);
        __84.x = (__85.x >> __98.x);
        __84.y = (__85.y >> __98.y);
        __84.z = (__85.z >> __98.z);
        __84.w = (__85.w >> __98.w);
      int4 v__95 = make_int4(15, 15, 15, 15);
      __83.x = (__84.x & v__95.x);
      __83.y = (__84.y & v__95.y);
      __83.z = (__84.z & v__95.z);
      __83.w = (__84.w & v__95.w);
    ((half2*)(&(__82.x)))->x = (half)(__83.x);
    ((half2*)(&(__82.x)))->y = (half)(__83.y);
    ((half2*)(&(__82.y)))->x = (half)(__83.z);
    ((half2*)(&(__82.y)))->y = (half)(__83.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 2584)) = __82;
    uint2 __109;
    int4 __110;
      int4 __111;
        int4 __112;
        int4 __113;
          int4 v__96 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 32768), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 32768), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 32768), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 32768));
          int4 __114;
            int4 v__97 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__98 = make_int4(2, 2, 2, 2);
            __114.x = (v__97.x%v__98.x);
            __114.y = (v__97.y%v__98.y);
            __114.z = (v__97.z%v__98.z);
            __114.w = (v__97.w%v__98.w);
          int4 __115;
            int4 v__99 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__100 = make_int4(2, 2, 2, 2);
            __115.x = (v__99.x/v__100.x);
            __115.y = (v__99.y/v__100.y);
            __115.z = (v__99.z/v__100.z);
            __115.w = (v__99.w/v__100.w);
          int4 __116;
          ushort4 __117;
            ushort4 __118;
              ushort4 __119;
                int4 v__101 = make_int4(2, 2, 2, 2);
                int4 v__102 = make_int4(0, 0, 0, 0);
                __119.x = (v__101.x>=v__102.x);
                __119.y = (v__101.y>=v__102.y);
                __119.z = (v__101.z>=v__102.z);
                __119.w = (v__101.w>=v__102.w);
              ushort4 __120;
                int4 v__103 = make_int4(0, 0, 0, 0);
                __120.x = (__114.x>=v__103.x);
                __120.y = (__114.y>=v__103.y);
                __120.z = (__114.z>=v__103.z);
                __120.w = (__114.w>=v__103.w);
              __118.x = (__119.x&&__120.x);
              __118.y = (__119.y&&__120.y);
              __118.z = (__119.z&&__120.z);
              __118.w = (__119.w&&__120.w);
            ushort4 __121;
              ushort4 __122;
                int4 v__104 = make_int4(2, 2, 2, 2);
                int4 v__105 = make_int4(0, 0, 0, 0);
                __122.x = (v__104.x<v__105.x);
                __122.y = (v__104.y<v__105.y);
                __122.z = (v__104.z<v__105.z);
                __122.w = (v__104.w<v__105.w);
              ushort4 __123;
                int4 v__106 = make_int4(0, 0, 0, 0);
                __123.x = (__114.x<=v__106.x);
                __123.y = (__114.y<=v__106.y);
                __123.z = (__114.z<=v__106.z);
                __123.w = (__114.w<=v__106.w);
              __121.x = (__122.x&&__123.x);
              __121.y = (__122.y&&__123.y);
              __121.z = (__122.z&&__123.z);
              __121.w = (__122.w&&__123.w);
            __117.x = (__118.x||__121.x);
            __117.y = (__118.y||__121.y);
            __117.z = (__118.z||__121.z);
            __117.w = (__118.w||__121.w);
          int4 __124;
            int4 v__107 = make_int4(1, 1, 1, 1);
            __124.x = (__115.x-v__107.x);
            __124.y = (__115.y-v__107.y);
            __124.z = (__115.z-v__107.z);
            __124.w = (__115.w-v__107.w);
          __116.x = (bool(__117.x)?__115.x:__124.x);
          __116.y = (bool(__117.y)?__115.y:__124.y);
          __116.z = (bool(__117.z)?__115.z:__124.z);
          __116.w = (bool(__117.w)?__115.w:__124.w);
          __113.x = (v__96.x+__116.x);
          __113.y = (v__96.y+__116.y);
          __113.z = (v__96.z+__116.z);
          __113.w = (v__96.w+__116.w);
        int v__108 = ((0x000000ff << 0) & (B[__113.x] << 0))|((0x000000ff << 8) & (B[__113.y] << 8))|((0x000000ff << 16) & (B[__113.z] << 16))|((0x000000ff << 24) & (B[__113.w] << 24));
        __112.x = (int)(((char)(v__108 >> 0)));
        __112.y = (int)(((char)(v__108 >> 8)));
        __112.z = (int)(((char)(v__108 >> 16)));
        __112.w = (int)(((char)(v__108 >> 24)));
        int4 __125;
          int4 __126;
            int4 v__109 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__110 = make_int4(2, 2, 2, 2);
            __126.x = (v__109.x%v__110.x);
            __126.y = (v__109.y%v__110.y);
            __126.z = (v__109.z%v__110.z);
            __126.w = (v__109.w%v__110.w);
          int4 __127;
          ushort4 __128;
            ushort4 __129;
              ushort4 __130;
                int4 v__111 = make_int4(2, 2, 2, 2);
                int4 v__112 = make_int4(0, 0, 0, 0);
                __130.x = (v__111.x>=v__112.x);
                __130.y = (v__111.y>=v__112.y);
                __130.z = (v__111.z>=v__112.z);
                __130.w = (v__111.w>=v__112.w);
              ushort4 __131;
                int4 v__113 = make_int4(0, 0, 0, 0);
                __131.x = (__126.x>=v__113.x);
                __131.y = (__126.y>=v__113.y);
                __131.z = (__126.z>=v__113.z);
                __131.w = (__126.w>=v__113.w);
              __129.x = (__130.x&&__131.x);
              __129.y = (__130.y&&__131.y);
              __129.z = (__130.z&&__131.z);
              __129.w = (__130.w&&__131.w);
            ushort4 __132;
              ushort4 __133;
                int4 v__114 = make_int4(2, 2, 2, 2);
                int4 v__115 = make_int4(0, 0, 0, 0);
                __133.x = (v__114.x<v__115.x);
                __133.y = (v__114.y<v__115.y);
                __133.z = (v__114.z<v__115.z);
                __133.w = (v__114.w<v__115.w);
              ushort4 __134;
                int4 v__116 = make_int4(0, 0, 0, 0);
                __134.x = (__126.x<=v__116.x);
                __134.y = (__126.y<=v__116.y);
                __134.z = (__126.z<=v__116.z);
                __134.w = (__126.w<=v__116.w);
              __132.x = (__133.x&&__134.x);
              __132.y = (__133.y&&__134.y);
              __132.z = (__133.z&&__134.z);
              __132.w = (__133.w&&__134.w);
            __128.x = (__129.x||__132.x);
            __128.y = (__129.y||__132.y);
            __128.z = (__129.z||__132.z);
            __128.w = (__129.w||__132.w);
          int4 __135;
            int4 v__117 = make_int4(2, 2, 2, 2);
            __135.x = (__126.x+v__117.x);
            __135.y = (__126.y+v__117.y);
            __135.z = (__126.z+v__117.z);
            __135.w = (__126.w+v__117.w);
          __127.x = (bool(__128.x)?__126.x:__135.x);
          __127.y = (bool(__128.y)?__126.y:__135.y);
          __127.z = (bool(__128.z)?__126.z:__135.z);
          __127.w = (bool(__128.w)?__126.w:__135.w);
          int4 v__118 = make_int4(4, 4, 4, 4);
          __125.x = (__127.x*v__118.x);
          __125.y = (__127.y*v__118.y);
          __125.z = (__127.z*v__118.z);
          __125.w = (__127.w*v__118.w);
        __111.x = (__112.x >> __125.x);
        __111.y = (__112.y >> __125.y);
        __111.z = (__112.z >> __125.z);
        __111.w = (__112.w >> __125.w);
      int4 v__119 = make_int4(15, 15, 15, 15);
      __110.x = (__111.x & v__119.x);
      __110.y = (__111.y & v__119.y);
      __110.z = (__111.z & v__119.z);
      __110.w = (__111.w & v__119.w);
    ((half2*)(&(__109.x)))->x = (half)(__110.x);
    ((half2*)(&(__109.x)))->y = (half)(__110.y);
    ((half2*)(&(__109.y)))->x = (half)(__110.z);
    ((half2*)(&(__109.y)))->y = (half)(__110.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 2720)) = __109;
    uint2 __136;
    int4 __137;
      int4 __138;
        int4 __139;
        int4 __140;
          int4 v__120 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 40960), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 40960), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 40960), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 40960));
          int4 __141;
            int4 v__121 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__122 = make_int4(2, 2, 2, 2);
            __141.x = (v__121.x%v__122.x);
            __141.y = (v__121.y%v__122.y);
            __141.z = (v__121.z%v__122.z);
            __141.w = (v__121.w%v__122.w);
          int4 __142;
            int4 v__123 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__124 = make_int4(2, 2, 2, 2);
            __142.x = (v__123.x/v__124.x);
            __142.y = (v__123.y/v__124.y);
            __142.z = (v__123.z/v__124.z);
            __142.w = (v__123.w/v__124.w);
          int4 __143;
          ushort4 __144;
            ushort4 __145;
              ushort4 __146;
                int4 v__125 = make_int4(2, 2, 2, 2);
                int4 v__126 = make_int4(0, 0, 0, 0);
                __146.x = (v__125.x>=v__126.x);
                __146.y = (v__125.y>=v__126.y);
                __146.z = (v__125.z>=v__126.z);
                __146.w = (v__125.w>=v__126.w);
              ushort4 __147;
                int4 v__127 = make_int4(0, 0, 0, 0);
                __147.x = (__141.x>=v__127.x);
                __147.y = (__141.y>=v__127.y);
                __147.z = (__141.z>=v__127.z);
                __147.w = (__141.w>=v__127.w);
              __145.x = (__146.x&&__147.x);
              __145.y = (__146.y&&__147.y);
              __145.z = (__146.z&&__147.z);
              __145.w = (__146.w&&__147.w);
            ushort4 __148;
              ushort4 __149;
                int4 v__128 = make_int4(2, 2, 2, 2);
                int4 v__129 = make_int4(0, 0, 0, 0);
                __149.x = (v__128.x<v__129.x);
                __149.y = (v__128.y<v__129.y);
                __149.z = (v__128.z<v__129.z);
                __149.w = (v__128.w<v__129.w);
              ushort4 __150;
                int4 v__130 = make_int4(0, 0, 0, 0);
                __150.x = (__141.x<=v__130.x);
                __150.y = (__141.y<=v__130.y);
                __150.z = (__141.z<=v__130.z);
                __150.w = (__141.w<=v__130.w);
              __148.x = (__149.x&&__150.x);
              __148.y = (__149.y&&__150.y);
              __148.z = (__149.z&&__150.z);
              __148.w = (__149.w&&__150.w);
            __144.x = (__145.x||__148.x);
            __144.y = (__145.y||__148.y);
            __144.z = (__145.z||__148.z);
            __144.w = (__145.w||__148.w);
          int4 __151;
            int4 v__131 = make_int4(1, 1, 1, 1);
            __151.x = (__142.x-v__131.x);
            __151.y = (__142.y-v__131.y);
            __151.z = (__142.z-v__131.z);
            __151.w = (__142.w-v__131.w);
          __143.x = (bool(__144.x)?__142.x:__151.x);
          __143.y = (bool(__144.y)?__142.y:__151.y);
          __143.z = (bool(__144.z)?__142.z:__151.z);
          __143.w = (bool(__144.w)?__142.w:__151.w);
          __140.x = (v__120.x+__143.x);
          __140.y = (v__120.y+__143.y);
          __140.z = (v__120.z+__143.z);
          __140.w = (v__120.w+__143.w);
        int v__132 = ((0x000000ff << 0) & (B[__140.x] << 0))|((0x000000ff << 8) & (B[__140.y] << 8))|((0x000000ff << 16) & (B[__140.z] << 16))|((0x000000ff << 24) & (B[__140.w] << 24));
        __139.x = (int)(((char)(v__132 >> 0)));
        __139.y = (int)(((char)(v__132 >> 8)));
        __139.z = (int)(((char)(v__132 >> 16)));
        __139.w = (int)(((char)(v__132 >> 24)));
        int4 __152;
          int4 __153;
            int4 v__133 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__134 = make_int4(2, 2, 2, 2);
            __153.x = (v__133.x%v__134.x);
            __153.y = (v__133.y%v__134.y);
            __153.z = (v__133.z%v__134.z);
            __153.w = (v__133.w%v__134.w);
          int4 __154;
          ushort4 __155;
            ushort4 __156;
              ushort4 __157;
                int4 v__135 = make_int4(2, 2, 2, 2);
                int4 v__136 = make_int4(0, 0, 0, 0);
                __157.x = (v__135.x>=v__136.x);
                __157.y = (v__135.y>=v__136.y);
                __157.z = (v__135.z>=v__136.z);
                __157.w = (v__135.w>=v__136.w);
              ushort4 __158;
                int4 v__137 = make_int4(0, 0, 0, 0);
                __158.x = (__153.x>=v__137.x);
                __158.y = (__153.y>=v__137.y);
                __158.z = (__153.z>=v__137.z);
                __158.w = (__153.w>=v__137.w);
              __156.x = (__157.x&&__158.x);
              __156.y = (__157.y&&__158.y);
              __156.z = (__157.z&&__158.z);
              __156.w = (__157.w&&__158.w);
            ushort4 __159;
              ushort4 __160;
                int4 v__138 = make_int4(2, 2, 2, 2);
                int4 v__139 = make_int4(0, 0, 0, 0);
                __160.x = (v__138.x<v__139.x);
                __160.y = (v__138.y<v__139.y);
                __160.z = (v__138.z<v__139.z);
                __160.w = (v__138.w<v__139.w);
              ushort4 __161;
                int4 v__140 = make_int4(0, 0, 0, 0);
                __161.x = (__153.x<=v__140.x);
                __161.y = (__153.y<=v__140.y);
                __161.z = (__153.z<=v__140.z);
                __161.w = (__153.w<=v__140.w);
              __159.x = (__160.x&&__161.x);
              __159.y = (__160.y&&__161.y);
              __159.z = (__160.z&&__161.z);
              __159.w = (__160.w&&__161.w);
            __155.x = (__156.x||__159.x);
            __155.y = (__156.y||__159.y);
            __155.z = (__156.z||__159.z);
            __155.w = (__156.w||__159.w);
          int4 __162;
            int4 v__141 = make_int4(2, 2, 2, 2);
            __162.x = (__153.x+v__141.x);
            __162.y = (__153.y+v__141.y);
            __162.z = (__153.z+v__141.z);
            __162.w = (__153.w+v__141.w);
          __154.x = (bool(__155.x)?__153.x:__162.x);
          __154.y = (bool(__155.y)?__153.y:__162.y);
          __154.z = (bool(__155.z)?__153.z:__162.z);
          __154.w = (bool(__155.w)?__153.w:__162.w);
          int4 v__142 = make_int4(4, 4, 4, 4);
          __152.x = (__154.x*v__142.x);
          __152.y = (__154.y*v__142.y);
          __152.z = (__154.z*v__142.z);
          __152.w = (__154.w*v__142.w);
        __138.x = (__139.x >> __152.x);
        __138.y = (__139.y >> __152.y);
        __138.z = (__139.z >> __152.z);
        __138.w = (__139.w >> __152.w);
      int4 v__143 = make_int4(15, 15, 15, 15);
      __137.x = (__138.x & v__143.x);
      __137.y = (__138.y & v__143.y);
      __137.z = (__138.z & v__143.z);
      __137.w = (__138.w & v__143.w);
    ((half2*)(&(__136.x)))->x = (half)(__137.x);
    ((half2*)(&(__136.x)))->y = (half)(__137.y);
    ((half2*)(&(__136.y)))->x = (half)(__137.z);
    ((half2*)(&(__136.y)))->y = (half)(__137.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 2856)) = __136;
    uint2 __163;
    int4 __164;
      int4 __165;
        int4 __166;
        int4 __167;
          int4 v__144 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 49152), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 49152), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 49152), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 49152));
          int4 __168;
            int4 v__145 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__146 = make_int4(2, 2, 2, 2);
            __168.x = (v__145.x%v__146.x);
            __168.y = (v__145.y%v__146.y);
            __168.z = (v__145.z%v__146.z);
            __168.w = (v__145.w%v__146.w);
          int4 __169;
            int4 v__147 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__148 = make_int4(2, 2, 2, 2);
            __169.x = (v__147.x/v__148.x);
            __169.y = (v__147.y/v__148.y);
            __169.z = (v__147.z/v__148.z);
            __169.w = (v__147.w/v__148.w);
          int4 __170;
          ushort4 __171;
            ushort4 __172;
              ushort4 __173;
                int4 v__149 = make_int4(2, 2, 2, 2);
                int4 v__150 = make_int4(0, 0, 0, 0);
                __173.x = (v__149.x>=v__150.x);
                __173.y = (v__149.y>=v__150.y);
                __173.z = (v__149.z>=v__150.z);
                __173.w = (v__149.w>=v__150.w);
              ushort4 __174;
                int4 v__151 = make_int4(0, 0, 0, 0);
                __174.x = (__168.x>=v__151.x);
                __174.y = (__168.y>=v__151.y);
                __174.z = (__168.z>=v__151.z);
                __174.w = (__168.w>=v__151.w);
              __172.x = (__173.x&&__174.x);
              __172.y = (__173.y&&__174.y);
              __172.z = (__173.z&&__174.z);
              __172.w = (__173.w&&__174.w);
            ushort4 __175;
              ushort4 __176;
                int4 v__152 = make_int4(2, 2, 2, 2);
                int4 v__153 = make_int4(0, 0, 0, 0);
                __176.x = (v__152.x<v__153.x);
                __176.y = (v__152.y<v__153.y);
                __176.z = (v__152.z<v__153.z);
                __176.w = (v__152.w<v__153.w);
              ushort4 __177;
                int4 v__154 = make_int4(0, 0, 0, 0);
                __177.x = (__168.x<=v__154.x);
                __177.y = (__168.y<=v__154.y);
                __177.z = (__168.z<=v__154.z);
                __177.w = (__168.w<=v__154.w);
              __175.x = (__176.x&&__177.x);
              __175.y = (__176.y&&__177.y);
              __175.z = (__176.z&&__177.z);
              __175.w = (__176.w&&__177.w);
            __171.x = (__172.x||__175.x);
            __171.y = (__172.y||__175.y);
            __171.z = (__172.z||__175.z);
            __171.w = (__172.w||__175.w);
          int4 __178;
            int4 v__155 = make_int4(1, 1, 1, 1);
            __178.x = (__169.x-v__155.x);
            __178.y = (__169.y-v__155.y);
            __178.z = (__169.z-v__155.z);
            __178.w = (__169.w-v__155.w);
          __170.x = (bool(__171.x)?__169.x:__178.x);
          __170.y = (bool(__171.y)?__169.y:__178.y);
          __170.z = (bool(__171.z)?__169.z:__178.z);
          __170.w = (bool(__171.w)?__169.w:__178.w);
          __167.x = (v__144.x+__170.x);
          __167.y = (v__144.y+__170.y);
          __167.z = (v__144.z+__170.z);
          __167.w = (v__144.w+__170.w);
        int v__156 = ((0x000000ff << 0) & (B[__167.x] << 0))|((0x000000ff << 8) & (B[__167.y] << 8))|((0x000000ff << 16) & (B[__167.z] << 16))|((0x000000ff << 24) & (B[__167.w] << 24));
        __166.x = (int)(((char)(v__156 >> 0)));
        __166.y = (int)(((char)(v__156 >> 8)));
        __166.z = (int)(((char)(v__156 >> 16)));
        __166.w = (int)(((char)(v__156 >> 24)));
        int4 __179;
          int4 __180;
            int4 v__157 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__158 = make_int4(2, 2, 2, 2);
            __180.x = (v__157.x%v__158.x);
            __180.y = (v__157.y%v__158.y);
            __180.z = (v__157.z%v__158.z);
            __180.w = (v__157.w%v__158.w);
          int4 __181;
          ushort4 __182;
            ushort4 __183;
              ushort4 __184;
                int4 v__159 = make_int4(2, 2, 2, 2);
                int4 v__160 = make_int4(0, 0, 0, 0);
                __184.x = (v__159.x>=v__160.x);
                __184.y = (v__159.y>=v__160.y);
                __184.z = (v__159.z>=v__160.z);
                __184.w = (v__159.w>=v__160.w);
              ushort4 __185;
                int4 v__161 = make_int4(0, 0, 0, 0);
                __185.x = (__180.x>=v__161.x);
                __185.y = (__180.y>=v__161.y);
                __185.z = (__180.z>=v__161.z);
                __185.w = (__180.w>=v__161.w);
              __183.x = (__184.x&&__185.x);
              __183.y = (__184.y&&__185.y);
              __183.z = (__184.z&&__185.z);
              __183.w = (__184.w&&__185.w);
            ushort4 __186;
              ushort4 __187;
                int4 v__162 = make_int4(2, 2, 2, 2);
                int4 v__163 = make_int4(0, 0, 0, 0);
                __187.x = (v__162.x<v__163.x);
                __187.y = (v__162.y<v__163.y);
                __187.z = (v__162.z<v__163.z);
                __187.w = (v__162.w<v__163.w);
              ushort4 __188;
                int4 v__164 = make_int4(0, 0, 0, 0);
                __188.x = (__180.x<=v__164.x);
                __188.y = (__180.y<=v__164.y);
                __188.z = (__180.z<=v__164.z);
                __188.w = (__180.w<=v__164.w);
              __186.x = (__187.x&&__188.x);
              __186.y = (__187.y&&__188.y);
              __186.z = (__187.z&&__188.z);
              __186.w = (__187.w&&__188.w);
            __182.x = (__183.x||__186.x);
            __182.y = (__183.y||__186.y);
            __182.z = (__183.z||__186.z);
            __182.w = (__183.w||__186.w);
          int4 __189;
            int4 v__165 = make_int4(2, 2, 2, 2);
            __189.x = (__180.x+v__165.x);
            __189.y = (__180.y+v__165.y);
            __189.z = (__180.z+v__165.z);
            __189.w = (__180.w+v__165.w);
          __181.x = (bool(__182.x)?__180.x:__189.x);
          __181.y = (bool(__182.y)?__180.y:__189.y);
          __181.z = (bool(__182.z)?__180.z:__189.z);
          __181.w = (bool(__182.w)?__180.w:__189.w);
          int4 v__166 = make_int4(4, 4, 4, 4);
          __179.x = (__181.x*v__166.x);
          __179.y = (__181.y*v__166.y);
          __179.z = (__181.z*v__166.z);
          __179.w = (__181.w*v__166.w);
        __165.x = (__166.x >> __179.x);
        __165.y = (__166.y >> __179.y);
        __165.z = (__166.z >> __179.z);
        __165.w = (__166.w >> __179.w);
      int4 v__167 = make_int4(15, 15, 15, 15);
      __164.x = (__165.x & v__167.x);
      __164.y = (__165.y & v__167.y);
      __164.z = (__165.z & v__167.z);
      __164.w = (__165.w & v__167.w);
    ((half2*)(&(__163.x)))->x = (half)(__164.x);
    ((half2*)(&(__163.x)))->y = (half)(__164.y);
    ((half2*)(&(__163.y)))->x = (half)(__164.z);
    ((half2*)(&(__163.y)))->y = (half)(__164.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 2992)) = __163;
    uint2 __190;
    int4 __191;
      int4 __192;
        int4 __193;
        int4 __194;
          int4 v__168 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 57344), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 57344), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 57344), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 57344));
          int4 __195;
            int4 v__169 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__170 = make_int4(2, 2, 2, 2);
            __195.x = (v__169.x%v__170.x);
            __195.y = (v__169.y%v__170.y);
            __195.z = (v__169.z%v__170.z);
            __195.w = (v__169.w%v__170.w);
          int4 __196;
            int4 v__171 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__172 = make_int4(2, 2, 2, 2);
            __196.x = (v__171.x/v__172.x);
            __196.y = (v__171.y/v__172.y);
            __196.z = (v__171.z/v__172.z);
            __196.w = (v__171.w/v__172.w);
          int4 __197;
          ushort4 __198;
            ushort4 __199;
              ushort4 __200;
                int4 v__173 = make_int4(2, 2, 2, 2);
                int4 v__174 = make_int4(0, 0, 0, 0);
                __200.x = (v__173.x>=v__174.x);
                __200.y = (v__173.y>=v__174.y);
                __200.z = (v__173.z>=v__174.z);
                __200.w = (v__173.w>=v__174.w);
              ushort4 __201;
                int4 v__175 = make_int4(0, 0, 0, 0);
                __201.x = (__195.x>=v__175.x);
                __201.y = (__195.y>=v__175.y);
                __201.z = (__195.z>=v__175.z);
                __201.w = (__195.w>=v__175.w);
              __199.x = (__200.x&&__201.x);
              __199.y = (__200.y&&__201.y);
              __199.z = (__200.z&&__201.z);
              __199.w = (__200.w&&__201.w);
            ushort4 __202;
              ushort4 __203;
                int4 v__176 = make_int4(2, 2, 2, 2);
                int4 v__177 = make_int4(0, 0, 0, 0);
                __203.x = (v__176.x<v__177.x);
                __203.y = (v__176.y<v__177.y);
                __203.z = (v__176.z<v__177.z);
                __203.w = (v__176.w<v__177.w);
              ushort4 __204;
                int4 v__178 = make_int4(0, 0, 0, 0);
                __204.x = (__195.x<=v__178.x);
                __204.y = (__195.y<=v__178.y);
                __204.z = (__195.z<=v__178.z);
                __204.w = (__195.w<=v__178.w);
              __202.x = (__203.x&&__204.x);
              __202.y = (__203.y&&__204.y);
              __202.z = (__203.z&&__204.z);
              __202.w = (__203.w&&__204.w);
            __198.x = (__199.x||__202.x);
            __198.y = (__199.y||__202.y);
            __198.z = (__199.z||__202.z);
            __198.w = (__199.w||__202.w);
          int4 __205;
            int4 v__179 = make_int4(1, 1, 1, 1);
            __205.x = (__196.x-v__179.x);
            __205.y = (__196.y-v__179.y);
            __205.z = (__196.z-v__179.z);
            __205.w = (__196.w-v__179.w);
          __197.x = (bool(__198.x)?__196.x:__205.x);
          __197.y = (bool(__198.y)?__196.y:__205.y);
          __197.z = (bool(__198.z)?__196.z:__205.z);
          __197.w = (bool(__198.w)?__196.w:__205.w);
          __194.x = (v__168.x+__197.x);
          __194.y = (v__168.y+__197.y);
          __194.z = (v__168.z+__197.z);
          __194.w = (v__168.w+__197.w);
        int v__180 = ((0x000000ff << 0) & (B[__194.x] << 0))|((0x000000ff << 8) & (B[__194.y] << 8))|((0x000000ff << 16) & (B[__194.z] << 16))|((0x000000ff << 24) & (B[__194.w] << 24));
        __193.x = (int)(((char)(v__180 >> 0)));
        __193.y = (int)(((char)(v__180 >> 8)));
        __193.z = (int)(((char)(v__180 >> 16)));
        __193.w = (int)(((char)(v__180 >> 24)));
        int4 __206;
          int4 __207;
            int4 v__181 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__182 = make_int4(2, 2, 2, 2);
            __207.x = (v__181.x%v__182.x);
            __207.y = (v__181.y%v__182.y);
            __207.z = (v__181.z%v__182.z);
            __207.w = (v__181.w%v__182.w);
          int4 __208;
          ushort4 __209;
            ushort4 __210;
              ushort4 __211;
                int4 v__183 = make_int4(2, 2, 2, 2);
                int4 v__184 = make_int4(0, 0, 0, 0);
                __211.x = (v__183.x>=v__184.x);
                __211.y = (v__183.y>=v__184.y);
                __211.z = (v__183.z>=v__184.z);
                __211.w = (v__183.w>=v__184.w);
              ushort4 __212;
                int4 v__185 = make_int4(0, 0, 0, 0);
                __212.x = (__207.x>=v__185.x);
                __212.y = (__207.y>=v__185.y);
                __212.z = (__207.z>=v__185.z);
                __212.w = (__207.w>=v__185.w);
              __210.x = (__211.x&&__212.x);
              __210.y = (__211.y&&__212.y);
              __210.z = (__211.z&&__212.z);
              __210.w = (__211.w&&__212.w);
            ushort4 __213;
              ushort4 __214;
                int4 v__186 = make_int4(2, 2, 2, 2);
                int4 v__187 = make_int4(0, 0, 0, 0);
                __214.x = (v__186.x<v__187.x);
                __214.y = (v__186.y<v__187.y);
                __214.z = (v__186.z<v__187.z);
                __214.w = (v__186.w<v__187.w);
              ushort4 __215;
                int4 v__188 = make_int4(0, 0, 0, 0);
                __215.x = (__207.x<=v__188.x);
                __215.y = (__207.y<=v__188.y);
                __215.z = (__207.z<=v__188.z);
                __215.w = (__207.w<=v__188.w);
              __213.x = (__214.x&&__215.x);
              __213.y = (__214.y&&__215.y);
              __213.z = (__214.z&&__215.z);
              __213.w = (__214.w&&__215.w);
            __209.x = (__210.x||__213.x);
            __209.y = (__210.y||__213.y);
            __209.z = (__210.z||__213.z);
            __209.w = (__210.w||__213.w);
          int4 __216;
            int4 v__189 = make_int4(2, 2, 2, 2);
            __216.x = (__207.x+v__189.x);
            __216.y = (__207.y+v__189.y);
            __216.z = (__207.z+v__189.z);
            __216.w = (__207.w+v__189.w);
          __208.x = (bool(__209.x)?__207.x:__216.x);
          __208.y = (bool(__209.y)?__207.y:__216.y);
          __208.z = (bool(__209.z)?__207.z:__216.z);
          __208.w = (bool(__209.w)?__207.w:__216.w);
          int4 v__190 = make_int4(4, 4, 4, 4);
          __206.x = (__208.x*v__190.x);
          __206.y = (__208.y*v__190.y);
          __206.z = (__208.z*v__190.z);
          __206.w = (__208.w*v__190.w);
        __192.x = (__193.x >> __206.x);
        __192.y = (__193.y >> __206.y);
        __192.z = (__193.z >> __206.z);
        __192.w = (__193.w >> __206.w);
      int4 v__191 = make_int4(15, 15, 15, 15);
      __191.x = (__192.x & v__191.x);
      __191.y = (__192.y & v__191.y);
      __191.z = (__192.z & v__191.z);
      __191.w = (__192.w & v__191.w);
    ((half2*)(&(__190.x)))->x = (half)(__191.x);
    ((half2*)(&(__190.x)))->y = (half)(__191.y);
    ((half2*)(&(__190.y)))->x = (half)(__191.z);
    ((half2*)(&(__190.y)))->y = (half)(__191.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 3128)) = __190;
    uint2 __217;
    int4 __218;
      int4 __219;
        int4 __220;
        int4 __221;
          int4 v__192 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 65536), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 65536), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 65536), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 65536));
          int4 __222;
            int4 v__193 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__194 = make_int4(2, 2, 2, 2);
            __222.x = (v__193.x%v__194.x);
            __222.y = (v__193.y%v__194.y);
            __222.z = (v__193.z%v__194.z);
            __222.w = (v__193.w%v__194.w);
          int4 __223;
            int4 v__195 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__196 = make_int4(2, 2, 2, 2);
            __223.x = (v__195.x/v__196.x);
            __223.y = (v__195.y/v__196.y);
            __223.z = (v__195.z/v__196.z);
            __223.w = (v__195.w/v__196.w);
          int4 __224;
          ushort4 __225;
            ushort4 __226;
              ushort4 __227;
                int4 v__197 = make_int4(2, 2, 2, 2);
                int4 v__198 = make_int4(0, 0, 0, 0);
                __227.x = (v__197.x>=v__198.x);
                __227.y = (v__197.y>=v__198.y);
                __227.z = (v__197.z>=v__198.z);
                __227.w = (v__197.w>=v__198.w);
              ushort4 __228;
                int4 v__199 = make_int4(0, 0, 0, 0);
                __228.x = (__222.x>=v__199.x);
                __228.y = (__222.y>=v__199.y);
                __228.z = (__222.z>=v__199.z);
                __228.w = (__222.w>=v__199.w);
              __226.x = (__227.x&&__228.x);
              __226.y = (__227.y&&__228.y);
              __226.z = (__227.z&&__228.z);
              __226.w = (__227.w&&__228.w);
            ushort4 __229;
              ushort4 __230;
                int4 v__200 = make_int4(2, 2, 2, 2);
                int4 v__201 = make_int4(0, 0, 0, 0);
                __230.x = (v__200.x<v__201.x);
                __230.y = (v__200.y<v__201.y);
                __230.z = (v__200.z<v__201.z);
                __230.w = (v__200.w<v__201.w);
              ushort4 __231;
                int4 v__202 = make_int4(0, 0, 0, 0);
                __231.x = (__222.x<=v__202.x);
                __231.y = (__222.y<=v__202.y);
                __231.z = (__222.z<=v__202.z);
                __231.w = (__222.w<=v__202.w);
              __229.x = (__230.x&&__231.x);
              __229.y = (__230.y&&__231.y);
              __229.z = (__230.z&&__231.z);
              __229.w = (__230.w&&__231.w);
            __225.x = (__226.x||__229.x);
            __225.y = (__226.y||__229.y);
            __225.z = (__226.z||__229.z);
            __225.w = (__226.w||__229.w);
          int4 __232;
            int4 v__203 = make_int4(1, 1, 1, 1);
            __232.x = (__223.x-v__203.x);
            __232.y = (__223.y-v__203.y);
            __232.z = (__223.z-v__203.z);
            __232.w = (__223.w-v__203.w);
          __224.x = (bool(__225.x)?__223.x:__232.x);
          __224.y = (bool(__225.y)?__223.y:__232.y);
          __224.z = (bool(__225.z)?__223.z:__232.z);
          __224.w = (bool(__225.w)?__223.w:__232.w);
          __221.x = (v__192.x+__224.x);
          __221.y = (v__192.y+__224.y);
          __221.z = (v__192.z+__224.z);
          __221.w = (v__192.w+__224.w);
        int v__204 = ((0x000000ff << 0) & (B[__221.x] << 0))|((0x000000ff << 8) & (B[__221.y] << 8))|((0x000000ff << 16) & (B[__221.z] << 16))|((0x000000ff << 24) & (B[__221.w] << 24));
        __220.x = (int)(((char)(v__204 >> 0)));
        __220.y = (int)(((char)(v__204 >> 8)));
        __220.z = (int)(((char)(v__204 >> 16)));
        __220.w = (int)(((char)(v__204 >> 24)));
        int4 __233;
          int4 __234;
            int4 v__205 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__206 = make_int4(2, 2, 2, 2);
            __234.x = (v__205.x%v__206.x);
            __234.y = (v__205.y%v__206.y);
            __234.z = (v__205.z%v__206.z);
            __234.w = (v__205.w%v__206.w);
          int4 __235;
          ushort4 __236;
            ushort4 __237;
              ushort4 __238;
                int4 v__207 = make_int4(2, 2, 2, 2);
                int4 v__208 = make_int4(0, 0, 0, 0);
                __238.x = (v__207.x>=v__208.x);
                __238.y = (v__207.y>=v__208.y);
                __238.z = (v__207.z>=v__208.z);
                __238.w = (v__207.w>=v__208.w);
              ushort4 __239;
                int4 v__209 = make_int4(0, 0, 0, 0);
                __239.x = (__234.x>=v__209.x);
                __239.y = (__234.y>=v__209.y);
                __239.z = (__234.z>=v__209.z);
                __239.w = (__234.w>=v__209.w);
              __237.x = (__238.x&&__239.x);
              __237.y = (__238.y&&__239.y);
              __237.z = (__238.z&&__239.z);
              __237.w = (__238.w&&__239.w);
            ushort4 __240;
              ushort4 __241;
                int4 v__210 = make_int4(2, 2, 2, 2);
                int4 v__211 = make_int4(0, 0, 0, 0);
                __241.x = (v__210.x<v__211.x);
                __241.y = (v__210.y<v__211.y);
                __241.z = (v__210.z<v__211.z);
                __241.w = (v__210.w<v__211.w);
              ushort4 __242;
                int4 v__212 = make_int4(0, 0, 0, 0);
                __242.x = (__234.x<=v__212.x);
                __242.y = (__234.y<=v__212.y);
                __242.z = (__234.z<=v__212.z);
                __242.w = (__234.w<=v__212.w);
              __240.x = (__241.x&&__242.x);
              __240.y = (__241.y&&__242.y);
              __240.z = (__241.z&&__242.z);
              __240.w = (__241.w&&__242.w);
            __236.x = (__237.x||__240.x);
            __236.y = (__237.y||__240.y);
            __236.z = (__237.z||__240.z);
            __236.w = (__237.w||__240.w);
          int4 __243;
            int4 v__213 = make_int4(2, 2, 2, 2);
            __243.x = (__234.x+v__213.x);
            __243.y = (__234.y+v__213.y);
            __243.z = (__234.z+v__213.z);
            __243.w = (__234.w+v__213.w);
          __235.x = (bool(__236.x)?__234.x:__243.x);
          __235.y = (bool(__236.y)?__234.y:__243.y);
          __235.z = (bool(__236.z)?__234.z:__243.z);
          __235.w = (bool(__236.w)?__234.w:__243.w);
          int4 v__214 = make_int4(4, 4, 4, 4);
          __233.x = (__235.x*v__214.x);
          __233.y = (__235.y*v__214.y);
          __233.z = (__235.z*v__214.z);
          __233.w = (__235.w*v__214.w);
        __219.x = (__220.x >> __233.x);
        __219.y = (__220.y >> __233.y);
        __219.z = (__220.z >> __233.z);
        __219.w = (__220.w >> __233.w);
      int4 v__215 = make_int4(15, 15, 15, 15);
      __218.x = (__219.x & v__215.x);
      __218.y = (__219.y & v__215.y);
      __218.z = (__219.z & v__215.z);
      __218.w = (__219.w & v__215.w);
    ((half2*)(&(__217.x)))->x = (half)(__218.x);
    ((half2*)(&(__217.x)))->y = (half)(__218.y);
    ((half2*)(&(__217.y)))->x = (half)(__218.z);
    ((half2*)(&(__217.y)))->y = (half)(__218.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 3264)) = __217;
    uint2 __244;
    int4 __245;
      int4 __246;
        int4 __247;
        int4 __248;
          int4 v__216 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 73728), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 73728), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 73728), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 73728));
          int4 __249;
            int4 v__217 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__218 = make_int4(2, 2, 2, 2);
            __249.x = (v__217.x%v__218.x);
            __249.y = (v__217.y%v__218.y);
            __249.z = (v__217.z%v__218.z);
            __249.w = (v__217.w%v__218.w);
          int4 __250;
            int4 v__219 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__220 = make_int4(2, 2, 2, 2);
            __250.x = (v__219.x/v__220.x);
            __250.y = (v__219.y/v__220.y);
            __250.z = (v__219.z/v__220.z);
            __250.w = (v__219.w/v__220.w);
          int4 __251;
          ushort4 __252;
            ushort4 __253;
              ushort4 __254;
                int4 v__221 = make_int4(2, 2, 2, 2);
                int4 v__222 = make_int4(0, 0, 0, 0);
                __254.x = (v__221.x>=v__222.x);
                __254.y = (v__221.y>=v__222.y);
                __254.z = (v__221.z>=v__222.z);
                __254.w = (v__221.w>=v__222.w);
              ushort4 __255;
                int4 v__223 = make_int4(0, 0, 0, 0);
                __255.x = (__249.x>=v__223.x);
                __255.y = (__249.y>=v__223.y);
                __255.z = (__249.z>=v__223.z);
                __255.w = (__249.w>=v__223.w);
              __253.x = (__254.x&&__255.x);
              __253.y = (__254.y&&__255.y);
              __253.z = (__254.z&&__255.z);
              __253.w = (__254.w&&__255.w);
            ushort4 __256;
              ushort4 __257;
                int4 v__224 = make_int4(2, 2, 2, 2);
                int4 v__225 = make_int4(0, 0, 0, 0);
                __257.x = (v__224.x<v__225.x);
                __257.y = (v__224.y<v__225.y);
                __257.z = (v__224.z<v__225.z);
                __257.w = (v__224.w<v__225.w);
              ushort4 __258;
                int4 v__226 = make_int4(0, 0, 0, 0);
                __258.x = (__249.x<=v__226.x);
                __258.y = (__249.y<=v__226.y);
                __258.z = (__249.z<=v__226.z);
                __258.w = (__249.w<=v__226.w);
              __256.x = (__257.x&&__258.x);
              __256.y = (__257.y&&__258.y);
              __256.z = (__257.z&&__258.z);
              __256.w = (__257.w&&__258.w);
            __252.x = (__253.x||__256.x);
            __252.y = (__253.y||__256.y);
            __252.z = (__253.z||__256.z);
            __252.w = (__253.w||__256.w);
          int4 __259;
            int4 v__227 = make_int4(1, 1, 1, 1);
            __259.x = (__250.x-v__227.x);
            __259.y = (__250.y-v__227.y);
            __259.z = (__250.z-v__227.z);
            __259.w = (__250.w-v__227.w);
          __251.x = (bool(__252.x)?__250.x:__259.x);
          __251.y = (bool(__252.y)?__250.y:__259.y);
          __251.z = (bool(__252.z)?__250.z:__259.z);
          __251.w = (bool(__252.w)?__250.w:__259.w);
          __248.x = (v__216.x+__251.x);
          __248.y = (v__216.y+__251.y);
          __248.z = (v__216.z+__251.z);
          __248.w = (v__216.w+__251.w);
        int v__228 = ((0x000000ff << 0) & (B[__248.x] << 0))|((0x000000ff << 8) & (B[__248.y] << 8))|((0x000000ff << 16) & (B[__248.z] << 16))|((0x000000ff << 24) & (B[__248.w] << 24));
        __247.x = (int)(((char)(v__228 >> 0)));
        __247.y = (int)(((char)(v__228 >> 8)));
        __247.z = (int)(((char)(v__228 >> 16)));
        __247.w = (int)(((char)(v__228 >> 24)));
        int4 __260;
          int4 __261;
            int4 v__229 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__230 = make_int4(2, 2, 2, 2);
            __261.x = (v__229.x%v__230.x);
            __261.y = (v__229.y%v__230.y);
            __261.z = (v__229.z%v__230.z);
            __261.w = (v__229.w%v__230.w);
          int4 __262;
          ushort4 __263;
            ushort4 __264;
              ushort4 __265;
                int4 v__231 = make_int4(2, 2, 2, 2);
                int4 v__232 = make_int4(0, 0, 0, 0);
                __265.x = (v__231.x>=v__232.x);
                __265.y = (v__231.y>=v__232.y);
                __265.z = (v__231.z>=v__232.z);
                __265.w = (v__231.w>=v__232.w);
              ushort4 __266;
                int4 v__233 = make_int4(0, 0, 0, 0);
                __266.x = (__261.x>=v__233.x);
                __266.y = (__261.y>=v__233.y);
                __266.z = (__261.z>=v__233.z);
                __266.w = (__261.w>=v__233.w);
              __264.x = (__265.x&&__266.x);
              __264.y = (__265.y&&__266.y);
              __264.z = (__265.z&&__266.z);
              __264.w = (__265.w&&__266.w);
            ushort4 __267;
              ushort4 __268;
                int4 v__234 = make_int4(2, 2, 2, 2);
                int4 v__235 = make_int4(0, 0, 0, 0);
                __268.x = (v__234.x<v__235.x);
                __268.y = (v__234.y<v__235.y);
                __268.z = (v__234.z<v__235.z);
                __268.w = (v__234.w<v__235.w);
              ushort4 __269;
                int4 v__236 = make_int4(0, 0, 0, 0);
                __269.x = (__261.x<=v__236.x);
                __269.y = (__261.y<=v__236.y);
                __269.z = (__261.z<=v__236.z);
                __269.w = (__261.w<=v__236.w);
              __267.x = (__268.x&&__269.x);
              __267.y = (__268.y&&__269.y);
              __267.z = (__268.z&&__269.z);
              __267.w = (__268.w&&__269.w);
            __263.x = (__264.x||__267.x);
            __263.y = (__264.y||__267.y);
            __263.z = (__264.z||__267.z);
            __263.w = (__264.w||__267.w);
          int4 __270;
            int4 v__237 = make_int4(2, 2, 2, 2);
            __270.x = (__261.x+v__237.x);
            __270.y = (__261.y+v__237.y);
            __270.z = (__261.z+v__237.z);
            __270.w = (__261.w+v__237.w);
          __262.x = (bool(__263.x)?__261.x:__270.x);
          __262.y = (bool(__263.y)?__261.y:__270.y);
          __262.z = (bool(__263.z)?__261.z:__270.z);
          __262.w = (bool(__263.w)?__261.w:__270.w);
          int4 v__238 = make_int4(4, 4, 4, 4);
          __260.x = (__262.x*v__238.x);
          __260.y = (__262.y*v__238.y);
          __260.z = (__262.z*v__238.z);
          __260.w = (__262.w*v__238.w);
        __246.x = (__247.x >> __260.x);
        __246.y = (__247.y >> __260.y);
        __246.z = (__247.z >> __260.z);
        __246.w = (__247.w >> __260.w);
      int4 v__239 = make_int4(15, 15, 15, 15);
      __245.x = (__246.x & v__239.x);
      __245.y = (__246.y & v__239.y);
      __245.z = (__246.z & v__239.z);
      __245.w = (__246.w & v__239.w);
    ((half2*)(&(__244.x)))->x = (half)(__245.x);
    ((half2*)(&(__244.x)))->y = (half)(__245.y);
    ((half2*)(&(__244.y)))->x = (half)(__245.z);
    ((half2*)(&(__244.y)))->y = (half)(__245.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 3400)) = __244;
    uint2 __271;
    int4 __272;
      int4 __273;
        int4 __274;
        int4 __275;
          int4 v__240 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 81920), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 81920), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 81920), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 81920));
          int4 __276;
            int4 v__241 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__242 = make_int4(2, 2, 2, 2);
            __276.x = (v__241.x%v__242.x);
            __276.y = (v__241.y%v__242.y);
            __276.z = (v__241.z%v__242.z);
            __276.w = (v__241.w%v__242.w);
          int4 __277;
            int4 v__243 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__244 = make_int4(2, 2, 2, 2);
            __277.x = (v__243.x/v__244.x);
            __277.y = (v__243.y/v__244.y);
            __277.z = (v__243.z/v__244.z);
            __277.w = (v__243.w/v__244.w);
          int4 __278;
          ushort4 __279;
            ushort4 __280;
              ushort4 __281;
                int4 v__245 = make_int4(2, 2, 2, 2);
                int4 v__246 = make_int4(0, 0, 0, 0);
                __281.x = (v__245.x>=v__246.x);
                __281.y = (v__245.y>=v__246.y);
                __281.z = (v__245.z>=v__246.z);
                __281.w = (v__245.w>=v__246.w);
              ushort4 __282;
                int4 v__247 = make_int4(0, 0, 0, 0);
                __282.x = (__276.x>=v__247.x);
                __282.y = (__276.y>=v__247.y);
                __282.z = (__276.z>=v__247.z);
                __282.w = (__276.w>=v__247.w);
              __280.x = (__281.x&&__282.x);
              __280.y = (__281.y&&__282.y);
              __280.z = (__281.z&&__282.z);
              __280.w = (__281.w&&__282.w);
            ushort4 __283;
              ushort4 __284;
                int4 v__248 = make_int4(2, 2, 2, 2);
                int4 v__249 = make_int4(0, 0, 0, 0);
                __284.x = (v__248.x<v__249.x);
                __284.y = (v__248.y<v__249.y);
                __284.z = (v__248.z<v__249.z);
                __284.w = (v__248.w<v__249.w);
              ushort4 __285;
                int4 v__250 = make_int4(0, 0, 0, 0);
                __285.x = (__276.x<=v__250.x);
                __285.y = (__276.y<=v__250.y);
                __285.z = (__276.z<=v__250.z);
                __285.w = (__276.w<=v__250.w);
              __283.x = (__284.x&&__285.x);
              __283.y = (__284.y&&__285.y);
              __283.z = (__284.z&&__285.z);
              __283.w = (__284.w&&__285.w);
            __279.x = (__280.x||__283.x);
            __279.y = (__280.y||__283.y);
            __279.z = (__280.z||__283.z);
            __279.w = (__280.w||__283.w);
          int4 __286;
            int4 v__251 = make_int4(1, 1, 1, 1);
            __286.x = (__277.x-v__251.x);
            __286.y = (__277.y-v__251.y);
            __286.z = (__277.z-v__251.z);
            __286.w = (__277.w-v__251.w);
          __278.x = (bool(__279.x)?__277.x:__286.x);
          __278.y = (bool(__279.y)?__277.y:__286.y);
          __278.z = (bool(__279.z)?__277.z:__286.z);
          __278.w = (bool(__279.w)?__277.w:__286.w);
          __275.x = (v__240.x+__278.x);
          __275.y = (v__240.y+__278.y);
          __275.z = (v__240.z+__278.z);
          __275.w = (v__240.w+__278.w);
        int v__252 = ((0x000000ff << 0) & (B[__275.x] << 0))|((0x000000ff << 8) & (B[__275.y] << 8))|((0x000000ff << 16) & (B[__275.z] << 16))|((0x000000ff << 24) & (B[__275.w] << 24));
        __274.x = (int)(((char)(v__252 >> 0)));
        __274.y = (int)(((char)(v__252 >> 8)));
        __274.z = (int)(((char)(v__252 >> 16)));
        __274.w = (int)(((char)(v__252 >> 24)));
        int4 __287;
          int4 __288;
            int4 v__253 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__254 = make_int4(2, 2, 2, 2);
            __288.x = (v__253.x%v__254.x);
            __288.y = (v__253.y%v__254.y);
            __288.z = (v__253.z%v__254.z);
            __288.w = (v__253.w%v__254.w);
          int4 __289;
          ushort4 __290;
            ushort4 __291;
              ushort4 __292;
                int4 v__255 = make_int4(2, 2, 2, 2);
                int4 v__256 = make_int4(0, 0, 0, 0);
                __292.x = (v__255.x>=v__256.x);
                __292.y = (v__255.y>=v__256.y);
                __292.z = (v__255.z>=v__256.z);
                __292.w = (v__255.w>=v__256.w);
              ushort4 __293;
                int4 v__257 = make_int4(0, 0, 0, 0);
                __293.x = (__288.x>=v__257.x);
                __293.y = (__288.y>=v__257.y);
                __293.z = (__288.z>=v__257.z);
                __293.w = (__288.w>=v__257.w);
              __291.x = (__292.x&&__293.x);
              __291.y = (__292.y&&__293.y);
              __291.z = (__292.z&&__293.z);
              __291.w = (__292.w&&__293.w);
            ushort4 __294;
              ushort4 __295;
                int4 v__258 = make_int4(2, 2, 2, 2);
                int4 v__259 = make_int4(0, 0, 0, 0);
                __295.x = (v__258.x<v__259.x);
                __295.y = (v__258.y<v__259.y);
                __295.z = (v__258.z<v__259.z);
                __295.w = (v__258.w<v__259.w);
              ushort4 __296;
                int4 v__260 = make_int4(0, 0, 0, 0);
                __296.x = (__288.x<=v__260.x);
                __296.y = (__288.y<=v__260.y);
                __296.z = (__288.z<=v__260.z);
                __296.w = (__288.w<=v__260.w);
              __294.x = (__295.x&&__296.x);
              __294.y = (__295.y&&__296.y);
              __294.z = (__295.z&&__296.z);
              __294.w = (__295.w&&__296.w);
            __290.x = (__291.x||__294.x);
            __290.y = (__291.y||__294.y);
            __290.z = (__291.z||__294.z);
            __290.w = (__291.w||__294.w);
          int4 __297;
            int4 v__261 = make_int4(2, 2, 2, 2);
            __297.x = (__288.x+v__261.x);
            __297.y = (__288.y+v__261.y);
            __297.z = (__288.z+v__261.z);
            __297.w = (__288.w+v__261.w);
          __289.x = (bool(__290.x)?__288.x:__297.x);
          __289.y = (bool(__290.y)?__288.y:__297.y);
          __289.z = (bool(__290.z)?__288.z:__297.z);
          __289.w = (bool(__290.w)?__288.w:__297.w);
          int4 v__262 = make_int4(4, 4, 4, 4);
          __287.x = (__289.x*v__262.x);
          __287.y = (__289.y*v__262.y);
          __287.z = (__289.z*v__262.z);
          __287.w = (__289.w*v__262.w);
        __273.x = (__274.x >> __287.x);
        __273.y = (__274.y >> __287.y);
        __273.z = (__274.z >> __287.z);
        __273.w = (__274.w >> __287.w);
      int4 v__263 = make_int4(15, 15, 15, 15);
      __272.x = (__273.x & v__263.x);
      __272.y = (__273.y & v__263.y);
      __272.z = (__273.z & v__263.z);
      __272.w = (__273.w & v__263.w);
    ((half2*)(&(__271.x)))->x = (half)(__272.x);
    ((half2*)(&(__271.x)))->y = (half)(__272.y);
    ((half2*)(&(__271.y)))->x = (half)(__272.z);
    ((half2*)(&(__271.y)))->y = (half)(__272.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 3536)) = __271;
    uint2 __298;
    int4 __299;
      int4 __300;
        int4 __301;
        int4 __302;
          int4 v__264 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 90112), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 90112), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 90112), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 90112));
          int4 __303;
            int4 v__265 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__266 = make_int4(2, 2, 2, 2);
            __303.x = (v__265.x%v__266.x);
            __303.y = (v__265.y%v__266.y);
            __303.z = (v__265.z%v__266.z);
            __303.w = (v__265.w%v__266.w);
          int4 __304;
            int4 v__267 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__268 = make_int4(2, 2, 2, 2);
            __304.x = (v__267.x/v__268.x);
            __304.y = (v__267.y/v__268.y);
            __304.z = (v__267.z/v__268.z);
            __304.w = (v__267.w/v__268.w);
          int4 __305;
          ushort4 __306;
            ushort4 __307;
              ushort4 __308;
                int4 v__269 = make_int4(2, 2, 2, 2);
                int4 v__270 = make_int4(0, 0, 0, 0);
                __308.x = (v__269.x>=v__270.x);
                __308.y = (v__269.y>=v__270.y);
                __308.z = (v__269.z>=v__270.z);
                __308.w = (v__269.w>=v__270.w);
              ushort4 __309;
                int4 v__271 = make_int4(0, 0, 0, 0);
                __309.x = (__303.x>=v__271.x);
                __309.y = (__303.y>=v__271.y);
                __309.z = (__303.z>=v__271.z);
                __309.w = (__303.w>=v__271.w);
              __307.x = (__308.x&&__309.x);
              __307.y = (__308.y&&__309.y);
              __307.z = (__308.z&&__309.z);
              __307.w = (__308.w&&__309.w);
            ushort4 __310;
              ushort4 __311;
                int4 v__272 = make_int4(2, 2, 2, 2);
                int4 v__273 = make_int4(0, 0, 0, 0);
                __311.x = (v__272.x<v__273.x);
                __311.y = (v__272.y<v__273.y);
                __311.z = (v__272.z<v__273.z);
                __311.w = (v__272.w<v__273.w);
              ushort4 __312;
                int4 v__274 = make_int4(0, 0, 0, 0);
                __312.x = (__303.x<=v__274.x);
                __312.y = (__303.y<=v__274.y);
                __312.z = (__303.z<=v__274.z);
                __312.w = (__303.w<=v__274.w);
              __310.x = (__311.x&&__312.x);
              __310.y = (__311.y&&__312.y);
              __310.z = (__311.z&&__312.z);
              __310.w = (__311.w&&__312.w);
            __306.x = (__307.x||__310.x);
            __306.y = (__307.y||__310.y);
            __306.z = (__307.z||__310.z);
            __306.w = (__307.w||__310.w);
          int4 __313;
            int4 v__275 = make_int4(1, 1, 1, 1);
            __313.x = (__304.x-v__275.x);
            __313.y = (__304.y-v__275.y);
            __313.z = (__304.z-v__275.z);
            __313.w = (__304.w-v__275.w);
          __305.x = (bool(__306.x)?__304.x:__313.x);
          __305.y = (bool(__306.y)?__304.y:__313.y);
          __305.z = (bool(__306.z)?__304.z:__313.z);
          __305.w = (bool(__306.w)?__304.w:__313.w);
          __302.x = (v__264.x+__305.x);
          __302.y = (v__264.y+__305.y);
          __302.z = (v__264.z+__305.z);
          __302.w = (v__264.w+__305.w);
        int v__276 = ((0x000000ff << 0) & (B[__302.x] << 0))|((0x000000ff << 8) & (B[__302.y] << 8))|((0x000000ff << 16) & (B[__302.z] << 16))|((0x000000ff << 24) & (B[__302.w] << 24));
        __301.x = (int)(((char)(v__276 >> 0)));
        __301.y = (int)(((char)(v__276 >> 8)));
        __301.z = (int)(((char)(v__276 >> 16)));
        __301.w = (int)(((char)(v__276 >> 24)));
        int4 __314;
          int4 __315;
            int4 v__277 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__278 = make_int4(2, 2, 2, 2);
            __315.x = (v__277.x%v__278.x);
            __315.y = (v__277.y%v__278.y);
            __315.z = (v__277.z%v__278.z);
            __315.w = (v__277.w%v__278.w);
          int4 __316;
          ushort4 __317;
            ushort4 __318;
              ushort4 __319;
                int4 v__279 = make_int4(2, 2, 2, 2);
                int4 v__280 = make_int4(0, 0, 0, 0);
                __319.x = (v__279.x>=v__280.x);
                __319.y = (v__279.y>=v__280.y);
                __319.z = (v__279.z>=v__280.z);
                __319.w = (v__279.w>=v__280.w);
              ushort4 __320;
                int4 v__281 = make_int4(0, 0, 0, 0);
                __320.x = (__315.x>=v__281.x);
                __320.y = (__315.y>=v__281.y);
                __320.z = (__315.z>=v__281.z);
                __320.w = (__315.w>=v__281.w);
              __318.x = (__319.x&&__320.x);
              __318.y = (__319.y&&__320.y);
              __318.z = (__319.z&&__320.z);
              __318.w = (__319.w&&__320.w);
            ushort4 __321;
              ushort4 __322;
                int4 v__282 = make_int4(2, 2, 2, 2);
                int4 v__283 = make_int4(0, 0, 0, 0);
                __322.x = (v__282.x<v__283.x);
                __322.y = (v__282.y<v__283.y);
                __322.z = (v__282.z<v__283.z);
                __322.w = (v__282.w<v__283.w);
              ushort4 __323;
                int4 v__284 = make_int4(0, 0, 0, 0);
                __323.x = (__315.x<=v__284.x);
                __323.y = (__315.y<=v__284.y);
                __323.z = (__315.z<=v__284.z);
                __323.w = (__315.w<=v__284.w);
              __321.x = (__322.x&&__323.x);
              __321.y = (__322.y&&__323.y);
              __321.z = (__322.z&&__323.z);
              __321.w = (__322.w&&__323.w);
            __317.x = (__318.x||__321.x);
            __317.y = (__318.y||__321.y);
            __317.z = (__318.z||__321.z);
            __317.w = (__318.w||__321.w);
          int4 __324;
            int4 v__285 = make_int4(2, 2, 2, 2);
            __324.x = (__315.x+v__285.x);
            __324.y = (__315.y+v__285.y);
            __324.z = (__315.z+v__285.z);
            __324.w = (__315.w+v__285.w);
          __316.x = (bool(__317.x)?__315.x:__324.x);
          __316.y = (bool(__317.y)?__315.y:__324.y);
          __316.z = (bool(__317.z)?__315.z:__324.z);
          __316.w = (bool(__317.w)?__315.w:__324.w);
          int4 v__286 = make_int4(4, 4, 4, 4);
          __314.x = (__316.x*v__286.x);
          __314.y = (__316.y*v__286.y);
          __314.z = (__316.z*v__286.z);
          __314.w = (__316.w*v__286.w);
        __300.x = (__301.x >> __314.x);
        __300.y = (__301.y >> __314.y);
        __300.z = (__301.z >> __314.z);
        __300.w = (__301.w >> __314.w);
      int4 v__287 = make_int4(15, 15, 15, 15);
      __299.x = (__300.x & v__287.x);
      __299.y = (__300.y & v__287.y);
      __299.z = (__300.z & v__287.z);
      __299.w = (__300.w & v__287.w);
    ((half2*)(&(__298.x)))->x = (half)(__299.x);
    ((half2*)(&(__298.x)))->y = (half)(__299.y);
    ((half2*)(&(__298.y)))->x = (half)(__299.z);
    ((half2*)(&(__298.y)))->y = (half)(__299.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 3672)) = __298;
    uint2 __325;
    int4 __326;
      int4 __327;
        int4 __328;
        int4 __329;
          int4 v__288 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 98304), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 98304), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 98304), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 98304));
          int4 __330;
            int4 v__289 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__290 = make_int4(2, 2, 2, 2);
            __330.x = (v__289.x%v__290.x);
            __330.y = (v__289.y%v__290.y);
            __330.z = (v__289.z%v__290.z);
            __330.w = (v__289.w%v__290.w);
          int4 __331;
            int4 v__291 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__292 = make_int4(2, 2, 2, 2);
            __331.x = (v__291.x/v__292.x);
            __331.y = (v__291.y/v__292.y);
            __331.z = (v__291.z/v__292.z);
            __331.w = (v__291.w/v__292.w);
          int4 __332;
          ushort4 __333;
            ushort4 __334;
              ushort4 __335;
                int4 v__293 = make_int4(2, 2, 2, 2);
                int4 v__294 = make_int4(0, 0, 0, 0);
                __335.x = (v__293.x>=v__294.x);
                __335.y = (v__293.y>=v__294.y);
                __335.z = (v__293.z>=v__294.z);
                __335.w = (v__293.w>=v__294.w);
              ushort4 __336;
                int4 v__295 = make_int4(0, 0, 0, 0);
                __336.x = (__330.x>=v__295.x);
                __336.y = (__330.y>=v__295.y);
                __336.z = (__330.z>=v__295.z);
                __336.w = (__330.w>=v__295.w);
              __334.x = (__335.x&&__336.x);
              __334.y = (__335.y&&__336.y);
              __334.z = (__335.z&&__336.z);
              __334.w = (__335.w&&__336.w);
            ushort4 __337;
              ushort4 __338;
                int4 v__296 = make_int4(2, 2, 2, 2);
                int4 v__297 = make_int4(0, 0, 0, 0);
                __338.x = (v__296.x<v__297.x);
                __338.y = (v__296.y<v__297.y);
                __338.z = (v__296.z<v__297.z);
                __338.w = (v__296.w<v__297.w);
              ushort4 __339;
                int4 v__298 = make_int4(0, 0, 0, 0);
                __339.x = (__330.x<=v__298.x);
                __339.y = (__330.y<=v__298.y);
                __339.z = (__330.z<=v__298.z);
                __339.w = (__330.w<=v__298.w);
              __337.x = (__338.x&&__339.x);
              __337.y = (__338.y&&__339.y);
              __337.z = (__338.z&&__339.z);
              __337.w = (__338.w&&__339.w);
            __333.x = (__334.x||__337.x);
            __333.y = (__334.y||__337.y);
            __333.z = (__334.z||__337.z);
            __333.w = (__334.w||__337.w);
          int4 __340;
            int4 v__299 = make_int4(1, 1, 1, 1);
            __340.x = (__331.x-v__299.x);
            __340.y = (__331.y-v__299.y);
            __340.z = (__331.z-v__299.z);
            __340.w = (__331.w-v__299.w);
          __332.x = (bool(__333.x)?__331.x:__340.x);
          __332.y = (bool(__333.y)?__331.y:__340.y);
          __332.z = (bool(__333.z)?__331.z:__340.z);
          __332.w = (bool(__333.w)?__331.w:__340.w);
          __329.x = (v__288.x+__332.x);
          __329.y = (v__288.y+__332.y);
          __329.z = (v__288.z+__332.z);
          __329.w = (v__288.w+__332.w);
        int v__300 = ((0x000000ff << 0) & (B[__329.x] << 0))|((0x000000ff << 8) & (B[__329.y] << 8))|((0x000000ff << 16) & (B[__329.z] << 16))|((0x000000ff << 24) & (B[__329.w] << 24));
        __328.x = (int)(((char)(v__300 >> 0)));
        __328.y = (int)(((char)(v__300 >> 8)));
        __328.z = (int)(((char)(v__300 >> 16)));
        __328.w = (int)(((char)(v__300 >> 24)));
        int4 __341;
          int4 __342;
            int4 v__301 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__302 = make_int4(2, 2, 2, 2);
            __342.x = (v__301.x%v__302.x);
            __342.y = (v__301.y%v__302.y);
            __342.z = (v__301.z%v__302.z);
            __342.w = (v__301.w%v__302.w);
          int4 __343;
          ushort4 __344;
            ushort4 __345;
              ushort4 __346;
                int4 v__303 = make_int4(2, 2, 2, 2);
                int4 v__304 = make_int4(0, 0, 0, 0);
                __346.x = (v__303.x>=v__304.x);
                __346.y = (v__303.y>=v__304.y);
                __346.z = (v__303.z>=v__304.z);
                __346.w = (v__303.w>=v__304.w);
              ushort4 __347;
                int4 v__305 = make_int4(0, 0, 0, 0);
                __347.x = (__342.x>=v__305.x);
                __347.y = (__342.y>=v__305.y);
                __347.z = (__342.z>=v__305.z);
                __347.w = (__342.w>=v__305.w);
              __345.x = (__346.x&&__347.x);
              __345.y = (__346.y&&__347.y);
              __345.z = (__346.z&&__347.z);
              __345.w = (__346.w&&__347.w);
            ushort4 __348;
              ushort4 __349;
                int4 v__306 = make_int4(2, 2, 2, 2);
                int4 v__307 = make_int4(0, 0, 0, 0);
                __349.x = (v__306.x<v__307.x);
                __349.y = (v__306.y<v__307.y);
                __349.z = (v__306.z<v__307.z);
                __349.w = (v__306.w<v__307.w);
              ushort4 __350;
                int4 v__308 = make_int4(0, 0, 0, 0);
                __350.x = (__342.x<=v__308.x);
                __350.y = (__342.y<=v__308.y);
                __350.z = (__342.z<=v__308.z);
                __350.w = (__342.w<=v__308.w);
              __348.x = (__349.x&&__350.x);
              __348.y = (__349.y&&__350.y);
              __348.z = (__349.z&&__350.z);
              __348.w = (__349.w&&__350.w);
            __344.x = (__345.x||__348.x);
            __344.y = (__345.y||__348.y);
            __344.z = (__345.z||__348.z);
            __344.w = (__345.w||__348.w);
          int4 __351;
            int4 v__309 = make_int4(2, 2, 2, 2);
            __351.x = (__342.x+v__309.x);
            __351.y = (__342.y+v__309.y);
            __351.z = (__342.z+v__309.z);
            __351.w = (__342.w+v__309.w);
          __343.x = (bool(__344.x)?__342.x:__351.x);
          __343.y = (bool(__344.y)?__342.y:__351.y);
          __343.z = (bool(__344.z)?__342.z:__351.z);
          __343.w = (bool(__344.w)?__342.w:__351.w);
          int4 v__310 = make_int4(4, 4, 4, 4);
          __341.x = (__343.x*v__310.x);
          __341.y = (__343.y*v__310.y);
          __341.z = (__343.z*v__310.z);
          __341.w = (__343.w*v__310.w);
        __327.x = (__328.x >> __341.x);
        __327.y = (__328.y >> __341.y);
        __327.z = (__328.z >> __341.z);
        __327.w = (__328.w >> __341.w);
      int4 v__311 = make_int4(15, 15, 15, 15);
      __326.x = (__327.x & v__311.x);
      __326.y = (__327.y & v__311.y);
      __326.z = (__327.z & v__311.z);
      __326.w = (__327.w & v__311.w);
    ((half2*)(&(__325.x)))->x = (half)(__326.x);
    ((half2*)(&(__325.x)))->y = (half)(__326.y);
    ((half2*)(&(__325.y)))->x = (half)(__326.z);
    ((half2*)(&(__325.y)))->y = (half)(__326.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 3808)) = __325;
    uint2 __352;
    int4 __353;
      int4 __354;
        int4 __355;
        int4 __356;
          int4 v__312 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 106496), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 106496), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 106496), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 106496));
          int4 __357;
            int4 v__313 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__314 = make_int4(2, 2, 2, 2);
            __357.x = (v__313.x%v__314.x);
            __357.y = (v__313.y%v__314.y);
            __357.z = (v__313.z%v__314.z);
            __357.w = (v__313.w%v__314.w);
          int4 __358;
            int4 v__315 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__316 = make_int4(2, 2, 2, 2);
            __358.x = (v__315.x/v__316.x);
            __358.y = (v__315.y/v__316.y);
            __358.z = (v__315.z/v__316.z);
            __358.w = (v__315.w/v__316.w);
          int4 __359;
          ushort4 __360;
            ushort4 __361;
              ushort4 __362;
                int4 v__317 = make_int4(2, 2, 2, 2);
                int4 v__318 = make_int4(0, 0, 0, 0);
                __362.x = (v__317.x>=v__318.x);
                __362.y = (v__317.y>=v__318.y);
                __362.z = (v__317.z>=v__318.z);
                __362.w = (v__317.w>=v__318.w);
              ushort4 __363;
                int4 v__319 = make_int4(0, 0, 0, 0);
                __363.x = (__357.x>=v__319.x);
                __363.y = (__357.y>=v__319.y);
                __363.z = (__357.z>=v__319.z);
                __363.w = (__357.w>=v__319.w);
              __361.x = (__362.x&&__363.x);
              __361.y = (__362.y&&__363.y);
              __361.z = (__362.z&&__363.z);
              __361.w = (__362.w&&__363.w);
            ushort4 __364;
              ushort4 __365;
                int4 v__320 = make_int4(2, 2, 2, 2);
                int4 v__321 = make_int4(0, 0, 0, 0);
                __365.x = (v__320.x<v__321.x);
                __365.y = (v__320.y<v__321.y);
                __365.z = (v__320.z<v__321.z);
                __365.w = (v__320.w<v__321.w);
              ushort4 __366;
                int4 v__322 = make_int4(0, 0, 0, 0);
                __366.x = (__357.x<=v__322.x);
                __366.y = (__357.y<=v__322.y);
                __366.z = (__357.z<=v__322.z);
                __366.w = (__357.w<=v__322.w);
              __364.x = (__365.x&&__366.x);
              __364.y = (__365.y&&__366.y);
              __364.z = (__365.z&&__366.z);
              __364.w = (__365.w&&__366.w);
            __360.x = (__361.x||__364.x);
            __360.y = (__361.y||__364.y);
            __360.z = (__361.z||__364.z);
            __360.w = (__361.w||__364.w);
          int4 __367;
            int4 v__323 = make_int4(1, 1, 1, 1);
            __367.x = (__358.x-v__323.x);
            __367.y = (__358.y-v__323.y);
            __367.z = (__358.z-v__323.z);
            __367.w = (__358.w-v__323.w);
          __359.x = (bool(__360.x)?__358.x:__367.x);
          __359.y = (bool(__360.y)?__358.y:__367.y);
          __359.z = (bool(__360.z)?__358.z:__367.z);
          __359.w = (bool(__360.w)?__358.w:__367.w);
          __356.x = (v__312.x+__359.x);
          __356.y = (v__312.y+__359.y);
          __356.z = (v__312.z+__359.z);
          __356.w = (v__312.w+__359.w);
        int v__324 = ((0x000000ff << 0) & (B[__356.x] << 0))|((0x000000ff << 8) & (B[__356.y] << 8))|((0x000000ff << 16) & (B[__356.z] << 16))|((0x000000ff << 24) & (B[__356.w] << 24));
        __355.x = (int)(((char)(v__324 >> 0)));
        __355.y = (int)(((char)(v__324 >> 8)));
        __355.z = (int)(((char)(v__324 >> 16)));
        __355.w = (int)(((char)(v__324 >> 24)));
        int4 __368;
          int4 __369;
            int4 v__325 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__326 = make_int4(2, 2, 2, 2);
            __369.x = (v__325.x%v__326.x);
            __369.y = (v__325.y%v__326.y);
            __369.z = (v__325.z%v__326.z);
            __369.w = (v__325.w%v__326.w);
          int4 __370;
          ushort4 __371;
            ushort4 __372;
              ushort4 __373;
                int4 v__327 = make_int4(2, 2, 2, 2);
                int4 v__328 = make_int4(0, 0, 0, 0);
                __373.x = (v__327.x>=v__328.x);
                __373.y = (v__327.y>=v__328.y);
                __373.z = (v__327.z>=v__328.z);
                __373.w = (v__327.w>=v__328.w);
              ushort4 __374;
                int4 v__329 = make_int4(0, 0, 0, 0);
                __374.x = (__369.x>=v__329.x);
                __374.y = (__369.y>=v__329.y);
                __374.z = (__369.z>=v__329.z);
                __374.w = (__369.w>=v__329.w);
              __372.x = (__373.x&&__374.x);
              __372.y = (__373.y&&__374.y);
              __372.z = (__373.z&&__374.z);
              __372.w = (__373.w&&__374.w);
            ushort4 __375;
              ushort4 __376;
                int4 v__330 = make_int4(2, 2, 2, 2);
                int4 v__331 = make_int4(0, 0, 0, 0);
                __376.x = (v__330.x<v__331.x);
                __376.y = (v__330.y<v__331.y);
                __376.z = (v__330.z<v__331.z);
                __376.w = (v__330.w<v__331.w);
              ushort4 __377;
                int4 v__332 = make_int4(0, 0, 0, 0);
                __377.x = (__369.x<=v__332.x);
                __377.y = (__369.y<=v__332.y);
                __377.z = (__369.z<=v__332.z);
                __377.w = (__369.w<=v__332.w);
              __375.x = (__376.x&&__377.x);
              __375.y = (__376.y&&__377.y);
              __375.z = (__376.z&&__377.z);
              __375.w = (__376.w&&__377.w);
            __371.x = (__372.x||__375.x);
            __371.y = (__372.y||__375.y);
            __371.z = (__372.z||__375.z);
            __371.w = (__372.w||__375.w);
          int4 __378;
            int4 v__333 = make_int4(2, 2, 2, 2);
            __378.x = (__369.x+v__333.x);
            __378.y = (__369.y+v__333.y);
            __378.z = (__369.z+v__333.z);
            __378.w = (__369.w+v__333.w);
          __370.x = (bool(__371.x)?__369.x:__378.x);
          __370.y = (bool(__371.y)?__369.y:__378.y);
          __370.z = (bool(__371.z)?__369.z:__378.z);
          __370.w = (bool(__371.w)?__369.w:__378.w);
          int4 v__334 = make_int4(4, 4, 4, 4);
          __368.x = (__370.x*v__334.x);
          __368.y = (__370.y*v__334.y);
          __368.z = (__370.z*v__334.z);
          __368.w = (__370.w*v__334.w);
        __354.x = (__355.x >> __368.x);
        __354.y = (__355.y >> __368.y);
        __354.z = (__355.z >> __368.z);
        __354.w = (__355.w >> __368.w);
      int4 v__335 = make_int4(15, 15, 15, 15);
      __353.x = (__354.x & v__335.x);
      __353.y = (__354.y & v__335.y);
      __353.z = (__354.z & v__335.z);
      __353.w = (__354.w & v__335.w);
    ((half2*)(&(__352.x)))->x = (half)(__353.x);
    ((half2*)(&(__352.x)))->y = (half)(__353.y);
    ((half2*)(&(__352.y)))->x = (half)(__353.z);
    ((half2*)(&(__352.y)))->y = (half)(__353.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 3944)) = __352;
    uint2 __379;
    int4 __380;
      int4 __381;
        int4 __382;
        int4 __383;
          int4 v__336 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 114688), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 114688), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 114688), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 114688));
          int4 __384;
            int4 v__337 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__338 = make_int4(2, 2, 2, 2);
            __384.x = (v__337.x%v__338.x);
            __384.y = (v__337.y%v__338.y);
            __384.z = (v__337.z%v__338.z);
            __384.w = (v__337.w%v__338.w);
          int4 __385;
            int4 v__339 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__340 = make_int4(2, 2, 2, 2);
            __385.x = (v__339.x/v__340.x);
            __385.y = (v__339.y/v__340.y);
            __385.z = (v__339.z/v__340.z);
            __385.w = (v__339.w/v__340.w);
          int4 __386;
          ushort4 __387;
            ushort4 __388;
              ushort4 __389;
                int4 v__341 = make_int4(2, 2, 2, 2);
                int4 v__342 = make_int4(0, 0, 0, 0);
                __389.x = (v__341.x>=v__342.x);
                __389.y = (v__341.y>=v__342.y);
                __389.z = (v__341.z>=v__342.z);
                __389.w = (v__341.w>=v__342.w);
              ushort4 __390;
                int4 v__343 = make_int4(0, 0, 0, 0);
                __390.x = (__384.x>=v__343.x);
                __390.y = (__384.y>=v__343.y);
                __390.z = (__384.z>=v__343.z);
                __390.w = (__384.w>=v__343.w);
              __388.x = (__389.x&&__390.x);
              __388.y = (__389.y&&__390.y);
              __388.z = (__389.z&&__390.z);
              __388.w = (__389.w&&__390.w);
            ushort4 __391;
              ushort4 __392;
                int4 v__344 = make_int4(2, 2, 2, 2);
                int4 v__345 = make_int4(0, 0, 0, 0);
                __392.x = (v__344.x<v__345.x);
                __392.y = (v__344.y<v__345.y);
                __392.z = (v__344.z<v__345.z);
                __392.w = (v__344.w<v__345.w);
              ushort4 __393;
                int4 v__346 = make_int4(0, 0, 0, 0);
                __393.x = (__384.x<=v__346.x);
                __393.y = (__384.y<=v__346.y);
                __393.z = (__384.z<=v__346.z);
                __393.w = (__384.w<=v__346.w);
              __391.x = (__392.x&&__393.x);
              __391.y = (__392.y&&__393.y);
              __391.z = (__392.z&&__393.z);
              __391.w = (__392.w&&__393.w);
            __387.x = (__388.x||__391.x);
            __387.y = (__388.y||__391.y);
            __387.z = (__388.z||__391.z);
            __387.w = (__388.w||__391.w);
          int4 __394;
            int4 v__347 = make_int4(1, 1, 1, 1);
            __394.x = (__385.x-v__347.x);
            __394.y = (__385.y-v__347.y);
            __394.z = (__385.z-v__347.z);
            __394.w = (__385.w-v__347.w);
          __386.x = (bool(__387.x)?__385.x:__394.x);
          __386.y = (bool(__387.y)?__385.y:__394.y);
          __386.z = (bool(__387.z)?__385.z:__394.z);
          __386.w = (bool(__387.w)?__385.w:__394.w);
          __383.x = (v__336.x+__386.x);
          __383.y = (v__336.y+__386.y);
          __383.z = (v__336.z+__386.z);
          __383.w = (v__336.w+__386.w);
        int v__348 = ((0x000000ff << 0) & (B[__383.x] << 0))|((0x000000ff << 8) & (B[__383.y] << 8))|((0x000000ff << 16) & (B[__383.z] << 16))|((0x000000ff << 24) & (B[__383.w] << 24));
        __382.x = (int)(((char)(v__348 >> 0)));
        __382.y = (int)(((char)(v__348 >> 8)));
        __382.z = (int)(((char)(v__348 >> 16)));
        __382.w = (int)(((char)(v__348 >> 24)));
        int4 __395;
          int4 __396;
            int4 v__349 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__350 = make_int4(2, 2, 2, 2);
            __396.x = (v__349.x%v__350.x);
            __396.y = (v__349.y%v__350.y);
            __396.z = (v__349.z%v__350.z);
            __396.w = (v__349.w%v__350.w);
          int4 __397;
          ushort4 __398;
            ushort4 __399;
              ushort4 __400;
                int4 v__351 = make_int4(2, 2, 2, 2);
                int4 v__352 = make_int4(0, 0, 0, 0);
                __400.x = (v__351.x>=v__352.x);
                __400.y = (v__351.y>=v__352.y);
                __400.z = (v__351.z>=v__352.z);
                __400.w = (v__351.w>=v__352.w);
              ushort4 __401;
                int4 v__353 = make_int4(0, 0, 0, 0);
                __401.x = (__396.x>=v__353.x);
                __401.y = (__396.y>=v__353.y);
                __401.z = (__396.z>=v__353.z);
                __401.w = (__396.w>=v__353.w);
              __399.x = (__400.x&&__401.x);
              __399.y = (__400.y&&__401.y);
              __399.z = (__400.z&&__401.z);
              __399.w = (__400.w&&__401.w);
            ushort4 __402;
              ushort4 __403;
                int4 v__354 = make_int4(2, 2, 2, 2);
                int4 v__355 = make_int4(0, 0, 0, 0);
                __403.x = (v__354.x<v__355.x);
                __403.y = (v__354.y<v__355.y);
                __403.z = (v__354.z<v__355.z);
                __403.w = (v__354.w<v__355.w);
              ushort4 __404;
                int4 v__356 = make_int4(0, 0, 0, 0);
                __404.x = (__396.x<=v__356.x);
                __404.y = (__396.y<=v__356.y);
                __404.z = (__396.z<=v__356.z);
                __404.w = (__396.w<=v__356.w);
              __402.x = (__403.x&&__404.x);
              __402.y = (__403.y&&__404.y);
              __402.z = (__403.z&&__404.z);
              __402.w = (__403.w&&__404.w);
            __398.x = (__399.x||__402.x);
            __398.y = (__399.y||__402.y);
            __398.z = (__399.z||__402.z);
            __398.w = (__399.w||__402.w);
          int4 __405;
            int4 v__357 = make_int4(2, 2, 2, 2);
            __405.x = (__396.x+v__357.x);
            __405.y = (__396.y+v__357.y);
            __405.z = (__396.z+v__357.z);
            __405.w = (__396.w+v__357.w);
          __397.x = (bool(__398.x)?__396.x:__405.x);
          __397.y = (bool(__398.y)?__396.y:__405.y);
          __397.z = (bool(__398.z)?__396.z:__405.z);
          __397.w = (bool(__398.w)?__396.w:__405.w);
          int4 v__358 = make_int4(4, 4, 4, 4);
          __395.x = (__397.x*v__358.x);
          __395.y = (__397.y*v__358.y);
          __395.z = (__397.z*v__358.z);
          __395.w = (__397.w*v__358.w);
        __381.x = (__382.x >> __395.x);
        __381.y = (__382.y >> __395.y);
        __381.z = (__382.z >> __395.z);
        __381.w = (__382.w >> __395.w);
      int4 v__359 = make_int4(15, 15, 15, 15);
      __380.x = (__381.x & v__359.x);
      __380.y = (__381.y & v__359.y);
      __380.z = (__381.z & v__359.z);
      __380.w = (__381.w & v__359.w);
    ((half2*)(&(__379.x)))->x = (half)(__380.x);
    ((half2*)(&(__379.x)))->y = (half)(__380.y);
    ((half2*)(&(__379.y)))->x = (half)(__380.z);
    ((half2*)(&(__379.y)))->y = (half)(__380.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 4080)) = __379;
    uint2 __406;
    int4 __407;
      int4 __408;
        int4 __409;
        int4 __410;
          int4 v__360 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 122880), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 122880), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 122880), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 122880));
          int4 __411;
            int4 v__361 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__362 = make_int4(2, 2, 2, 2);
            __411.x = (v__361.x%v__362.x);
            __411.y = (v__361.y%v__362.y);
            __411.z = (v__361.z%v__362.z);
            __411.w = (v__361.w%v__362.w);
          int4 __412;
            int4 v__363 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__364 = make_int4(2, 2, 2, 2);
            __412.x = (v__363.x/v__364.x);
            __412.y = (v__363.y/v__364.y);
            __412.z = (v__363.z/v__364.z);
            __412.w = (v__363.w/v__364.w);
          int4 __413;
          ushort4 __414;
            ushort4 __415;
              ushort4 __416;
                int4 v__365 = make_int4(2, 2, 2, 2);
                int4 v__366 = make_int4(0, 0, 0, 0);
                __416.x = (v__365.x>=v__366.x);
                __416.y = (v__365.y>=v__366.y);
                __416.z = (v__365.z>=v__366.z);
                __416.w = (v__365.w>=v__366.w);
              ushort4 __417;
                int4 v__367 = make_int4(0, 0, 0, 0);
                __417.x = (__411.x>=v__367.x);
                __417.y = (__411.y>=v__367.y);
                __417.z = (__411.z>=v__367.z);
                __417.w = (__411.w>=v__367.w);
              __415.x = (__416.x&&__417.x);
              __415.y = (__416.y&&__417.y);
              __415.z = (__416.z&&__417.z);
              __415.w = (__416.w&&__417.w);
            ushort4 __418;
              ushort4 __419;
                int4 v__368 = make_int4(2, 2, 2, 2);
                int4 v__369 = make_int4(0, 0, 0, 0);
                __419.x = (v__368.x<v__369.x);
                __419.y = (v__368.y<v__369.y);
                __419.z = (v__368.z<v__369.z);
                __419.w = (v__368.w<v__369.w);
              ushort4 __420;
                int4 v__370 = make_int4(0, 0, 0, 0);
                __420.x = (__411.x<=v__370.x);
                __420.y = (__411.y<=v__370.y);
                __420.z = (__411.z<=v__370.z);
                __420.w = (__411.w<=v__370.w);
              __418.x = (__419.x&&__420.x);
              __418.y = (__419.y&&__420.y);
              __418.z = (__419.z&&__420.z);
              __418.w = (__419.w&&__420.w);
            __414.x = (__415.x||__418.x);
            __414.y = (__415.y||__418.y);
            __414.z = (__415.z||__418.z);
            __414.w = (__415.w||__418.w);
          int4 __421;
            int4 v__371 = make_int4(1, 1, 1, 1);
            __421.x = (__412.x-v__371.x);
            __421.y = (__412.y-v__371.y);
            __421.z = (__412.z-v__371.z);
            __421.w = (__412.w-v__371.w);
          __413.x = (bool(__414.x)?__412.x:__421.x);
          __413.y = (bool(__414.y)?__412.y:__421.y);
          __413.z = (bool(__414.z)?__412.z:__421.z);
          __413.w = (bool(__414.w)?__412.w:__421.w);
          __410.x = (v__360.x+__413.x);
          __410.y = (v__360.y+__413.y);
          __410.z = (v__360.z+__413.z);
          __410.w = (v__360.w+__413.w);
        int v__372 = ((0x000000ff << 0) & (B[__410.x] << 0))|((0x000000ff << 8) & (B[__410.y] << 8))|((0x000000ff << 16) & (B[__410.z] << 16))|((0x000000ff << 24) & (B[__410.w] << 24));
        __409.x = (int)(((char)(v__372 >> 0)));
        __409.y = (int)(((char)(v__372 >> 8)));
        __409.z = (int)(((char)(v__372 >> 16)));
        __409.w = (int)(((char)(v__372 >> 24)));
        int4 __422;
          int4 __423;
            int4 v__373 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__374 = make_int4(2, 2, 2, 2);
            __423.x = (v__373.x%v__374.x);
            __423.y = (v__373.y%v__374.y);
            __423.z = (v__373.z%v__374.z);
            __423.w = (v__373.w%v__374.w);
          int4 __424;
          ushort4 __425;
            ushort4 __426;
              ushort4 __427;
                int4 v__375 = make_int4(2, 2, 2, 2);
                int4 v__376 = make_int4(0, 0, 0, 0);
                __427.x = (v__375.x>=v__376.x);
                __427.y = (v__375.y>=v__376.y);
                __427.z = (v__375.z>=v__376.z);
                __427.w = (v__375.w>=v__376.w);
              ushort4 __428;
                int4 v__377 = make_int4(0, 0, 0, 0);
                __428.x = (__423.x>=v__377.x);
                __428.y = (__423.y>=v__377.y);
                __428.z = (__423.z>=v__377.z);
                __428.w = (__423.w>=v__377.w);
              __426.x = (__427.x&&__428.x);
              __426.y = (__427.y&&__428.y);
              __426.z = (__427.z&&__428.z);
              __426.w = (__427.w&&__428.w);
            ushort4 __429;
              ushort4 __430;
                int4 v__378 = make_int4(2, 2, 2, 2);
                int4 v__379 = make_int4(0, 0, 0, 0);
                __430.x = (v__378.x<v__379.x);
                __430.y = (v__378.y<v__379.y);
                __430.z = (v__378.z<v__379.z);
                __430.w = (v__378.w<v__379.w);
              ushort4 __431;
                int4 v__380 = make_int4(0, 0, 0, 0);
                __431.x = (__423.x<=v__380.x);
                __431.y = (__423.y<=v__380.y);
                __431.z = (__423.z<=v__380.z);
                __431.w = (__423.w<=v__380.w);
              __429.x = (__430.x&&__431.x);
              __429.y = (__430.y&&__431.y);
              __429.z = (__430.z&&__431.z);
              __429.w = (__430.w&&__431.w);
            __425.x = (__426.x||__429.x);
            __425.y = (__426.y||__429.y);
            __425.z = (__426.z||__429.z);
            __425.w = (__426.w||__429.w);
          int4 __432;
            int4 v__381 = make_int4(2, 2, 2, 2);
            __432.x = (__423.x+v__381.x);
            __432.y = (__423.y+v__381.y);
            __432.z = (__423.z+v__381.z);
            __432.w = (__423.w+v__381.w);
          __424.x = (bool(__425.x)?__423.x:__432.x);
          __424.y = (bool(__425.y)?__423.y:__432.y);
          __424.z = (bool(__425.z)?__423.z:__432.z);
          __424.w = (bool(__425.w)?__423.w:__432.w);
          int4 v__382 = make_int4(4, 4, 4, 4);
          __422.x = (__424.x*v__382.x);
          __422.y = (__424.y*v__382.y);
          __422.z = (__424.z*v__382.z);
          __422.w = (__424.w*v__382.w);
        __408.x = (__409.x >> __422.x);
        __408.y = (__409.y >> __422.y);
        __408.z = (__409.z >> __422.z);
        __408.w = (__409.w >> __422.w);
      int4 v__383 = make_int4(15, 15, 15, 15);
      __407.x = (__408.x & v__383.x);
      __407.y = (__408.y & v__383.y);
      __407.z = (__408.z & v__383.z);
      __407.w = (__408.w & v__383.w);
    ((half2*)(&(__406.x)))->x = (half)(__407.x);
    ((half2*)(&(__406.x)))->y = (half)(__407.y);
    ((half2*)(&(__406.y)))->x = (half)(__407.z);
    ((half2*)(&(__406.y)))->y = (half)(__407.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 4216)) = __406;
    uint2 __433;
    int4 __434;
      int4 __435;
        int4 __436;
        int4 __437;
          int4 v__384 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 131072), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 131072), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 131072), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 131072));
          int4 __438;
            int4 v__385 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__386 = make_int4(2, 2, 2, 2);
            __438.x = (v__385.x%v__386.x);
            __438.y = (v__385.y%v__386.y);
            __438.z = (v__385.z%v__386.z);
            __438.w = (v__385.w%v__386.w);
          int4 __439;
            int4 v__387 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__388 = make_int4(2, 2, 2, 2);
            __439.x = (v__387.x/v__388.x);
            __439.y = (v__387.y/v__388.y);
            __439.z = (v__387.z/v__388.z);
            __439.w = (v__387.w/v__388.w);
          int4 __440;
          ushort4 __441;
            ushort4 __442;
              ushort4 __443;
                int4 v__389 = make_int4(2, 2, 2, 2);
                int4 v__390 = make_int4(0, 0, 0, 0);
                __443.x = (v__389.x>=v__390.x);
                __443.y = (v__389.y>=v__390.y);
                __443.z = (v__389.z>=v__390.z);
                __443.w = (v__389.w>=v__390.w);
              ushort4 __444;
                int4 v__391 = make_int4(0, 0, 0, 0);
                __444.x = (__438.x>=v__391.x);
                __444.y = (__438.y>=v__391.y);
                __444.z = (__438.z>=v__391.z);
                __444.w = (__438.w>=v__391.w);
              __442.x = (__443.x&&__444.x);
              __442.y = (__443.y&&__444.y);
              __442.z = (__443.z&&__444.z);
              __442.w = (__443.w&&__444.w);
            ushort4 __445;
              ushort4 __446;
                int4 v__392 = make_int4(2, 2, 2, 2);
                int4 v__393 = make_int4(0, 0, 0, 0);
                __446.x = (v__392.x<v__393.x);
                __446.y = (v__392.y<v__393.y);
                __446.z = (v__392.z<v__393.z);
                __446.w = (v__392.w<v__393.w);
              ushort4 __447;
                int4 v__394 = make_int4(0, 0, 0, 0);
                __447.x = (__438.x<=v__394.x);
                __447.y = (__438.y<=v__394.y);
                __447.z = (__438.z<=v__394.z);
                __447.w = (__438.w<=v__394.w);
              __445.x = (__446.x&&__447.x);
              __445.y = (__446.y&&__447.y);
              __445.z = (__446.z&&__447.z);
              __445.w = (__446.w&&__447.w);
            __441.x = (__442.x||__445.x);
            __441.y = (__442.y||__445.y);
            __441.z = (__442.z||__445.z);
            __441.w = (__442.w||__445.w);
          int4 __448;
            int4 v__395 = make_int4(1, 1, 1, 1);
            __448.x = (__439.x-v__395.x);
            __448.y = (__439.y-v__395.y);
            __448.z = (__439.z-v__395.z);
            __448.w = (__439.w-v__395.w);
          __440.x = (bool(__441.x)?__439.x:__448.x);
          __440.y = (bool(__441.y)?__439.y:__448.y);
          __440.z = (bool(__441.z)?__439.z:__448.z);
          __440.w = (bool(__441.w)?__439.w:__448.w);
          __437.x = (v__384.x+__440.x);
          __437.y = (v__384.y+__440.y);
          __437.z = (v__384.z+__440.z);
          __437.w = (v__384.w+__440.w);
        int v__396 = ((0x000000ff << 0) & (B[__437.x] << 0))|((0x000000ff << 8) & (B[__437.y] << 8))|((0x000000ff << 16) & (B[__437.z] << 16))|((0x000000ff << 24) & (B[__437.w] << 24));
        __436.x = (int)(((char)(v__396 >> 0)));
        __436.y = (int)(((char)(v__396 >> 8)));
        __436.z = (int)(((char)(v__396 >> 16)));
        __436.w = (int)(((char)(v__396 >> 24)));
        int4 __449;
          int4 __450;
            int4 v__397 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__398 = make_int4(2, 2, 2, 2);
            __450.x = (v__397.x%v__398.x);
            __450.y = (v__397.y%v__398.y);
            __450.z = (v__397.z%v__398.z);
            __450.w = (v__397.w%v__398.w);
          int4 __451;
          ushort4 __452;
            ushort4 __453;
              ushort4 __454;
                int4 v__399 = make_int4(2, 2, 2, 2);
                int4 v__400 = make_int4(0, 0, 0, 0);
                __454.x = (v__399.x>=v__400.x);
                __454.y = (v__399.y>=v__400.y);
                __454.z = (v__399.z>=v__400.z);
                __454.w = (v__399.w>=v__400.w);
              ushort4 __455;
                int4 v__401 = make_int4(0, 0, 0, 0);
                __455.x = (__450.x>=v__401.x);
                __455.y = (__450.y>=v__401.y);
                __455.z = (__450.z>=v__401.z);
                __455.w = (__450.w>=v__401.w);
              __453.x = (__454.x&&__455.x);
              __453.y = (__454.y&&__455.y);
              __453.z = (__454.z&&__455.z);
              __453.w = (__454.w&&__455.w);
            ushort4 __456;
              ushort4 __457;
                int4 v__402 = make_int4(2, 2, 2, 2);
                int4 v__403 = make_int4(0, 0, 0, 0);
                __457.x = (v__402.x<v__403.x);
                __457.y = (v__402.y<v__403.y);
                __457.z = (v__402.z<v__403.z);
                __457.w = (v__402.w<v__403.w);
              ushort4 __458;
                int4 v__404 = make_int4(0, 0, 0, 0);
                __458.x = (__450.x<=v__404.x);
                __458.y = (__450.y<=v__404.y);
                __458.z = (__450.z<=v__404.z);
                __458.w = (__450.w<=v__404.w);
              __456.x = (__457.x&&__458.x);
              __456.y = (__457.y&&__458.y);
              __456.z = (__457.z&&__458.z);
              __456.w = (__457.w&&__458.w);
            __452.x = (__453.x||__456.x);
            __452.y = (__453.y||__456.y);
            __452.z = (__453.z||__456.z);
            __452.w = (__453.w||__456.w);
          int4 __459;
            int4 v__405 = make_int4(2, 2, 2, 2);
            __459.x = (__450.x+v__405.x);
            __459.y = (__450.y+v__405.y);
            __459.z = (__450.z+v__405.z);
            __459.w = (__450.w+v__405.w);
          __451.x = (bool(__452.x)?__450.x:__459.x);
          __451.y = (bool(__452.y)?__450.y:__459.y);
          __451.z = (bool(__452.z)?__450.z:__459.z);
          __451.w = (bool(__452.w)?__450.w:__459.w);
          int4 v__406 = make_int4(4, 4, 4, 4);
          __449.x = (__451.x*v__406.x);
          __449.y = (__451.y*v__406.y);
          __449.z = (__451.z*v__406.z);
          __449.w = (__451.w*v__406.w);
        __435.x = (__436.x >> __449.x);
        __435.y = (__436.y >> __449.y);
        __435.z = (__436.z >> __449.z);
        __435.w = (__436.w >> __449.w);
      int4 v__407 = make_int4(15, 15, 15, 15);
      __434.x = (__435.x & v__407.x);
      __434.y = (__435.y & v__407.y);
      __434.z = (__435.z & v__407.z);
      __434.w = (__435.w & v__407.w);
    ((half2*)(&(__433.x)))->x = (half)(__434.x);
    ((half2*)(&(__433.x)))->y = (half)(__434.y);
    ((half2*)(&(__433.y)))->x = (half)(__434.z);
    ((half2*)(&(__433.y)))->y = (half)(__434.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 4352)) = __433;
    uint2 __460;
    int4 __461;
      int4 __462;
        int4 __463;
        int4 __464;
          int4 v__408 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 139264), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 139264), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 139264), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 139264));
          int4 __465;
            int4 v__409 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__410 = make_int4(2, 2, 2, 2);
            __465.x = (v__409.x%v__410.x);
            __465.y = (v__409.y%v__410.y);
            __465.z = (v__409.z%v__410.z);
            __465.w = (v__409.w%v__410.w);
          int4 __466;
            int4 v__411 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__412 = make_int4(2, 2, 2, 2);
            __466.x = (v__411.x/v__412.x);
            __466.y = (v__411.y/v__412.y);
            __466.z = (v__411.z/v__412.z);
            __466.w = (v__411.w/v__412.w);
          int4 __467;
          ushort4 __468;
            ushort4 __469;
              ushort4 __470;
                int4 v__413 = make_int4(2, 2, 2, 2);
                int4 v__414 = make_int4(0, 0, 0, 0);
                __470.x = (v__413.x>=v__414.x);
                __470.y = (v__413.y>=v__414.y);
                __470.z = (v__413.z>=v__414.z);
                __470.w = (v__413.w>=v__414.w);
              ushort4 __471;
                int4 v__415 = make_int4(0, 0, 0, 0);
                __471.x = (__465.x>=v__415.x);
                __471.y = (__465.y>=v__415.y);
                __471.z = (__465.z>=v__415.z);
                __471.w = (__465.w>=v__415.w);
              __469.x = (__470.x&&__471.x);
              __469.y = (__470.y&&__471.y);
              __469.z = (__470.z&&__471.z);
              __469.w = (__470.w&&__471.w);
            ushort4 __472;
              ushort4 __473;
                int4 v__416 = make_int4(2, 2, 2, 2);
                int4 v__417 = make_int4(0, 0, 0, 0);
                __473.x = (v__416.x<v__417.x);
                __473.y = (v__416.y<v__417.y);
                __473.z = (v__416.z<v__417.z);
                __473.w = (v__416.w<v__417.w);
              ushort4 __474;
                int4 v__418 = make_int4(0, 0, 0, 0);
                __474.x = (__465.x<=v__418.x);
                __474.y = (__465.y<=v__418.y);
                __474.z = (__465.z<=v__418.z);
                __474.w = (__465.w<=v__418.w);
              __472.x = (__473.x&&__474.x);
              __472.y = (__473.y&&__474.y);
              __472.z = (__473.z&&__474.z);
              __472.w = (__473.w&&__474.w);
            __468.x = (__469.x||__472.x);
            __468.y = (__469.y||__472.y);
            __468.z = (__469.z||__472.z);
            __468.w = (__469.w||__472.w);
          int4 __475;
            int4 v__419 = make_int4(1, 1, 1, 1);
            __475.x = (__466.x-v__419.x);
            __475.y = (__466.y-v__419.y);
            __475.z = (__466.z-v__419.z);
            __475.w = (__466.w-v__419.w);
          __467.x = (bool(__468.x)?__466.x:__475.x);
          __467.y = (bool(__468.y)?__466.y:__475.y);
          __467.z = (bool(__468.z)?__466.z:__475.z);
          __467.w = (bool(__468.w)?__466.w:__475.w);
          __464.x = (v__408.x+__467.x);
          __464.y = (v__408.y+__467.y);
          __464.z = (v__408.z+__467.z);
          __464.w = (v__408.w+__467.w);
        int v__420 = ((0x000000ff << 0) & (B[__464.x] << 0))|((0x000000ff << 8) & (B[__464.y] << 8))|((0x000000ff << 16) & (B[__464.z] << 16))|((0x000000ff << 24) & (B[__464.w] << 24));
        __463.x = (int)(((char)(v__420 >> 0)));
        __463.y = (int)(((char)(v__420 >> 8)));
        __463.z = (int)(((char)(v__420 >> 16)));
        __463.w = (int)(((char)(v__420 >> 24)));
        int4 __476;
          int4 __477;
            int4 v__421 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__422 = make_int4(2, 2, 2, 2);
            __477.x = (v__421.x%v__422.x);
            __477.y = (v__421.y%v__422.y);
            __477.z = (v__421.z%v__422.z);
            __477.w = (v__421.w%v__422.w);
          int4 __478;
          ushort4 __479;
            ushort4 __480;
              ushort4 __481;
                int4 v__423 = make_int4(2, 2, 2, 2);
                int4 v__424 = make_int4(0, 0, 0, 0);
                __481.x = (v__423.x>=v__424.x);
                __481.y = (v__423.y>=v__424.y);
                __481.z = (v__423.z>=v__424.z);
                __481.w = (v__423.w>=v__424.w);
              ushort4 __482;
                int4 v__425 = make_int4(0, 0, 0, 0);
                __482.x = (__477.x>=v__425.x);
                __482.y = (__477.y>=v__425.y);
                __482.z = (__477.z>=v__425.z);
                __482.w = (__477.w>=v__425.w);
              __480.x = (__481.x&&__482.x);
              __480.y = (__481.y&&__482.y);
              __480.z = (__481.z&&__482.z);
              __480.w = (__481.w&&__482.w);
            ushort4 __483;
              ushort4 __484;
                int4 v__426 = make_int4(2, 2, 2, 2);
                int4 v__427 = make_int4(0, 0, 0, 0);
                __484.x = (v__426.x<v__427.x);
                __484.y = (v__426.y<v__427.y);
                __484.z = (v__426.z<v__427.z);
                __484.w = (v__426.w<v__427.w);
              ushort4 __485;
                int4 v__428 = make_int4(0, 0, 0, 0);
                __485.x = (__477.x<=v__428.x);
                __485.y = (__477.y<=v__428.y);
                __485.z = (__477.z<=v__428.z);
                __485.w = (__477.w<=v__428.w);
              __483.x = (__484.x&&__485.x);
              __483.y = (__484.y&&__485.y);
              __483.z = (__484.z&&__485.z);
              __483.w = (__484.w&&__485.w);
            __479.x = (__480.x||__483.x);
            __479.y = (__480.y||__483.y);
            __479.z = (__480.z||__483.z);
            __479.w = (__480.w||__483.w);
          int4 __486;
            int4 v__429 = make_int4(2, 2, 2, 2);
            __486.x = (__477.x+v__429.x);
            __486.y = (__477.y+v__429.y);
            __486.z = (__477.z+v__429.z);
            __486.w = (__477.w+v__429.w);
          __478.x = (bool(__479.x)?__477.x:__486.x);
          __478.y = (bool(__479.y)?__477.y:__486.y);
          __478.z = (bool(__479.z)?__477.z:__486.z);
          __478.w = (bool(__479.w)?__477.w:__486.w);
          int4 v__430 = make_int4(4, 4, 4, 4);
          __476.x = (__478.x*v__430.x);
          __476.y = (__478.y*v__430.y);
          __476.z = (__478.z*v__430.z);
          __476.w = (__478.w*v__430.w);
        __462.x = (__463.x >> __476.x);
        __462.y = (__463.y >> __476.y);
        __462.z = (__463.z >> __476.z);
        __462.w = (__463.w >> __476.w);
      int4 v__431 = make_int4(15, 15, 15, 15);
      __461.x = (__462.x & v__431.x);
      __461.y = (__462.y & v__431.y);
      __461.z = (__462.z & v__431.z);
      __461.w = (__462.w & v__431.w);
    ((half2*)(&(__460.x)))->x = (half)(__461.x);
    ((half2*)(&(__460.x)))->y = (half)(__461.y);
    ((half2*)(&(__460.y)))->x = (half)(__461.z);
    ((half2*)(&(__460.y)))->y = (half)(__461.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 4488)) = __460;
    uint2 __487;
    int4 __488;
      int4 __489;
        int4 __490;
        int4 __491;
          int4 v__432 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 147456), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 147456), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 147456), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 147456));
          int4 __492;
            int4 v__433 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__434 = make_int4(2, 2, 2, 2);
            __492.x = (v__433.x%v__434.x);
            __492.y = (v__433.y%v__434.y);
            __492.z = (v__433.z%v__434.z);
            __492.w = (v__433.w%v__434.w);
          int4 __493;
            int4 v__435 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__436 = make_int4(2, 2, 2, 2);
            __493.x = (v__435.x/v__436.x);
            __493.y = (v__435.y/v__436.y);
            __493.z = (v__435.z/v__436.z);
            __493.w = (v__435.w/v__436.w);
          int4 __494;
          ushort4 __495;
            ushort4 __496;
              ushort4 __497;
                int4 v__437 = make_int4(2, 2, 2, 2);
                int4 v__438 = make_int4(0, 0, 0, 0);
                __497.x = (v__437.x>=v__438.x);
                __497.y = (v__437.y>=v__438.y);
                __497.z = (v__437.z>=v__438.z);
                __497.w = (v__437.w>=v__438.w);
              ushort4 __498;
                int4 v__439 = make_int4(0, 0, 0, 0);
                __498.x = (__492.x>=v__439.x);
                __498.y = (__492.y>=v__439.y);
                __498.z = (__492.z>=v__439.z);
                __498.w = (__492.w>=v__439.w);
              __496.x = (__497.x&&__498.x);
              __496.y = (__497.y&&__498.y);
              __496.z = (__497.z&&__498.z);
              __496.w = (__497.w&&__498.w);
            ushort4 __499;
              ushort4 __500;
                int4 v__440 = make_int4(2, 2, 2, 2);
                int4 v__441 = make_int4(0, 0, 0, 0);
                __500.x = (v__440.x<v__441.x);
                __500.y = (v__440.y<v__441.y);
                __500.z = (v__440.z<v__441.z);
                __500.w = (v__440.w<v__441.w);
              ushort4 __501;
                int4 v__442 = make_int4(0, 0, 0, 0);
                __501.x = (__492.x<=v__442.x);
                __501.y = (__492.y<=v__442.y);
                __501.z = (__492.z<=v__442.z);
                __501.w = (__492.w<=v__442.w);
              __499.x = (__500.x&&__501.x);
              __499.y = (__500.y&&__501.y);
              __499.z = (__500.z&&__501.z);
              __499.w = (__500.w&&__501.w);
            __495.x = (__496.x||__499.x);
            __495.y = (__496.y||__499.y);
            __495.z = (__496.z||__499.z);
            __495.w = (__496.w||__499.w);
          int4 __502;
            int4 v__443 = make_int4(1, 1, 1, 1);
            __502.x = (__493.x-v__443.x);
            __502.y = (__493.y-v__443.y);
            __502.z = (__493.z-v__443.z);
            __502.w = (__493.w-v__443.w);
          __494.x = (bool(__495.x)?__493.x:__502.x);
          __494.y = (bool(__495.y)?__493.y:__502.y);
          __494.z = (bool(__495.z)?__493.z:__502.z);
          __494.w = (bool(__495.w)?__493.w:__502.w);
          __491.x = (v__432.x+__494.x);
          __491.y = (v__432.y+__494.y);
          __491.z = (v__432.z+__494.z);
          __491.w = (v__432.w+__494.w);
        int v__444 = ((0x000000ff << 0) & (B[__491.x] << 0))|((0x000000ff << 8) & (B[__491.y] << 8))|((0x000000ff << 16) & (B[__491.z] << 16))|((0x000000ff << 24) & (B[__491.w] << 24));
        __490.x = (int)(((char)(v__444 >> 0)));
        __490.y = (int)(((char)(v__444 >> 8)));
        __490.z = (int)(((char)(v__444 >> 16)));
        __490.w = (int)(((char)(v__444 >> 24)));
        int4 __503;
          int4 __504;
            int4 v__445 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__446 = make_int4(2, 2, 2, 2);
            __504.x = (v__445.x%v__446.x);
            __504.y = (v__445.y%v__446.y);
            __504.z = (v__445.z%v__446.z);
            __504.w = (v__445.w%v__446.w);
          int4 __505;
          ushort4 __506;
            ushort4 __507;
              ushort4 __508;
                int4 v__447 = make_int4(2, 2, 2, 2);
                int4 v__448 = make_int4(0, 0, 0, 0);
                __508.x = (v__447.x>=v__448.x);
                __508.y = (v__447.y>=v__448.y);
                __508.z = (v__447.z>=v__448.z);
                __508.w = (v__447.w>=v__448.w);
              ushort4 __509;
                int4 v__449 = make_int4(0, 0, 0, 0);
                __509.x = (__504.x>=v__449.x);
                __509.y = (__504.y>=v__449.y);
                __509.z = (__504.z>=v__449.z);
                __509.w = (__504.w>=v__449.w);
              __507.x = (__508.x&&__509.x);
              __507.y = (__508.y&&__509.y);
              __507.z = (__508.z&&__509.z);
              __507.w = (__508.w&&__509.w);
            ushort4 __510;
              ushort4 __511;
                int4 v__450 = make_int4(2, 2, 2, 2);
                int4 v__451 = make_int4(0, 0, 0, 0);
                __511.x = (v__450.x<v__451.x);
                __511.y = (v__450.y<v__451.y);
                __511.z = (v__450.z<v__451.z);
                __511.w = (v__450.w<v__451.w);
              ushort4 __512;
                int4 v__452 = make_int4(0, 0, 0, 0);
                __512.x = (__504.x<=v__452.x);
                __512.y = (__504.y<=v__452.y);
                __512.z = (__504.z<=v__452.z);
                __512.w = (__504.w<=v__452.w);
              __510.x = (__511.x&&__512.x);
              __510.y = (__511.y&&__512.y);
              __510.z = (__511.z&&__512.z);
              __510.w = (__511.w&&__512.w);
            __506.x = (__507.x||__510.x);
            __506.y = (__507.y||__510.y);
            __506.z = (__507.z||__510.z);
            __506.w = (__507.w||__510.w);
          int4 __513;
            int4 v__453 = make_int4(2, 2, 2, 2);
            __513.x = (__504.x+v__453.x);
            __513.y = (__504.y+v__453.y);
            __513.z = (__504.z+v__453.z);
            __513.w = (__504.w+v__453.w);
          __505.x = (bool(__506.x)?__504.x:__513.x);
          __505.y = (bool(__506.y)?__504.y:__513.y);
          __505.z = (bool(__506.z)?__504.z:__513.z);
          __505.w = (bool(__506.w)?__504.w:__513.w);
          int4 v__454 = make_int4(4, 4, 4, 4);
          __503.x = (__505.x*v__454.x);
          __503.y = (__505.y*v__454.y);
          __503.z = (__505.z*v__454.z);
          __503.w = (__505.w*v__454.w);
        __489.x = (__490.x >> __503.x);
        __489.y = (__490.y >> __503.y);
        __489.z = (__490.z >> __503.z);
        __489.w = (__490.w >> __503.w);
      int4 v__455 = make_int4(15, 15, 15, 15);
      __488.x = (__489.x & v__455.x);
      __488.y = (__489.y & v__455.y);
      __488.z = (__489.z & v__455.z);
      __488.w = (__489.w & v__455.w);
    ((half2*)(&(__487.x)))->x = (half)(__488.x);
    ((half2*)(&(__487.x)))->y = (half)(__488.y);
    ((half2*)(&(__487.y)))->x = (half)(__488.z);
    ((half2*)(&(__487.y)))->y = (half)(__488.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 4624)) = __487;
    uint2 __514;
    int4 __515;
      int4 __516;
        int4 __517;
        int4 __518;
          int4 v__456 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 155648), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 155648), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 155648), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 155648));
          int4 __519;
            int4 v__457 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__458 = make_int4(2, 2, 2, 2);
            __519.x = (v__457.x%v__458.x);
            __519.y = (v__457.y%v__458.y);
            __519.z = (v__457.z%v__458.z);
            __519.w = (v__457.w%v__458.w);
          int4 __520;
            int4 v__459 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__460 = make_int4(2, 2, 2, 2);
            __520.x = (v__459.x/v__460.x);
            __520.y = (v__459.y/v__460.y);
            __520.z = (v__459.z/v__460.z);
            __520.w = (v__459.w/v__460.w);
          int4 __521;
          ushort4 __522;
            ushort4 __523;
              ushort4 __524;
                int4 v__461 = make_int4(2, 2, 2, 2);
                int4 v__462 = make_int4(0, 0, 0, 0);
                __524.x = (v__461.x>=v__462.x);
                __524.y = (v__461.y>=v__462.y);
                __524.z = (v__461.z>=v__462.z);
                __524.w = (v__461.w>=v__462.w);
              ushort4 __525;
                int4 v__463 = make_int4(0, 0, 0, 0);
                __525.x = (__519.x>=v__463.x);
                __525.y = (__519.y>=v__463.y);
                __525.z = (__519.z>=v__463.z);
                __525.w = (__519.w>=v__463.w);
              __523.x = (__524.x&&__525.x);
              __523.y = (__524.y&&__525.y);
              __523.z = (__524.z&&__525.z);
              __523.w = (__524.w&&__525.w);
            ushort4 __526;
              ushort4 __527;
                int4 v__464 = make_int4(2, 2, 2, 2);
                int4 v__465 = make_int4(0, 0, 0, 0);
                __527.x = (v__464.x<v__465.x);
                __527.y = (v__464.y<v__465.y);
                __527.z = (v__464.z<v__465.z);
                __527.w = (v__464.w<v__465.w);
              ushort4 __528;
                int4 v__466 = make_int4(0, 0, 0, 0);
                __528.x = (__519.x<=v__466.x);
                __528.y = (__519.y<=v__466.y);
                __528.z = (__519.z<=v__466.z);
                __528.w = (__519.w<=v__466.w);
              __526.x = (__527.x&&__528.x);
              __526.y = (__527.y&&__528.y);
              __526.z = (__527.z&&__528.z);
              __526.w = (__527.w&&__528.w);
            __522.x = (__523.x||__526.x);
            __522.y = (__523.y||__526.y);
            __522.z = (__523.z||__526.z);
            __522.w = (__523.w||__526.w);
          int4 __529;
            int4 v__467 = make_int4(1, 1, 1, 1);
            __529.x = (__520.x-v__467.x);
            __529.y = (__520.y-v__467.y);
            __529.z = (__520.z-v__467.z);
            __529.w = (__520.w-v__467.w);
          __521.x = (bool(__522.x)?__520.x:__529.x);
          __521.y = (bool(__522.y)?__520.y:__529.y);
          __521.z = (bool(__522.z)?__520.z:__529.z);
          __521.w = (bool(__522.w)?__520.w:__529.w);
          __518.x = (v__456.x+__521.x);
          __518.y = (v__456.y+__521.y);
          __518.z = (v__456.z+__521.z);
          __518.w = (v__456.w+__521.w);
        int v__468 = ((0x000000ff << 0) & (B[__518.x] << 0))|((0x000000ff << 8) & (B[__518.y] << 8))|((0x000000ff << 16) & (B[__518.z] << 16))|((0x000000ff << 24) & (B[__518.w] << 24));
        __517.x = (int)(((char)(v__468 >> 0)));
        __517.y = (int)(((char)(v__468 >> 8)));
        __517.z = (int)(((char)(v__468 >> 16)));
        __517.w = (int)(((char)(v__468 >> 24)));
        int4 __530;
          int4 __531;
            int4 v__469 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__470 = make_int4(2, 2, 2, 2);
            __531.x = (v__469.x%v__470.x);
            __531.y = (v__469.y%v__470.y);
            __531.z = (v__469.z%v__470.z);
            __531.w = (v__469.w%v__470.w);
          int4 __532;
          ushort4 __533;
            ushort4 __534;
              ushort4 __535;
                int4 v__471 = make_int4(2, 2, 2, 2);
                int4 v__472 = make_int4(0, 0, 0, 0);
                __535.x = (v__471.x>=v__472.x);
                __535.y = (v__471.y>=v__472.y);
                __535.z = (v__471.z>=v__472.z);
                __535.w = (v__471.w>=v__472.w);
              ushort4 __536;
                int4 v__473 = make_int4(0, 0, 0, 0);
                __536.x = (__531.x>=v__473.x);
                __536.y = (__531.y>=v__473.y);
                __536.z = (__531.z>=v__473.z);
                __536.w = (__531.w>=v__473.w);
              __534.x = (__535.x&&__536.x);
              __534.y = (__535.y&&__536.y);
              __534.z = (__535.z&&__536.z);
              __534.w = (__535.w&&__536.w);
            ushort4 __537;
              ushort4 __538;
                int4 v__474 = make_int4(2, 2, 2, 2);
                int4 v__475 = make_int4(0, 0, 0, 0);
                __538.x = (v__474.x<v__475.x);
                __538.y = (v__474.y<v__475.y);
                __538.z = (v__474.z<v__475.z);
                __538.w = (v__474.w<v__475.w);
              ushort4 __539;
                int4 v__476 = make_int4(0, 0, 0, 0);
                __539.x = (__531.x<=v__476.x);
                __539.y = (__531.y<=v__476.y);
                __539.z = (__531.z<=v__476.z);
                __539.w = (__531.w<=v__476.w);
              __537.x = (__538.x&&__539.x);
              __537.y = (__538.y&&__539.y);
              __537.z = (__538.z&&__539.z);
              __537.w = (__538.w&&__539.w);
            __533.x = (__534.x||__537.x);
            __533.y = (__534.y||__537.y);
            __533.z = (__534.z||__537.z);
            __533.w = (__534.w||__537.w);
          int4 __540;
            int4 v__477 = make_int4(2, 2, 2, 2);
            __540.x = (__531.x+v__477.x);
            __540.y = (__531.y+v__477.y);
            __540.z = (__531.z+v__477.z);
            __540.w = (__531.w+v__477.w);
          __532.x = (bool(__533.x)?__531.x:__540.x);
          __532.y = (bool(__533.y)?__531.y:__540.y);
          __532.z = (bool(__533.z)?__531.z:__540.z);
          __532.w = (bool(__533.w)?__531.w:__540.w);
          int4 v__478 = make_int4(4, 4, 4, 4);
          __530.x = (__532.x*v__478.x);
          __530.y = (__532.y*v__478.y);
          __530.z = (__532.z*v__478.z);
          __530.w = (__532.w*v__478.w);
        __516.x = (__517.x >> __530.x);
        __516.y = (__517.y >> __530.y);
        __516.z = (__517.z >> __530.z);
        __516.w = (__517.w >> __530.w);
      int4 v__479 = make_int4(15, 15, 15, 15);
      __515.x = (__516.x & v__479.x);
      __515.y = (__516.y & v__479.y);
      __515.z = (__516.z & v__479.z);
      __515.w = (__516.w & v__479.w);
    ((half2*)(&(__514.x)))->x = (half)(__515.x);
    ((half2*)(&(__514.x)))->y = (half)(__515.y);
    ((half2*)(&(__514.y)))->x = (half)(__515.z);
    ((half2*)(&(__514.y)))->y = (half)(__515.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 4760)) = __514;
    uint2 __541;
    int4 __542;
      int4 __543;
        int4 __544;
        int4 __545;
          int4 v__480 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 163840), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 163840), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 163840), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 163840));
          int4 __546;
            int4 v__481 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__482 = make_int4(2, 2, 2, 2);
            __546.x = (v__481.x%v__482.x);
            __546.y = (v__481.y%v__482.y);
            __546.z = (v__481.z%v__482.z);
            __546.w = (v__481.w%v__482.w);
          int4 __547;
            int4 v__483 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__484 = make_int4(2, 2, 2, 2);
            __547.x = (v__483.x/v__484.x);
            __547.y = (v__483.y/v__484.y);
            __547.z = (v__483.z/v__484.z);
            __547.w = (v__483.w/v__484.w);
          int4 __548;
          ushort4 __549;
            ushort4 __550;
              ushort4 __551;
                int4 v__485 = make_int4(2, 2, 2, 2);
                int4 v__486 = make_int4(0, 0, 0, 0);
                __551.x = (v__485.x>=v__486.x);
                __551.y = (v__485.y>=v__486.y);
                __551.z = (v__485.z>=v__486.z);
                __551.w = (v__485.w>=v__486.w);
              ushort4 __552;
                int4 v__487 = make_int4(0, 0, 0, 0);
                __552.x = (__546.x>=v__487.x);
                __552.y = (__546.y>=v__487.y);
                __552.z = (__546.z>=v__487.z);
                __552.w = (__546.w>=v__487.w);
              __550.x = (__551.x&&__552.x);
              __550.y = (__551.y&&__552.y);
              __550.z = (__551.z&&__552.z);
              __550.w = (__551.w&&__552.w);
            ushort4 __553;
              ushort4 __554;
                int4 v__488 = make_int4(2, 2, 2, 2);
                int4 v__489 = make_int4(0, 0, 0, 0);
                __554.x = (v__488.x<v__489.x);
                __554.y = (v__488.y<v__489.y);
                __554.z = (v__488.z<v__489.z);
                __554.w = (v__488.w<v__489.w);
              ushort4 __555;
                int4 v__490 = make_int4(0, 0, 0, 0);
                __555.x = (__546.x<=v__490.x);
                __555.y = (__546.y<=v__490.y);
                __555.z = (__546.z<=v__490.z);
                __555.w = (__546.w<=v__490.w);
              __553.x = (__554.x&&__555.x);
              __553.y = (__554.y&&__555.y);
              __553.z = (__554.z&&__555.z);
              __553.w = (__554.w&&__555.w);
            __549.x = (__550.x||__553.x);
            __549.y = (__550.y||__553.y);
            __549.z = (__550.z||__553.z);
            __549.w = (__550.w||__553.w);
          int4 __556;
            int4 v__491 = make_int4(1, 1, 1, 1);
            __556.x = (__547.x-v__491.x);
            __556.y = (__547.y-v__491.y);
            __556.z = (__547.z-v__491.z);
            __556.w = (__547.w-v__491.w);
          __548.x = (bool(__549.x)?__547.x:__556.x);
          __548.y = (bool(__549.y)?__547.y:__556.y);
          __548.z = (bool(__549.z)?__547.z:__556.z);
          __548.w = (bool(__549.w)?__547.w:__556.w);
          __545.x = (v__480.x+__548.x);
          __545.y = (v__480.y+__548.y);
          __545.z = (v__480.z+__548.z);
          __545.w = (v__480.w+__548.w);
        int v__492 = ((0x000000ff << 0) & (B[__545.x] << 0))|((0x000000ff << 8) & (B[__545.y] << 8))|((0x000000ff << 16) & (B[__545.z] << 16))|((0x000000ff << 24) & (B[__545.w] << 24));
        __544.x = (int)(((char)(v__492 >> 0)));
        __544.y = (int)(((char)(v__492 >> 8)));
        __544.z = (int)(((char)(v__492 >> 16)));
        __544.w = (int)(((char)(v__492 >> 24)));
        int4 __557;
          int4 __558;
            int4 v__493 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__494 = make_int4(2, 2, 2, 2);
            __558.x = (v__493.x%v__494.x);
            __558.y = (v__493.y%v__494.y);
            __558.z = (v__493.z%v__494.z);
            __558.w = (v__493.w%v__494.w);
          int4 __559;
          ushort4 __560;
            ushort4 __561;
              ushort4 __562;
                int4 v__495 = make_int4(2, 2, 2, 2);
                int4 v__496 = make_int4(0, 0, 0, 0);
                __562.x = (v__495.x>=v__496.x);
                __562.y = (v__495.y>=v__496.y);
                __562.z = (v__495.z>=v__496.z);
                __562.w = (v__495.w>=v__496.w);
              ushort4 __563;
                int4 v__497 = make_int4(0, 0, 0, 0);
                __563.x = (__558.x>=v__497.x);
                __563.y = (__558.y>=v__497.y);
                __563.z = (__558.z>=v__497.z);
                __563.w = (__558.w>=v__497.w);
              __561.x = (__562.x&&__563.x);
              __561.y = (__562.y&&__563.y);
              __561.z = (__562.z&&__563.z);
              __561.w = (__562.w&&__563.w);
            ushort4 __564;
              ushort4 __565;
                int4 v__498 = make_int4(2, 2, 2, 2);
                int4 v__499 = make_int4(0, 0, 0, 0);
                __565.x = (v__498.x<v__499.x);
                __565.y = (v__498.y<v__499.y);
                __565.z = (v__498.z<v__499.z);
                __565.w = (v__498.w<v__499.w);
              ushort4 __566;
                int4 v__500 = make_int4(0, 0, 0, 0);
                __566.x = (__558.x<=v__500.x);
                __566.y = (__558.y<=v__500.y);
                __566.z = (__558.z<=v__500.z);
                __566.w = (__558.w<=v__500.w);
              __564.x = (__565.x&&__566.x);
              __564.y = (__565.y&&__566.y);
              __564.z = (__565.z&&__566.z);
              __564.w = (__565.w&&__566.w);
            __560.x = (__561.x||__564.x);
            __560.y = (__561.y||__564.y);
            __560.z = (__561.z||__564.z);
            __560.w = (__561.w||__564.w);
          int4 __567;
            int4 v__501 = make_int4(2, 2, 2, 2);
            __567.x = (__558.x+v__501.x);
            __567.y = (__558.y+v__501.y);
            __567.z = (__558.z+v__501.z);
            __567.w = (__558.w+v__501.w);
          __559.x = (bool(__560.x)?__558.x:__567.x);
          __559.y = (bool(__560.y)?__558.y:__567.y);
          __559.z = (bool(__560.z)?__558.z:__567.z);
          __559.w = (bool(__560.w)?__558.w:__567.w);
          int4 v__502 = make_int4(4, 4, 4, 4);
          __557.x = (__559.x*v__502.x);
          __557.y = (__559.y*v__502.y);
          __557.z = (__559.z*v__502.z);
          __557.w = (__559.w*v__502.w);
        __543.x = (__544.x >> __557.x);
        __543.y = (__544.y >> __557.y);
        __543.z = (__544.z >> __557.z);
        __543.w = (__544.w >> __557.w);
      int4 v__503 = make_int4(15, 15, 15, 15);
      __542.x = (__543.x & v__503.x);
      __542.y = (__543.y & v__503.y);
      __542.z = (__543.z & v__503.z);
      __542.w = (__543.w & v__503.w);
    ((half2*)(&(__541.x)))->x = (half)(__542.x);
    ((half2*)(&(__541.x)))->y = (half)(__542.y);
    ((half2*)(&(__541.y)))->x = (half)(__542.z);
    ((half2*)(&(__541.y)))->y = (half)(__542.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 4896)) = __541;
    uint2 __568;
    int4 __569;
      int4 __570;
        int4 __571;
        int4 __572;
          int4 v__504 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 172032), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 172032), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 172032), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 172032));
          int4 __573;
            int4 v__505 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__506 = make_int4(2, 2, 2, 2);
            __573.x = (v__505.x%v__506.x);
            __573.y = (v__505.y%v__506.y);
            __573.z = (v__505.z%v__506.z);
            __573.w = (v__505.w%v__506.w);
          int4 __574;
            int4 v__507 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__508 = make_int4(2, 2, 2, 2);
            __574.x = (v__507.x/v__508.x);
            __574.y = (v__507.y/v__508.y);
            __574.z = (v__507.z/v__508.z);
            __574.w = (v__507.w/v__508.w);
          int4 __575;
          ushort4 __576;
            ushort4 __577;
              ushort4 __578;
                int4 v__509 = make_int4(2, 2, 2, 2);
                int4 v__510 = make_int4(0, 0, 0, 0);
                __578.x = (v__509.x>=v__510.x);
                __578.y = (v__509.y>=v__510.y);
                __578.z = (v__509.z>=v__510.z);
                __578.w = (v__509.w>=v__510.w);
              ushort4 __579;
                int4 v__511 = make_int4(0, 0, 0, 0);
                __579.x = (__573.x>=v__511.x);
                __579.y = (__573.y>=v__511.y);
                __579.z = (__573.z>=v__511.z);
                __579.w = (__573.w>=v__511.w);
              __577.x = (__578.x&&__579.x);
              __577.y = (__578.y&&__579.y);
              __577.z = (__578.z&&__579.z);
              __577.w = (__578.w&&__579.w);
            ushort4 __580;
              ushort4 __581;
                int4 v__512 = make_int4(2, 2, 2, 2);
                int4 v__513 = make_int4(0, 0, 0, 0);
                __581.x = (v__512.x<v__513.x);
                __581.y = (v__512.y<v__513.y);
                __581.z = (v__512.z<v__513.z);
                __581.w = (v__512.w<v__513.w);
              ushort4 __582;
                int4 v__514 = make_int4(0, 0, 0, 0);
                __582.x = (__573.x<=v__514.x);
                __582.y = (__573.y<=v__514.y);
                __582.z = (__573.z<=v__514.z);
                __582.w = (__573.w<=v__514.w);
              __580.x = (__581.x&&__582.x);
              __580.y = (__581.y&&__582.y);
              __580.z = (__581.z&&__582.z);
              __580.w = (__581.w&&__582.w);
            __576.x = (__577.x||__580.x);
            __576.y = (__577.y||__580.y);
            __576.z = (__577.z||__580.z);
            __576.w = (__577.w||__580.w);
          int4 __583;
            int4 v__515 = make_int4(1, 1, 1, 1);
            __583.x = (__574.x-v__515.x);
            __583.y = (__574.y-v__515.y);
            __583.z = (__574.z-v__515.z);
            __583.w = (__574.w-v__515.w);
          __575.x = (bool(__576.x)?__574.x:__583.x);
          __575.y = (bool(__576.y)?__574.y:__583.y);
          __575.z = (bool(__576.z)?__574.z:__583.z);
          __575.w = (bool(__576.w)?__574.w:__583.w);
          __572.x = (v__504.x+__575.x);
          __572.y = (v__504.y+__575.y);
          __572.z = (v__504.z+__575.z);
          __572.w = (v__504.w+__575.w);
        int v__516 = ((0x000000ff << 0) & (B[__572.x] << 0))|((0x000000ff << 8) & (B[__572.y] << 8))|((0x000000ff << 16) & (B[__572.z] << 16))|((0x000000ff << 24) & (B[__572.w] << 24));
        __571.x = (int)(((char)(v__516 >> 0)));
        __571.y = (int)(((char)(v__516 >> 8)));
        __571.z = (int)(((char)(v__516 >> 16)));
        __571.w = (int)(((char)(v__516 >> 24)));
        int4 __584;
          int4 __585;
            int4 v__517 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__518 = make_int4(2, 2, 2, 2);
            __585.x = (v__517.x%v__518.x);
            __585.y = (v__517.y%v__518.y);
            __585.z = (v__517.z%v__518.z);
            __585.w = (v__517.w%v__518.w);
          int4 __586;
          ushort4 __587;
            ushort4 __588;
              ushort4 __589;
                int4 v__519 = make_int4(2, 2, 2, 2);
                int4 v__520 = make_int4(0, 0, 0, 0);
                __589.x = (v__519.x>=v__520.x);
                __589.y = (v__519.y>=v__520.y);
                __589.z = (v__519.z>=v__520.z);
                __589.w = (v__519.w>=v__520.w);
              ushort4 __590;
                int4 v__521 = make_int4(0, 0, 0, 0);
                __590.x = (__585.x>=v__521.x);
                __590.y = (__585.y>=v__521.y);
                __590.z = (__585.z>=v__521.z);
                __590.w = (__585.w>=v__521.w);
              __588.x = (__589.x&&__590.x);
              __588.y = (__589.y&&__590.y);
              __588.z = (__589.z&&__590.z);
              __588.w = (__589.w&&__590.w);
            ushort4 __591;
              ushort4 __592;
                int4 v__522 = make_int4(2, 2, 2, 2);
                int4 v__523 = make_int4(0, 0, 0, 0);
                __592.x = (v__522.x<v__523.x);
                __592.y = (v__522.y<v__523.y);
                __592.z = (v__522.z<v__523.z);
                __592.w = (v__522.w<v__523.w);
              ushort4 __593;
                int4 v__524 = make_int4(0, 0, 0, 0);
                __593.x = (__585.x<=v__524.x);
                __593.y = (__585.y<=v__524.y);
                __593.z = (__585.z<=v__524.z);
                __593.w = (__585.w<=v__524.w);
              __591.x = (__592.x&&__593.x);
              __591.y = (__592.y&&__593.y);
              __591.z = (__592.z&&__593.z);
              __591.w = (__592.w&&__593.w);
            __587.x = (__588.x||__591.x);
            __587.y = (__588.y||__591.y);
            __587.z = (__588.z||__591.z);
            __587.w = (__588.w||__591.w);
          int4 __594;
            int4 v__525 = make_int4(2, 2, 2, 2);
            __594.x = (__585.x+v__525.x);
            __594.y = (__585.y+v__525.y);
            __594.z = (__585.z+v__525.z);
            __594.w = (__585.w+v__525.w);
          __586.x = (bool(__587.x)?__585.x:__594.x);
          __586.y = (bool(__587.y)?__585.y:__594.y);
          __586.z = (bool(__587.z)?__585.z:__594.z);
          __586.w = (bool(__587.w)?__585.w:__594.w);
          int4 v__526 = make_int4(4, 4, 4, 4);
          __584.x = (__586.x*v__526.x);
          __584.y = (__586.y*v__526.y);
          __584.z = (__586.z*v__526.z);
          __584.w = (__586.w*v__526.w);
        __570.x = (__571.x >> __584.x);
        __570.y = (__571.y >> __584.y);
        __570.z = (__571.z >> __584.z);
        __570.w = (__571.w >> __584.w);
      int4 v__527 = make_int4(15, 15, 15, 15);
      __569.x = (__570.x & v__527.x);
      __569.y = (__570.y & v__527.y);
      __569.z = (__570.z & v__527.z);
      __569.w = (__570.w & v__527.w);
    ((half2*)(&(__568.x)))->x = (half)(__569.x);
    ((half2*)(&(__568.x)))->y = (half)(__569.y);
    ((half2*)(&(__568.y)))->x = (half)(__569.z);
    ((half2*)(&(__568.y)))->y = (half)(__569.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5032)) = __568;
    uint2 __595;
    int4 __596;
      int4 __597;
        int4 __598;
        int4 __599;
          int4 v__528 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 180224), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 180224), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 180224), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 180224));
          int4 __600;
            int4 v__529 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__530 = make_int4(2, 2, 2, 2);
            __600.x = (v__529.x%v__530.x);
            __600.y = (v__529.y%v__530.y);
            __600.z = (v__529.z%v__530.z);
            __600.w = (v__529.w%v__530.w);
          int4 __601;
            int4 v__531 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__532 = make_int4(2, 2, 2, 2);
            __601.x = (v__531.x/v__532.x);
            __601.y = (v__531.y/v__532.y);
            __601.z = (v__531.z/v__532.z);
            __601.w = (v__531.w/v__532.w);
          int4 __602;
          ushort4 __603;
            ushort4 __604;
              ushort4 __605;
                int4 v__533 = make_int4(2, 2, 2, 2);
                int4 v__534 = make_int4(0, 0, 0, 0);
                __605.x = (v__533.x>=v__534.x);
                __605.y = (v__533.y>=v__534.y);
                __605.z = (v__533.z>=v__534.z);
                __605.w = (v__533.w>=v__534.w);
              ushort4 __606;
                int4 v__535 = make_int4(0, 0, 0, 0);
                __606.x = (__600.x>=v__535.x);
                __606.y = (__600.y>=v__535.y);
                __606.z = (__600.z>=v__535.z);
                __606.w = (__600.w>=v__535.w);
              __604.x = (__605.x&&__606.x);
              __604.y = (__605.y&&__606.y);
              __604.z = (__605.z&&__606.z);
              __604.w = (__605.w&&__606.w);
            ushort4 __607;
              ushort4 __608;
                int4 v__536 = make_int4(2, 2, 2, 2);
                int4 v__537 = make_int4(0, 0, 0, 0);
                __608.x = (v__536.x<v__537.x);
                __608.y = (v__536.y<v__537.y);
                __608.z = (v__536.z<v__537.z);
                __608.w = (v__536.w<v__537.w);
              ushort4 __609;
                int4 v__538 = make_int4(0, 0, 0, 0);
                __609.x = (__600.x<=v__538.x);
                __609.y = (__600.y<=v__538.y);
                __609.z = (__600.z<=v__538.z);
                __609.w = (__600.w<=v__538.w);
              __607.x = (__608.x&&__609.x);
              __607.y = (__608.y&&__609.y);
              __607.z = (__608.z&&__609.z);
              __607.w = (__608.w&&__609.w);
            __603.x = (__604.x||__607.x);
            __603.y = (__604.y||__607.y);
            __603.z = (__604.z||__607.z);
            __603.w = (__604.w||__607.w);
          int4 __610;
            int4 v__539 = make_int4(1, 1, 1, 1);
            __610.x = (__601.x-v__539.x);
            __610.y = (__601.y-v__539.y);
            __610.z = (__601.z-v__539.z);
            __610.w = (__601.w-v__539.w);
          __602.x = (bool(__603.x)?__601.x:__610.x);
          __602.y = (bool(__603.y)?__601.y:__610.y);
          __602.z = (bool(__603.z)?__601.z:__610.z);
          __602.w = (bool(__603.w)?__601.w:__610.w);
          __599.x = (v__528.x+__602.x);
          __599.y = (v__528.y+__602.y);
          __599.z = (v__528.z+__602.z);
          __599.w = (v__528.w+__602.w);
        int v__540 = ((0x000000ff << 0) & (B[__599.x] << 0))|((0x000000ff << 8) & (B[__599.y] << 8))|((0x000000ff << 16) & (B[__599.z] << 16))|((0x000000ff << 24) & (B[__599.w] << 24));
        __598.x = (int)(((char)(v__540 >> 0)));
        __598.y = (int)(((char)(v__540 >> 8)));
        __598.z = (int)(((char)(v__540 >> 16)));
        __598.w = (int)(((char)(v__540 >> 24)));
        int4 __611;
          int4 __612;
            int4 v__541 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__542 = make_int4(2, 2, 2, 2);
            __612.x = (v__541.x%v__542.x);
            __612.y = (v__541.y%v__542.y);
            __612.z = (v__541.z%v__542.z);
            __612.w = (v__541.w%v__542.w);
          int4 __613;
          ushort4 __614;
            ushort4 __615;
              ushort4 __616;
                int4 v__543 = make_int4(2, 2, 2, 2);
                int4 v__544 = make_int4(0, 0, 0, 0);
                __616.x = (v__543.x>=v__544.x);
                __616.y = (v__543.y>=v__544.y);
                __616.z = (v__543.z>=v__544.z);
                __616.w = (v__543.w>=v__544.w);
              ushort4 __617;
                int4 v__545 = make_int4(0, 0, 0, 0);
                __617.x = (__612.x>=v__545.x);
                __617.y = (__612.y>=v__545.y);
                __617.z = (__612.z>=v__545.z);
                __617.w = (__612.w>=v__545.w);
              __615.x = (__616.x&&__617.x);
              __615.y = (__616.y&&__617.y);
              __615.z = (__616.z&&__617.z);
              __615.w = (__616.w&&__617.w);
            ushort4 __618;
              ushort4 __619;
                int4 v__546 = make_int4(2, 2, 2, 2);
                int4 v__547 = make_int4(0, 0, 0, 0);
                __619.x = (v__546.x<v__547.x);
                __619.y = (v__546.y<v__547.y);
                __619.z = (v__546.z<v__547.z);
                __619.w = (v__546.w<v__547.w);
              ushort4 __620;
                int4 v__548 = make_int4(0, 0, 0, 0);
                __620.x = (__612.x<=v__548.x);
                __620.y = (__612.y<=v__548.y);
                __620.z = (__612.z<=v__548.z);
                __620.w = (__612.w<=v__548.w);
              __618.x = (__619.x&&__620.x);
              __618.y = (__619.y&&__620.y);
              __618.z = (__619.z&&__620.z);
              __618.w = (__619.w&&__620.w);
            __614.x = (__615.x||__618.x);
            __614.y = (__615.y||__618.y);
            __614.z = (__615.z||__618.z);
            __614.w = (__615.w||__618.w);
          int4 __621;
            int4 v__549 = make_int4(2, 2, 2, 2);
            __621.x = (__612.x+v__549.x);
            __621.y = (__612.y+v__549.y);
            __621.z = (__612.z+v__549.z);
            __621.w = (__612.w+v__549.w);
          __613.x = (bool(__614.x)?__612.x:__621.x);
          __613.y = (bool(__614.y)?__612.y:__621.y);
          __613.z = (bool(__614.z)?__612.z:__621.z);
          __613.w = (bool(__614.w)?__612.w:__621.w);
          int4 v__550 = make_int4(4, 4, 4, 4);
          __611.x = (__613.x*v__550.x);
          __611.y = (__613.y*v__550.y);
          __611.z = (__613.z*v__550.z);
          __611.w = (__613.w*v__550.w);
        __597.x = (__598.x >> __611.x);
        __597.y = (__598.y >> __611.y);
        __597.z = (__598.z >> __611.z);
        __597.w = (__598.w >> __611.w);
      int4 v__551 = make_int4(15, 15, 15, 15);
      __596.x = (__597.x & v__551.x);
      __596.y = (__597.y & v__551.y);
      __596.z = (__597.z & v__551.z);
      __596.w = (__597.w & v__551.w);
    ((half2*)(&(__595.x)))->x = (half)(__596.x);
    ((half2*)(&(__595.x)))->y = (half)(__596.y);
    ((half2*)(&(__595.y)))->x = (half)(__596.z);
    ((half2*)(&(__595.y)))->y = (half)(__596.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5168)) = __595;
    uint2 __622;
    int4 __623;
      int4 __624;
        int4 __625;
        int4 __626;
          int4 v__552 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 188416), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 188416), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 188416), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 188416));
          int4 __627;
            int4 v__553 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__554 = make_int4(2, 2, 2, 2);
            __627.x = (v__553.x%v__554.x);
            __627.y = (v__553.y%v__554.y);
            __627.z = (v__553.z%v__554.z);
            __627.w = (v__553.w%v__554.w);
          int4 __628;
            int4 v__555 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__556 = make_int4(2, 2, 2, 2);
            __628.x = (v__555.x/v__556.x);
            __628.y = (v__555.y/v__556.y);
            __628.z = (v__555.z/v__556.z);
            __628.w = (v__555.w/v__556.w);
          int4 __629;
          ushort4 __630;
            ushort4 __631;
              ushort4 __632;
                int4 v__557 = make_int4(2, 2, 2, 2);
                int4 v__558 = make_int4(0, 0, 0, 0);
                __632.x = (v__557.x>=v__558.x);
                __632.y = (v__557.y>=v__558.y);
                __632.z = (v__557.z>=v__558.z);
                __632.w = (v__557.w>=v__558.w);
              ushort4 __633;
                int4 v__559 = make_int4(0, 0, 0, 0);
                __633.x = (__627.x>=v__559.x);
                __633.y = (__627.y>=v__559.y);
                __633.z = (__627.z>=v__559.z);
                __633.w = (__627.w>=v__559.w);
              __631.x = (__632.x&&__633.x);
              __631.y = (__632.y&&__633.y);
              __631.z = (__632.z&&__633.z);
              __631.w = (__632.w&&__633.w);
            ushort4 __634;
              ushort4 __635;
                int4 v__560 = make_int4(2, 2, 2, 2);
                int4 v__561 = make_int4(0, 0, 0, 0);
                __635.x = (v__560.x<v__561.x);
                __635.y = (v__560.y<v__561.y);
                __635.z = (v__560.z<v__561.z);
                __635.w = (v__560.w<v__561.w);
              ushort4 __636;
                int4 v__562 = make_int4(0, 0, 0, 0);
                __636.x = (__627.x<=v__562.x);
                __636.y = (__627.y<=v__562.y);
                __636.z = (__627.z<=v__562.z);
                __636.w = (__627.w<=v__562.w);
              __634.x = (__635.x&&__636.x);
              __634.y = (__635.y&&__636.y);
              __634.z = (__635.z&&__636.z);
              __634.w = (__635.w&&__636.w);
            __630.x = (__631.x||__634.x);
            __630.y = (__631.y||__634.y);
            __630.z = (__631.z||__634.z);
            __630.w = (__631.w||__634.w);
          int4 __637;
            int4 v__563 = make_int4(1, 1, 1, 1);
            __637.x = (__628.x-v__563.x);
            __637.y = (__628.y-v__563.y);
            __637.z = (__628.z-v__563.z);
            __637.w = (__628.w-v__563.w);
          __629.x = (bool(__630.x)?__628.x:__637.x);
          __629.y = (bool(__630.y)?__628.y:__637.y);
          __629.z = (bool(__630.z)?__628.z:__637.z);
          __629.w = (bool(__630.w)?__628.w:__637.w);
          __626.x = (v__552.x+__629.x);
          __626.y = (v__552.y+__629.y);
          __626.z = (v__552.z+__629.z);
          __626.w = (v__552.w+__629.w);
        int v__564 = ((0x000000ff << 0) & (B[__626.x] << 0))|((0x000000ff << 8) & (B[__626.y] << 8))|((0x000000ff << 16) & (B[__626.z] << 16))|((0x000000ff << 24) & (B[__626.w] << 24));
        __625.x = (int)(((char)(v__564 >> 0)));
        __625.y = (int)(((char)(v__564 >> 8)));
        __625.z = (int)(((char)(v__564 >> 16)));
        __625.w = (int)(((char)(v__564 >> 24)));
        int4 __638;
          int4 __639;
            int4 v__565 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__566 = make_int4(2, 2, 2, 2);
            __639.x = (v__565.x%v__566.x);
            __639.y = (v__565.y%v__566.y);
            __639.z = (v__565.z%v__566.z);
            __639.w = (v__565.w%v__566.w);
          int4 __640;
          ushort4 __641;
            ushort4 __642;
              ushort4 __643;
                int4 v__567 = make_int4(2, 2, 2, 2);
                int4 v__568 = make_int4(0, 0, 0, 0);
                __643.x = (v__567.x>=v__568.x);
                __643.y = (v__567.y>=v__568.y);
                __643.z = (v__567.z>=v__568.z);
                __643.w = (v__567.w>=v__568.w);
              ushort4 __644;
                int4 v__569 = make_int4(0, 0, 0, 0);
                __644.x = (__639.x>=v__569.x);
                __644.y = (__639.y>=v__569.y);
                __644.z = (__639.z>=v__569.z);
                __644.w = (__639.w>=v__569.w);
              __642.x = (__643.x&&__644.x);
              __642.y = (__643.y&&__644.y);
              __642.z = (__643.z&&__644.z);
              __642.w = (__643.w&&__644.w);
            ushort4 __645;
              ushort4 __646;
                int4 v__570 = make_int4(2, 2, 2, 2);
                int4 v__571 = make_int4(0, 0, 0, 0);
                __646.x = (v__570.x<v__571.x);
                __646.y = (v__570.y<v__571.y);
                __646.z = (v__570.z<v__571.z);
                __646.w = (v__570.w<v__571.w);
              ushort4 __647;
                int4 v__572 = make_int4(0, 0, 0, 0);
                __647.x = (__639.x<=v__572.x);
                __647.y = (__639.y<=v__572.y);
                __647.z = (__639.z<=v__572.z);
                __647.w = (__639.w<=v__572.w);
              __645.x = (__646.x&&__647.x);
              __645.y = (__646.y&&__647.y);
              __645.z = (__646.z&&__647.z);
              __645.w = (__646.w&&__647.w);
            __641.x = (__642.x||__645.x);
            __641.y = (__642.y||__645.y);
            __641.z = (__642.z||__645.z);
            __641.w = (__642.w||__645.w);
          int4 __648;
            int4 v__573 = make_int4(2, 2, 2, 2);
            __648.x = (__639.x+v__573.x);
            __648.y = (__639.y+v__573.y);
            __648.z = (__639.z+v__573.z);
            __648.w = (__639.w+v__573.w);
          __640.x = (bool(__641.x)?__639.x:__648.x);
          __640.y = (bool(__641.y)?__639.y:__648.y);
          __640.z = (bool(__641.z)?__639.z:__648.z);
          __640.w = (bool(__641.w)?__639.w:__648.w);
          int4 v__574 = make_int4(4, 4, 4, 4);
          __638.x = (__640.x*v__574.x);
          __638.y = (__640.y*v__574.y);
          __638.z = (__640.z*v__574.z);
          __638.w = (__640.w*v__574.w);
        __624.x = (__625.x >> __638.x);
        __624.y = (__625.y >> __638.y);
        __624.z = (__625.z >> __638.z);
        __624.w = (__625.w >> __638.w);
      int4 v__575 = make_int4(15, 15, 15, 15);
      __623.x = (__624.x & v__575.x);
      __623.y = (__624.y & v__575.y);
      __623.z = (__624.z & v__575.z);
      __623.w = (__624.w & v__575.w);
    ((half2*)(&(__622.x)))->x = (half)(__623.x);
    ((half2*)(&(__622.x)))->y = (half)(__623.y);
    ((half2*)(&(__622.y)))->x = (half)(__623.z);
    ((half2*)(&(__622.y)))->y = (half)(__623.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5304)) = __622;
    uint2 __649;
    int4 __650;
      int4 __651;
        int4 __652;
        int4 __653;
          int4 v__576 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 196608), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 196608), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 196608), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 196608));
          int4 __654;
            int4 v__577 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__578 = make_int4(2, 2, 2, 2);
            __654.x = (v__577.x%v__578.x);
            __654.y = (v__577.y%v__578.y);
            __654.z = (v__577.z%v__578.z);
            __654.w = (v__577.w%v__578.w);
          int4 __655;
            int4 v__579 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__580 = make_int4(2, 2, 2, 2);
            __655.x = (v__579.x/v__580.x);
            __655.y = (v__579.y/v__580.y);
            __655.z = (v__579.z/v__580.z);
            __655.w = (v__579.w/v__580.w);
          int4 __656;
          ushort4 __657;
            ushort4 __658;
              ushort4 __659;
                int4 v__581 = make_int4(2, 2, 2, 2);
                int4 v__582 = make_int4(0, 0, 0, 0);
                __659.x = (v__581.x>=v__582.x);
                __659.y = (v__581.y>=v__582.y);
                __659.z = (v__581.z>=v__582.z);
                __659.w = (v__581.w>=v__582.w);
              ushort4 __660;
                int4 v__583 = make_int4(0, 0, 0, 0);
                __660.x = (__654.x>=v__583.x);
                __660.y = (__654.y>=v__583.y);
                __660.z = (__654.z>=v__583.z);
                __660.w = (__654.w>=v__583.w);
              __658.x = (__659.x&&__660.x);
              __658.y = (__659.y&&__660.y);
              __658.z = (__659.z&&__660.z);
              __658.w = (__659.w&&__660.w);
            ushort4 __661;
              ushort4 __662;
                int4 v__584 = make_int4(2, 2, 2, 2);
                int4 v__585 = make_int4(0, 0, 0, 0);
                __662.x = (v__584.x<v__585.x);
                __662.y = (v__584.y<v__585.y);
                __662.z = (v__584.z<v__585.z);
                __662.w = (v__584.w<v__585.w);
              ushort4 __663;
                int4 v__586 = make_int4(0, 0, 0, 0);
                __663.x = (__654.x<=v__586.x);
                __663.y = (__654.y<=v__586.y);
                __663.z = (__654.z<=v__586.z);
                __663.w = (__654.w<=v__586.w);
              __661.x = (__662.x&&__663.x);
              __661.y = (__662.y&&__663.y);
              __661.z = (__662.z&&__663.z);
              __661.w = (__662.w&&__663.w);
            __657.x = (__658.x||__661.x);
            __657.y = (__658.y||__661.y);
            __657.z = (__658.z||__661.z);
            __657.w = (__658.w||__661.w);
          int4 __664;
            int4 v__587 = make_int4(1, 1, 1, 1);
            __664.x = (__655.x-v__587.x);
            __664.y = (__655.y-v__587.y);
            __664.z = (__655.z-v__587.z);
            __664.w = (__655.w-v__587.w);
          __656.x = (bool(__657.x)?__655.x:__664.x);
          __656.y = (bool(__657.y)?__655.y:__664.y);
          __656.z = (bool(__657.z)?__655.z:__664.z);
          __656.w = (bool(__657.w)?__655.w:__664.w);
          __653.x = (v__576.x+__656.x);
          __653.y = (v__576.y+__656.y);
          __653.z = (v__576.z+__656.z);
          __653.w = (v__576.w+__656.w);
        int v__588 = ((0x000000ff << 0) & (B[__653.x] << 0))|((0x000000ff << 8) & (B[__653.y] << 8))|((0x000000ff << 16) & (B[__653.z] << 16))|((0x000000ff << 24) & (B[__653.w] << 24));
        __652.x = (int)(((char)(v__588 >> 0)));
        __652.y = (int)(((char)(v__588 >> 8)));
        __652.z = (int)(((char)(v__588 >> 16)));
        __652.w = (int)(((char)(v__588 >> 24)));
        int4 __665;
          int4 __666;
            int4 v__589 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__590 = make_int4(2, 2, 2, 2);
            __666.x = (v__589.x%v__590.x);
            __666.y = (v__589.y%v__590.y);
            __666.z = (v__589.z%v__590.z);
            __666.w = (v__589.w%v__590.w);
          int4 __667;
          ushort4 __668;
            ushort4 __669;
              ushort4 __670;
                int4 v__591 = make_int4(2, 2, 2, 2);
                int4 v__592 = make_int4(0, 0, 0, 0);
                __670.x = (v__591.x>=v__592.x);
                __670.y = (v__591.y>=v__592.y);
                __670.z = (v__591.z>=v__592.z);
                __670.w = (v__591.w>=v__592.w);
              ushort4 __671;
                int4 v__593 = make_int4(0, 0, 0, 0);
                __671.x = (__666.x>=v__593.x);
                __671.y = (__666.y>=v__593.y);
                __671.z = (__666.z>=v__593.z);
                __671.w = (__666.w>=v__593.w);
              __669.x = (__670.x&&__671.x);
              __669.y = (__670.y&&__671.y);
              __669.z = (__670.z&&__671.z);
              __669.w = (__670.w&&__671.w);
            ushort4 __672;
              ushort4 __673;
                int4 v__594 = make_int4(2, 2, 2, 2);
                int4 v__595 = make_int4(0, 0, 0, 0);
                __673.x = (v__594.x<v__595.x);
                __673.y = (v__594.y<v__595.y);
                __673.z = (v__594.z<v__595.z);
                __673.w = (v__594.w<v__595.w);
              ushort4 __674;
                int4 v__596 = make_int4(0, 0, 0, 0);
                __674.x = (__666.x<=v__596.x);
                __674.y = (__666.y<=v__596.y);
                __674.z = (__666.z<=v__596.z);
                __674.w = (__666.w<=v__596.w);
              __672.x = (__673.x&&__674.x);
              __672.y = (__673.y&&__674.y);
              __672.z = (__673.z&&__674.z);
              __672.w = (__673.w&&__674.w);
            __668.x = (__669.x||__672.x);
            __668.y = (__669.y||__672.y);
            __668.z = (__669.z||__672.z);
            __668.w = (__669.w||__672.w);
          int4 __675;
            int4 v__597 = make_int4(2, 2, 2, 2);
            __675.x = (__666.x+v__597.x);
            __675.y = (__666.y+v__597.y);
            __675.z = (__666.z+v__597.z);
            __675.w = (__666.w+v__597.w);
          __667.x = (bool(__668.x)?__666.x:__675.x);
          __667.y = (bool(__668.y)?__666.y:__675.y);
          __667.z = (bool(__668.z)?__666.z:__675.z);
          __667.w = (bool(__668.w)?__666.w:__675.w);
          int4 v__598 = make_int4(4, 4, 4, 4);
          __665.x = (__667.x*v__598.x);
          __665.y = (__667.y*v__598.y);
          __665.z = (__667.z*v__598.z);
          __665.w = (__667.w*v__598.w);
        __651.x = (__652.x >> __665.x);
        __651.y = (__652.y >> __665.y);
        __651.z = (__652.z >> __665.z);
        __651.w = (__652.w >> __665.w);
      int4 v__599 = make_int4(15, 15, 15, 15);
      __650.x = (__651.x & v__599.x);
      __650.y = (__651.y & v__599.y);
      __650.z = (__651.z & v__599.z);
      __650.w = (__651.w & v__599.w);
    ((half2*)(&(__649.x)))->x = (half)(__650.x);
    ((half2*)(&(__649.x)))->y = (half)(__650.y);
    ((half2*)(&(__649.y)))->x = (half)(__650.z);
    ((half2*)(&(__649.y)))->y = (half)(__650.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5440)) = __649;
    uint2 __676;
    int4 __677;
      int4 __678;
        int4 __679;
        int4 __680;
          int4 v__600 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 204800), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 204800), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 204800), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 204800));
          int4 __681;
            int4 v__601 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__602 = make_int4(2, 2, 2, 2);
            __681.x = (v__601.x%v__602.x);
            __681.y = (v__601.y%v__602.y);
            __681.z = (v__601.z%v__602.z);
            __681.w = (v__601.w%v__602.w);
          int4 __682;
            int4 v__603 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__604 = make_int4(2, 2, 2, 2);
            __682.x = (v__603.x/v__604.x);
            __682.y = (v__603.y/v__604.y);
            __682.z = (v__603.z/v__604.z);
            __682.w = (v__603.w/v__604.w);
          int4 __683;
          ushort4 __684;
            ushort4 __685;
              ushort4 __686;
                int4 v__605 = make_int4(2, 2, 2, 2);
                int4 v__606 = make_int4(0, 0, 0, 0);
                __686.x = (v__605.x>=v__606.x);
                __686.y = (v__605.y>=v__606.y);
                __686.z = (v__605.z>=v__606.z);
                __686.w = (v__605.w>=v__606.w);
              ushort4 __687;
                int4 v__607 = make_int4(0, 0, 0, 0);
                __687.x = (__681.x>=v__607.x);
                __687.y = (__681.y>=v__607.y);
                __687.z = (__681.z>=v__607.z);
                __687.w = (__681.w>=v__607.w);
              __685.x = (__686.x&&__687.x);
              __685.y = (__686.y&&__687.y);
              __685.z = (__686.z&&__687.z);
              __685.w = (__686.w&&__687.w);
            ushort4 __688;
              ushort4 __689;
                int4 v__608 = make_int4(2, 2, 2, 2);
                int4 v__609 = make_int4(0, 0, 0, 0);
                __689.x = (v__608.x<v__609.x);
                __689.y = (v__608.y<v__609.y);
                __689.z = (v__608.z<v__609.z);
                __689.w = (v__608.w<v__609.w);
              ushort4 __690;
                int4 v__610 = make_int4(0, 0, 0, 0);
                __690.x = (__681.x<=v__610.x);
                __690.y = (__681.y<=v__610.y);
                __690.z = (__681.z<=v__610.z);
                __690.w = (__681.w<=v__610.w);
              __688.x = (__689.x&&__690.x);
              __688.y = (__689.y&&__690.y);
              __688.z = (__689.z&&__690.z);
              __688.w = (__689.w&&__690.w);
            __684.x = (__685.x||__688.x);
            __684.y = (__685.y||__688.y);
            __684.z = (__685.z||__688.z);
            __684.w = (__685.w||__688.w);
          int4 __691;
            int4 v__611 = make_int4(1, 1, 1, 1);
            __691.x = (__682.x-v__611.x);
            __691.y = (__682.y-v__611.y);
            __691.z = (__682.z-v__611.z);
            __691.w = (__682.w-v__611.w);
          __683.x = (bool(__684.x)?__682.x:__691.x);
          __683.y = (bool(__684.y)?__682.y:__691.y);
          __683.z = (bool(__684.z)?__682.z:__691.z);
          __683.w = (bool(__684.w)?__682.w:__691.w);
          __680.x = (v__600.x+__683.x);
          __680.y = (v__600.y+__683.y);
          __680.z = (v__600.z+__683.z);
          __680.w = (v__600.w+__683.w);
        int v__612 = ((0x000000ff << 0) & (B[__680.x] << 0))|((0x000000ff << 8) & (B[__680.y] << 8))|((0x000000ff << 16) & (B[__680.z] << 16))|((0x000000ff << 24) & (B[__680.w] << 24));
        __679.x = (int)(((char)(v__612 >> 0)));
        __679.y = (int)(((char)(v__612 >> 8)));
        __679.z = (int)(((char)(v__612 >> 16)));
        __679.w = (int)(((char)(v__612 >> 24)));
        int4 __692;
          int4 __693;
            int4 v__613 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__614 = make_int4(2, 2, 2, 2);
            __693.x = (v__613.x%v__614.x);
            __693.y = (v__613.y%v__614.y);
            __693.z = (v__613.z%v__614.z);
            __693.w = (v__613.w%v__614.w);
          int4 __694;
          ushort4 __695;
            ushort4 __696;
              ushort4 __697;
                int4 v__615 = make_int4(2, 2, 2, 2);
                int4 v__616 = make_int4(0, 0, 0, 0);
                __697.x = (v__615.x>=v__616.x);
                __697.y = (v__615.y>=v__616.y);
                __697.z = (v__615.z>=v__616.z);
                __697.w = (v__615.w>=v__616.w);
              ushort4 __698;
                int4 v__617 = make_int4(0, 0, 0, 0);
                __698.x = (__693.x>=v__617.x);
                __698.y = (__693.y>=v__617.y);
                __698.z = (__693.z>=v__617.z);
                __698.w = (__693.w>=v__617.w);
              __696.x = (__697.x&&__698.x);
              __696.y = (__697.y&&__698.y);
              __696.z = (__697.z&&__698.z);
              __696.w = (__697.w&&__698.w);
            ushort4 __699;
              ushort4 __700;
                int4 v__618 = make_int4(2, 2, 2, 2);
                int4 v__619 = make_int4(0, 0, 0, 0);
                __700.x = (v__618.x<v__619.x);
                __700.y = (v__618.y<v__619.y);
                __700.z = (v__618.z<v__619.z);
                __700.w = (v__618.w<v__619.w);
              ushort4 __701;
                int4 v__620 = make_int4(0, 0, 0, 0);
                __701.x = (__693.x<=v__620.x);
                __701.y = (__693.y<=v__620.y);
                __701.z = (__693.z<=v__620.z);
                __701.w = (__693.w<=v__620.w);
              __699.x = (__700.x&&__701.x);
              __699.y = (__700.y&&__701.y);
              __699.z = (__700.z&&__701.z);
              __699.w = (__700.w&&__701.w);
            __695.x = (__696.x||__699.x);
            __695.y = (__696.y||__699.y);
            __695.z = (__696.z||__699.z);
            __695.w = (__696.w||__699.w);
          int4 __702;
            int4 v__621 = make_int4(2, 2, 2, 2);
            __702.x = (__693.x+v__621.x);
            __702.y = (__693.y+v__621.y);
            __702.z = (__693.z+v__621.z);
            __702.w = (__693.w+v__621.w);
          __694.x = (bool(__695.x)?__693.x:__702.x);
          __694.y = (bool(__695.y)?__693.y:__702.y);
          __694.z = (bool(__695.z)?__693.z:__702.z);
          __694.w = (bool(__695.w)?__693.w:__702.w);
          int4 v__622 = make_int4(4, 4, 4, 4);
          __692.x = (__694.x*v__622.x);
          __692.y = (__694.y*v__622.y);
          __692.z = (__694.z*v__622.z);
          __692.w = (__694.w*v__622.w);
        __678.x = (__679.x >> __692.x);
        __678.y = (__679.y >> __692.y);
        __678.z = (__679.z >> __692.z);
        __678.w = (__679.w >> __692.w);
      int4 v__623 = make_int4(15, 15, 15, 15);
      __677.x = (__678.x & v__623.x);
      __677.y = (__678.y & v__623.y);
      __677.z = (__678.z & v__623.z);
      __677.w = (__678.w & v__623.w);
    ((half2*)(&(__676.x)))->x = (half)(__677.x);
    ((half2*)(&(__676.x)))->y = (half)(__677.y);
    ((half2*)(&(__676.y)))->x = (half)(__677.z);
    ((half2*)(&(__676.y)))->y = (half)(__677.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5576)) = __676;
    uint2 __703;
    int4 __704;
      int4 __705;
        int4 __706;
        int4 __707;
          int4 v__624 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 212992), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 212992), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 212992), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 212992));
          int4 __708;
            int4 v__625 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__626 = make_int4(2, 2, 2, 2);
            __708.x = (v__625.x%v__626.x);
            __708.y = (v__625.y%v__626.y);
            __708.z = (v__625.z%v__626.z);
            __708.w = (v__625.w%v__626.w);
          int4 __709;
            int4 v__627 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__628 = make_int4(2, 2, 2, 2);
            __709.x = (v__627.x/v__628.x);
            __709.y = (v__627.y/v__628.y);
            __709.z = (v__627.z/v__628.z);
            __709.w = (v__627.w/v__628.w);
          int4 __710;
          ushort4 __711;
            ushort4 __712;
              ushort4 __713;
                int4 v__629 = make_int4(2, 2, 2, 2);
                int4 v__630 = make_int4(0, 0, 0, 0);
                __713.x = (v__629.x>=v__630.x);
                __713.y = (v__629.y>=v__630.y);
                __713.z = (v__629.z>=v__630.z);
                __713.w = (v__629.w>=v__630.w);
              ushort4 __714;
                int4 v__631 = make_int4(0, 0, 0, 0);
                __714.x = (__708.x>=v__631.x);
                __714.y = (__708.y>=v__631.y);
                __714.z = (__708.z>=v__631.z);
                __714.w = (__708.w>=v__631.w);
              __712.x = (__713.x&&__714.x);
              __712.y = (__713.y&&__714.y);
              __712.z = (__713.z&&__714.z);
              __712.w = (__713.w&&__714.w);
            ushort4 __715;
              ushort4 __716;
                int4 v__632 = make_int4(2, 2, 2, 2);
                int4 v__633 = make_int4(0, 0, 0, 0);
                __716.x = (v__632.x<v__633.x);
                __716.y = (v__632.y<v__633.y);
                __716.z = (v__632.z<v__633.z);
                __716.w = (v__632.w<v__633.w);
              ushort4 __717;
                int4 v__634 = make_int4(0, 0, 0, 0);
                __717.x = (__708.x<=v__634.x);
                __717.y = (__708.y<=v__634.y);
                __717.z = (__708.z<=v__634.z);
                __717.w = (__708.w<=v__634.w);
              __715.x = (__716.x&&__717.x);
              __715.y = (__716.y&&__717.y);
              __715.z = (__716.z&&__717.z);
              __715.w = (__716.w&&__717.w);
            __711.x = (__712.x||__715.x);
            __711.y = (__712.y||__715.y);
            __711.z = (__712.z||__715.z);
            __711.w = (__712.w||__715.w);
          int4 __718;
            int4 v__635 = make_int4(1, 1, 1, 1);
            __718.x = (__709.x-v__635.x);
            __718.y = (__709.y-v__635.y);
            __718.z = (__709.z-v__635.z);
            __718.w = (__709.w-v__635.w);
          __710.x = (bool(__711.x)?__709.x:__718.x);
          __710.y = (bool(__711.y)?__709.y:__718.y);
          __710.z = (bool(__711.z)?__709.z:__718.z);
          __710.w = (bool(__711.w)?__709.w:__718.w);
          __707.x = (v__624.x+__710.x);
          __707.y = (v__624.y+__710.y);
          __707.z = (v__624.z+__710.z);
          __707.w = (v__624.w+__710.w);
        int v__636 = ((0x000000ff << 0) & (B[__707.x] << 0))|((0x000000ff << 8) & (B[__707.y] << 8))|((0x000000ff << 16) & (B[__707.z] << 16))|((0x000000ff << 24) & (B[__707.w] << 24));
        __706.x = (int)(((char)(v__636 >> 0)));
        __706.y = (int)(((char)(v__636 >> 8)));
        __706.z = (int)(((char)(v__636 >> 16)));
        __706.w = (int)(((char)(v__636 >> 24)));
        int4 __719;
          int4 __720;
            int4 v__637 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__638 = make_int4(2, 2, 2, 2);
            __720.x = (v__637.x%v__638.x);
            __720.y = (v__637.y%v__638.y);
            __720.z = (v__637.z%v__638.z);
            __720.w = (v__637.w%v__638.w);
          int4 __721;
          ushort4 __722;
            ushort4 __723;
              ushort4 __724;
                int4 v__639 = make_int4(2, 2, 2, 2);
                int4 v__640 = make_int4(0, 0, 0, 0);
                __724.x = (v__639.x>=v__640.x);
                __724.y = (v__639.y>=v__640.y);
                __724.z = (v__639.z>=v__640.z);
                __724.w = (v__639.w>=v__640.w);
              ushort4 __725;
                int4 v__641 = make_int4(0, 0, 0, 0);
                __725.x = (__720.x>=v__641.x);
                __725.y = (__720.y>=v__641.y);
                __725.z = (__720.z>=v__641.z);
                __725.w = (__720.w>=v__641.w);
              __723.x = (__724.x&&__725.x);
              __723.y = (__724.y&&__725.y);
              __723.z = (__724.z&&__725.z);
              __723.w = (__724.w&&__725.w);
            ushort4 __726;
              ushort4 __727;
                int4 v__642 = make_int4(2, 2, 2, 2);
                int4 v__643 = make_int4(0, 0, 0, 0);
                __727.x = (v__642.x<v__643.x);
                __727.y = (v__642.y<v__643.y);
                __727.z = (v__642.z<v__643.z);
                __727.w = (v__642.w<v__643.w);
              ushort4 __728;
                int4 v__644 = make_int4(0, 0, 0, 0);
                __728.x = (__720.x<=v__644.x);
                __728.y = (__720.y<=v__644.y);
                __728.z = (__720.z<=v__644.z);
                __728.w = (__720.w<=v__644.w);
              __726.x = (__727.x&&__728.x);
              __726.y = (__727.y&&__728.y);
              __726.z = (__727.z&&__728.z);
              __726.w = (__727.w&&__728.w);
            __722.x = (__723.x||__726.x);
            __722.y = (__723.y||__726.y);
            __722.z = (__723.z||__726.z);
            __722.w = (__723.w||__726.w);
          int4 __729;
            int4 v__645 = make_int4(2, 2, 2, 2);
            __729.x = (__720.x+v__645.x);
            __729.y = (__720.y+v__645.y);
            __729.z = (__720.z+v__645.z);
            __729.w = (__720.w+v__645.w);
          __721.x = (bool(__722.x)?__720.x:__729.x);
          __721.y = (bool(__722.y)?__720.y:__729.y);
          __721.z = (bool(__722.z)?__720.z:__729.z);
          __721.w = (bool(__722.w)?__720.w:__729.w);
          int4 v__646 = make_int4(4, 4, 4, 4);
          __719.x = (__721.x*v__646.x);
          __719.y = (__721.y*v__646.y);
          __719.z = (__721.z*v__646.z);
          __719.w = (__721.w*v__646.w);
        __705.x = (__706.x >> __719.x);
        __705.y = (__706.y >> __719.y);
        __705.z = (__706.z >> __719.z);
        __705.w = (__706.w >> __719.w);
      int4 v__647 = make_int4(15, 15, 15, 15);
      __704.x = (__705.x & v__647.x);
      __704.y = (__705.y & v__647.y);
      __704.z = (__705.z & v__647.z);
      __704.w = (__705.w & v__647.w);
    ((half2*)(&(__703.x)))->x = (half)(__704.x);
    ((half2*)(&(__703.x)))->y = (half)(__704.y);
    ((half2*)(&(__703.y)))->x = (half)(__704.z);
    ((half2*)(&(__703.y)))->y = (half)(__704.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5712)) = __703;
    uint2 __730;
    int4 __731;
      int4 __732;
        int4 __733;
        int4 __734;
          int4 v__648 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 221184), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 221184), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 221184), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 221184));
          int4 __735;
            int4 v__649 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__650 = make_int4(2, 2, 2, 2);
            __735.x = (v__649.x%v__650.x);
            __735.y = (v__649.y%v__650.y);
            __735.z = (v__649.z%v__650.z);
            __735.w = (v__649.w%v__650.w);
          int4 __736;
            int4 v__651 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__652 = make_int4(2, 2, 2, 2);
            __736.x = (v__651.x/v__652.x);
            __736.y = (v__651.y/v__652.y);
            __736.z = (v__651.z/v__652.z);
            __736.w = (v__651.w/v__652.w);
          int4 __737;
          ushort4 __738;
            ushort4 __739;
              ushort4 __740;
                int4 v__653 = make_int4(2, 2, 2, 2);
                int4 v__654 = make_int4(0, 0, 0, 0);
                __740.x = (v__653.x>=v__654.x);
                __740.y = (v__653.y>=v__654.y);
                __740.z = (v__653.z>=v__654.z);
                __740.w = (v__653.w>=v__654.w);
              ushort4 __741;
                int4 v__655 = make_int4(0, 0, 0, 0);
                __741.x = (__735.x>=v__655.x);
                __741.y = (__735.y>=v__655.y);
                __741.z = (__735.z>=v__655.z);
                __741.w = (__735.w>=v__655.w);
              __739.x = (__740.x&&__741.x);
              __739.y = (__740.y&&__741.y);
              __739.z = (__740.z&&__741.z);
              __739.w = (__740.w&&__741.w);
            ushort4 __742;
              ushort4 __743;
                int4 v__656 = make_int4(2, 2, 2, 2);
                int4 v__657 = make_int4(0, 0, 0, 0);
                __743.x = (v__656.x<v__657.x);
                __743.y = (v__656.y<v__657.y);
                __743.z = (v__656.z<v__657.z);
                __743.w = (v__656.w<v__657.w);
              ushort4 __744;
                int4 v__658 = make_int4(0, 0, 0, 0);
                __744.x = (__735.x<=v__658.x);
                __744.y = (__735.y<=v__658.y);
                __744.z = (__735.z<=v__658.z);
                __744.w = (__735.w<=v__658.w);
              __742.x = (__743.x&&__744.x);
              __742.y = (__743.y&&__744.y);
              __742.z = (__743.z&&__744.z);
              __742.w = (__743.w&&__744.w);
            __738.x = (__739.x||__742.x);
            __738.y = (__739.y||__742.y);
            __738.z = (__739.z||__742.z);
            __738.w = (__739.w||__742.w);
          int4 __745;
            int4 v__659 = make_int4(1, 1, 1, 1);
            __745.x = (__736.x-v__659.x);
            __745.y = (__736.y-v__659.y);
            __745.z = (__736.z-v__659.z);
            __745.w = (__736.w-v__659.w);
          __737.x = (bool(__738.x)?__736.x:__745.x);
          __737.y = (bool(__738.y)?__736.y:__745.y);
          __737.z = (bool(__738.z)?__736.z:__745.z);
          __737.w = (bool(__738.w)?__736.w:__745.w);
          __734.x = (v__648.x+__737.x);
          __734.y = (v__648.y+__737.y);
          __734.z = (v__648.z+__737.z);
          __734.w = (v__648.w+__737.w);
        int v__660 = ((0x000000ff << 0) & (B[__734.x] << 0))|((0x000000ff << 8) & (B[__734.y] << 8))|((0x000000ff << 16) & (B[__734.z] << 16))|((0x000000ff << 24) & (B[__734.w] << 24));
        __733.x = (int)(((char)(v__660 >> 0)));
        __733.y = (int)(((char)(v__660 >> 8)));
        __733.z = (int)(((char)(v__660 >> 16)));
        __733.w = (int)(((char)(v__660 >> 24)));
        int4 __746;
          int4 __747;
            int4 v__661 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__662 = make_int4(2, 2, 2, 2);
            __747.x = (v__661.x%v__662.x);
            __747.y = (v__661.y%v__662.y);
            __747.z = (v__661.z%v__662.z);
            __747.w = (v__661.w%v__662.w);
          int4 __748;
          ushort4 __749;
            ushort4 __750;
              ushort4 __751;
                int4 v__663 = make_int4(2, 2, 2, 2);
                int4 v__664 = make_int4(0, 0, 0, 0);
                __751.x = (v__663.x>=v__664.x);
                __751.y = (v__663.y>=v__664.y);
                __751.z = (v__663.z>=v__664.z);
                __751.w = (v__663.w>=v__664.w);
              ushort4 __752;
                int4 v__665 = make_int4(0, 0, 0, 0);
                __752.x = (__747.x>=v__665.x);
                __752.y = (__747.y>=v__665.y);
                __752.z = (__747.z>=v__665.z);
                __752.w = (__747.w>=v__665.w);
              __750.x = (__751.x&&__752.x);
              __750.y = (__751.y&&__752.y);
              __750.z = (__751.z&&__752.z);
              __750.w = (__751.w&&__752.w);
            ushort4 __753;
              ushort4 __754;
                int4 v__666 = make_int4(2, 2, 2, 2);
                int4 v__667 = make_int4(0, 0, 0, 0);
                __754.x = (v__666.x<v__667.x);
                __754.y = (v__666.y<v__667.y);
                __754.z = (v__666.z<v__667.z);
                __754.w = (v__666.w<v__667.w);
              ushort4 __755;
                int4 v__668 = make_int4(0, 0, 0, 0);
                __755.x = (__747.x<=v__668.x);
                __755.y = (__747.y<=v__668.y);
                __755.z = (__747.z<=v__668.z);
                __755.w = (__747.w<=v__668.w);
              __753.x = (__754.x&&__755.x);
              __753.y = (__754.y&&__755.y);
              __753.z = (__754.z&&__755.z);
              __753.w = (__754.w&&__755.w);
            __749.x = (__750.x||__753.x);
            __749.y = (__750.y||__753.y);
            __749.z = (__750.z||__753.z);
            __749.w = (__750.w||__753.w);
          int4 __756;
            int4 v__669 = make_int4(2, 2, 2, 2);
            __756.x = (__747.x+v__669.x);
            __756.y = (__747.y+v__669.y);
            __756.z = (__747.z+v__669.z);
            __756.w = (__747.w+v__669.w);
          __748.x = (bool(__749.x)?__747.x:__756.x);
          __748.y = (bool(__749.y)?__747.y:__756.y);
          __748.z = (bool(__749.z)?__747.z:__756.z);
          __748.w = (bool(__749.w)?__747.w:__756.w);
          int4 v__670 = make_int4(4, 4, 4, 4);
          __746.x = (__748.x*v__670.x);
          __746.y = (__748.y*v__670.y);
          __746.z = (__748.z*v__670.z);
          __746.w = (__748.w*v__670.w);
        __732.x = (__733.x >> __746.x);
        __732.y = (__733.y >> __746.y);
        __732.z = (__733.z >> __746.z);
        __732.w = (__733.w >> __746.w);
      int4 v__671 = make_int4(15, 15, 15, 15);
      __731.x = (__732.x & v__671.x);
      __731.y = (__732.y & v__671.y);
      __731.z = (__732.z & v__671.z);
      __731.w = (__732.w & v__671.w);
    ((half2*)(&(__730.x)))->x = (half)(__731.x);
    ((half2*)(&(__730.x)))->y = (half)(__731.y);
    ((half2*)(&(__730.y)))->x = (half)(__731.z);
    ((half2*)(&(__730.y)))->y = (half)(__731.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5848)) = __730;
    uint2 __757;
    int4 __758;
      int4 __759;
        int4 __760;
        int4 __761;
          int4 v__672 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 229376), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 229376), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 229376), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 229376));
          int4 __762;
            int4 v__673 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__674 = make_int4(2, 2, 2, 2);
            __762.x = (v__673.x%v__674.x);
            __762.y = (v__673.y%v__674.y);
            __762.z = (v__673.z%v__674.z);
            __762.w = (v__673.w%v__674.w);
          int4 __763;
            int4 v__675 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__676 = make_int4(2, 2, 2, 2);
            __763.x = (v__675.x/v__676.x);
            __763.y = (v__675.y/v__676.y);
            __763.z = (v__675.z/v__676.z);
            __763.w = (v__675.w/v__676.w);
          int4 __764;
          ushort4 __765;
            ushort4 __766;
              ushort4 __767;
                int4 v__677 = make_int4(2, 2, 2, 2);
                int4 v__678 = make_int4(0, 0, 0, 0);
                __767.x = (v__677.x>=v__678.x);
                __767.y = (v__677.y>=v__678.y);
                __767.z = (v__677.z>=v__678.z);
                __767.w = (v__677.w>=v__678.w);
              ushort4 __768;
                int4 v__679 = make_int4(0, 0, 0, 0);
                __768.x = (__762.x>=v__679.x);
                __768.y = (__762.y>=v__679.y);
                __768.z = (__762.z>=v__679.z);
                __768.w = (__762.w>=v__679.w);
              __766.x = (__767.x&&__768.x);
              __766.y = (__767.y&&__768.y);
              __766.z = (__767.z&&__768.z);
              __766.w = (__767.w&&__768.w);
            ushort4 __769;
              ushort4 __770;
                int4 v__680 = make_int4(2, 2, 2, 2);
                int4 v__681 = make_int4(0, 0, 0, 0);
                __770.x = (v__680.x<v__681.x);
                __770.y = (v__680.y<v__681.y);
                __770.z = (v__680.z<v__681.z);
                __770.w = (v__680.w<v__681.w);
              ushort4 __771;
                int4 v__682 = make_int4(0, 0, 0, 0);
                __771.x = (__762.x<=v__682.x);
                __771.y = (__762.y<=v__682.y);
                __771.z = (__762.z<=v__682.z);
                __771.w = (__762.w<=v__682.w);
              __769.x = (__770.x&&__771.x);
              __769.y = (__770.y&&__771.y);
              __769.z = (__770.z&&__771.z);
              __769.w = (__770.w&&__771.w);
            __765.x = (__766.x||__769.x);
            __765.y = (__766.y||__769.y);
            __765.z = (__766.z||__769.z);
            __765.w = (__766.w||__769.w);
          int4 __772;
            int4 v__683 = make_int4(1, 1, 1, 1);
            __772.x = (__763.x-v__683.x);
            __772.y = (__763.y-v__683.y);
            __772.z = (__763.z-v__683.z);
            __772.w = (__763.w-v__683.w);
          __764.x = (bool(__765.x)?__763.x:__772.x);
          __764.y = (bool(__765.y)?__763.y:__772.y);
          __764.z = (bool(__765.z)?__763.z:__772.z);
          __764.w = (bool(__765.w)?__763.w:__772.w);
          __761.x = (v__672.x+__764.x);
          __761.y = (v__672.y+__764.y);
          __761.z = (v__672.z+__764.z);
          __761.w = (v__672.w+__764.w);
        int v__684 = ((0x000000ff << 0) & (B[__761.x] << 0))|((0x000000ff << 8) & (B[__761.y] << 8))|((0x000000ff << 16) & (B[__761.z] << 16))|((0x000000ff << 24) & (B[__761.w] << 24));
        __760.x = (int)(((char)(v__684 >> 0)));
        __760.y = (int)(((char)(v__684 >> 8)));
        __760.z = (int)(((char)(v__684 >> 16)));
        __760.w = (int)(((char)(v__684 >> 24)));
        int4 __773;
          int4 __774;
            int4 v__685 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__686 = make_int4(2, 2, 2, 2);
            __774.x = (v__685.x%v__686.x);
            __774.y = (v__685.y%v__686.y);
            __774.z = (v__685.z%v__686.z);
            __774.w = (v__685.w%v__686.w);
          int4 __775;
          ushort4 __776;
            ushort4 __777;
              ushort4 __778;
                int4 v__687 = make_int4(2, 2, 2, 2);
                int4 v__688 = make_int4(0, 0, 0, 0);
                __778.x = (v__687.x>=v__688.x);
                __778.y = (v__687.y>=v__688.y);
                __778.z = (v__687.z>=v__688.z);
                __778.w = (v__687.w>=v__688.w);
              ushort4 __779;
                int4 v__689 = make_int4(0, 0, 0, 0);
                __779.x = (__774.x>=v__689.x);
                __779.y = (__774.y>=v__689.y);
                __779.z = (__774.z>=v__689.z);
                __779.w = (__774.w>=v__689.w);
              __777.x = (__778.x&&__779.x);
              __777.y = (__778.y&&__779.y);
              __777.z = (__778.z&&__779.z);
              __777.w = (__778.w&&__779.w);
            ushort4 __780;
              ushort4 __781;
                int4 v__690 = make_int4(2, 2, 2, 2);
                int4 v__691 = make_int4(0, 0, 0, 0);
                __781.x = (v__690.x<v__691.x);
                __781.y = (v__690.y<v__691.y);
                __781.z = (v__690.z<v__691.z);
                __781.w = (v__690.w<v__691.w);
              ushort4 __782;
                int4 v__692 = make_int4(0, 0, 0, 0);
                __782.x = (__774.x<=v__692.x);
                __782.y = (__774.y<=v__692.y);
                __782.z = (__774.z<=v__692.z);
                __782.w = (__774.w<=v__692.w);
              __780.x = (__781.x&&__782.x);
              __780.y = (__781.y&&__782.y);
              __780.z = (__781.z&&__782.z);
              __780.w = (__781.w&&__782.w);
            __776.x = (__777.x||__780.x);
            __776.y = (__777.y||__780.y);
            __776.z = (__777.z||__780.z);
            __776.w = (__777.w||__780.w);
          int4 __783;
            int4 v__693 = make_int4(2, 2, 2, 2);
            __783.x = (__774.x+v__693.x);
            __783.y = (__774.y+v__693.y);
            __783.z = (__774.z+v__693.z);
            __783.w = (__774.w+v__693.w);
          __775.x = (bool(__776.x)?__774.x:__783.x);
          __775.y = (bool(__776.y)?__774.y:__783.y);
          __775.z = (bool(__776.z)?__774.z:__783.z);
          __775.w = (bool(__776.w)?__774.w:__783.w);
          int4 v__694 = make_int4(4, 4, 4, 4);
          __773.x = (__775.x*v__694.x);
          __773.y = (__775.y*v__694.y);
          __773.z = (__775.z*v__694.z);
          __773.w = (__775.w*v__694.w);
        __759.x = (__760.x >> __773.x);
        __759.y = (__760.y >> __773.y);
        __759.z = (__760.z >> __773.z);
        __759.w = (__760.w >> __773.w);
      int4 v__695 = make_int4(15, 15, 15, 15);
      __758.x = (__759.x & v__695.x);
      __758.y = (__759.y & v__695.y);
      __758.z = (__759.z & v__695.z);
      __758.w = (__759.w & v__695.w);
    ((half2*)(&(__757.x)))->x = (half)(__758.x);
    ((half2*)(&(__757.x)))->y = (half)(__758.y);
    ((half2*)(&(__757.y)))->x = (half)(__758.z);
    ((half2*)(&(__757.y)))->y = (half)(__758.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 5984)) = __757;
    uint2 __784;
    int4 __785;
      int4 __786;
        int4 __787;
        int4 __788;
          int4 v__696 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 237568), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 237568), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 237568), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 237568));
          int4 __789;
            int4 v__697 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__698 = make_int4(2, 2, 2, 2);
            __789.x = (v__697.x%v__698.x);
            __789.y = (v__697.y%v__698.y);
            __789.z = (v__697.z%v__698.z);
            __789.w = (v__697.w%v__698.w);
          int4 __790;
            int4 v__699 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__700 = make_int4(2, 2, 2, 2);
            __790.x = (v__699.x/v__700.x);
            __790.y = (v__699.y/v__700.y);
            __790.z = (v__699.z/v__700.z);
            __790.w = (v__699.w/v__700.w);
          int4 __791;
          ushort4 __792;
            ushort4 __793;
              ushort4 __794;
                int4 v__701 = make_int4(2, 2, 2, 2);
                int4 v__702 = make_int4(0, 0, 0, 0);
                __794.x = (v__701.x>=v__702.x);
                __794.y = (v__701.y>=v__702.y);
                __794.z = (v__701.z>=v__702.z);
                __794.w = (v__701.w>=v__702.w);
              ushort4 __795;
                int4 v__703 = make_int4(0, 0, 0, 0);
                __795.x = (__789.x>=v__703.x);
                __795.y = (__789.y>=v__703.y);
                __795.z = (__789.z>=v__703.z);
                __795.w = (__789.w>=v__703.w);
              __793.x = (__794.x&&__795.x);
              __793.y = (__794.y&&__795.y);
              __793.z = (__794.z&&__795.z);
              __793.w = (__794.w&&__795.w);
            ushort4 __796;
              ushort4 __797;
                int4 v__704 = make_int4(2, 2, 2, 2);
                int4 v__705 = make_int4(0, 0, 0, 0);
                __797.x = (v__704.x<v__705.x);
                __797.y = (v__704.y<v__705.y);
                __797.z = (v__704.z<v__705.z);
                __797.w = (v__704.w<v__705.w);
              ushort4 __798;
                int4 v__706 = make_int4(0, 0, 0, 0);
                __798.x = (__789.x<=v__706.x);
                __798.y = (__789.y<=v__706.y);
                __798.z = (__789.z<=v__706.z);
                __798.w = (__789.w<=v__706.w);
              __796.x = (__797.x&&__798.x);
              __796.y = (__797.y&&__798.y);
              __796.z = (__797.z&&__798.z);
              __796.w = (__797.w&&__798.w);
            __792.x = (__793.x||__796.x);
            __792.y = (__793.y||__796.y);
            __792.z = (__793.z||__796.z);
            __792.w = (__793.w||__796.w);
          int4 __799;
            int4 v__707 = make_int4(1, 1, 1, 1);
            __799.x = (__790.x-v__707.x);
            __799.y = (__790.y-v__707.y);
            __799.z = (__790.z-v__707.z);
            __799.w = (__790.w-v__707.w);
          __791.x = (bool(__792.x)?__790.x:__799.x);
          __791.y = (bool(__792.y)?__790.y:__799.y);
          __791.z = (bool(__792.z)?__790.z:__799.z);
          __791.w = (bool(__792.w)?__790.w:__799.w);
          __788.x = (v__696.x+__791.x);
          __788.y = (v__696.y+__791.y);
          __788.z = (v__696.z+__791.z);
          __788.w = (v__696.w+__791.w);
        int v__708 = ((0x000000ff << 0) & (B[__788.x] << 0))|((0x000000ff << 8) & (B[__788.y] << 8))|((0x000000ff << 16) & (B[__788.z] << 16))|((0x000000ff << 24) & (B[__788.w] << 24));
        __787.x = (int)(((char)(v__708 >> 0)));
        __787.y = (int)(((char)(v__708 >> 8)));
        __787.z = (int)(((char)(v__708 >> 16)));
        __787.w = (int)(((char)(v__708 >> 24)));
        int4 __800;
          int4 __801;
            int4 v__709 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__710 = make_int4(2, 2, 2, 2);
            __801.x = (v__709.x%v__710.x);
            __801.y = (v__709.y%v__710.y);
            __801.z = (v__709.z%v__710.z);
            __801.w = (v__709.w%v__710.w);
          int4 __802;
          ushort4 __803;
            ushort4 __804;
              ushort4 __805;
                int4 v__711 = make_int4(2, 2, 2, 2);
                int4 v__712 = make_int4(0, 0, 0, 0);
                __805.x = (v__711.x>=v__712.x);
                __805.y = (v__711.y>=v__712.y);
                __805.z = (v__711.z>=v__712.z);
                __805.w = (v__711.w>=v__712.w);
              ushort4 __806;
                int4 v__713 = make_int4(0, 0, 0, 0);
                __806.x = (__801.x>=v__713.x);
                __806.y = (__801.y>=v__713.y);
                __806.z = (__801.z>=v__713.z);
                __806.w = (__801.w>=v__713.w);
              __804.x = (__805.x&&__806.x);
              __804.y = (__805.y&&__806.y);
              __804.z = (__805.z&&__806.z);
              __804.w = (__805.w&&__806.w);
            ushort4 __807;
              ushort4 __808;
                int4 v__714 = make_int4(2, 2, 2, 2);
                int4 v__715 = make_int4(0, 0, 0, 0);
                __808.x = (v__714.x<v__715.x);
                __808.y = (v__714.y<v__715.y);
                __808.z = (v__714.z<v__715.z);
                __808.w = (v__714.w<v__715.w);
              ushort4 __809;
                int4 v__716 = make_int4(0, 0, 0, 0);
                __809.x = (__801.x<=v__716.x);
                __809.y = (__801.y<=v__716.y);
                __809.z = (__801.z<=v__716.z);
                __809.w = (__801.w<=v__716.w);
              __807.x = (__808.x&&__809.x);
              __807.y = (__808.y&&__809.y);
              __807.z = (__808.z&&__809.z);
              __807.w = (__808.w&&__809.w);
            __803.x = (__804.x||__807.x);
            __803.y = (__804.y||__807.y);
            __803.z = (__804.z||__807.z);
            __803.w = (__804.w||__807.w);
          int4 __810;
            int4 v__717 = make_int4(2, 2, 2, 2);
            __810.x = (__801.x+v__717.x);
            __810.y = (__801.y+v__717.y);
            __810.z = (__801.z+v__717.z);
            __810.w = (__801.w+v__717.w);
          __802.x = (bool(__803.x)?__801.x:__810.x);
          __802.y = (bool(__803.y)?__801.y:__810.y);
          __802.z = (bool(__803.z)?__801.z:__810.z);
          __802.w = (bool(__803.w)?__801.w:__810.w);
          int4 v__718 = make_int4(4, 4, 4, 4);
          __800.x = (__802.x*v__718.x);
          __800.y = (__802.y*v__718.y);
          __800.z = (__802.z*v__718.z);
          __800.w = (__802.w*v__718.w);
        __786.x = (__787.x >> __800.x);
        __786.y = (__787.y >> __800.y);
        __786.z = (__787.z >> __800.z);
        __786.w = (__787.w >> __800.w);
      int4 v__719 = make_int4(15, 15, 15, 15);
      __785.x = (__786.x & v__719.x);
      __785.y = (__786.y & v__719.y);
      __785.z = (__786.z & v__719.z);
      __785.w = (__786.w & v__719.w);
    ((half2*)(&(__784.x)))->x = (half)(__785.x);
    ((half2*)(&(__784.x)))->y = (half)(__785.y);
    ((half2*)(&(__784.y)))->x = (half)(__785.z);
    ((half2*)(&(__784.y)))->y = (half)(__785.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 6120)) = __784;
    uint2 __811;
    int4 __812;
      int4 __813;
        int4 __814;
        int4 __815;
          int4 v__720 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 245760), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 245760), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 245760), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 245760));
          int4 __816;
            int4 v__721 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__722 = make_int4(2, 2, 2, 2);
            __816.x = (v__721.x%v__722.x);
            __816.y = (v__721.y%v__722.y);
            __816.z = (v__721.z%v__722.z);
            __816.w = (v__721.w%v__722.w);
          int4 __817;
            int4 v__723 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__724 = make_int4(2, 2, 2, 2);
            __817.x = (v__723.x/v__724.x);
            __817.y = (v__723.y/v__724.y);
            __817.z = (v__723.z/v__724.z);
            __817.w = (v__723.w/v__724.w);
          int4 __818;
          ushort4 __819;
            ushort4 __820;
              ushort4 __821;
                int4 v__725 = make_int4(2, 2, 2, 2);
                int4 v__726 = make_int4(0, 0, 0, 0);
                __821.x = (v__725.x>=v__726.x);
                __821.y = (v__725.y>=v__726.y);
                __821.z = (v__725.z>=v__726.z);
                __821.w = (v__725.w>=v__726.w);
              ushort4 __822;
                int4 v__727 = make_int4(0, 0, 0, 0);
                __822.x = (__816.x>=v__727.x);
                __822.y = (__816.y>=v__727.y);
                __822.z = (__816.z>=v__727.z);
                __822.w = (__816.w>=v__727.w);
              __820.x = (__821.x&&__822.x);
              __820.y = (__821.y&&__822.y);
              __820.z = (__821.z&&__822.z);
              __820.w = (__821.w&&__822.w);
            ushort4 __823;
              ushort4 __824;
                int4 v__728 = make_int4(2, 2, 2, 2);
                int4 v__729 = make_int4(0, 0, 0, 0);
                __824.x = (v__728.x<v__729.x);
                __824.y = (v__728.y<v__729.y);
                __824.z = (v__728.z<v__729.z);
                __824.w = (v__728.w<v__729.w);
              ushort4 __825;
                int4 v__730 = make_int4(0, 0, 0, 0);
                __825.x = (__816.x<=v__730.x);
                __825.y = (__816.y<=v__730.y);
                __825.z = (__816.z<=v__730.z);
                __825.w = (__816.w<=v__730.w);
              __823.x = (__824.x&&__825.x);
              __823.y = (__824.y&&__825.y);
              __823.z = (__824.z&&__825.z);
              __823.w = (__824.w&&__825.w);
            __819.x = (__820.x||__823.x);
            __819.y = (__820.y||__823.y);
            __819.z = (__820.z||__823.z);
            __819.w = (__820.w||__823.w);
          int4 __826;
            int4 v__731 = make_int4(1, 1, 1, 1);
            __826.x = (__817.x-v__731.x);
            __826.y = (__817.y-v__731.y);
            __826.z = (__817.z-v__731.z);
            __826.w = (__817.w-v__731.w);
          __818.x = (bool(__819.x)?__817.x:__826.x);
          __818.y = (bool(__819.y)?__817.y:__826.y);
          __818.z = (bool(__819.z)?__817.z:__826.z);
          __818.w = (bool(__819.w)?__817.w:__826.w);
          __815.x = (v__720.x+__818.x);
          __815.y = (v__720.y+__818.y);
          __815.z = (v__720.z+__818.z);
          __815.w = (v__720.w+__818.w);
        int v__732 = ((0x000000ff << 0) & (B[__815.x] << 0))|((0x000000ff << 8) & (B[__815.y] << 8))|((0x000000ff << 16) & (B[__815.z] << 16))|((0x000000ff << 24) & (B[__815.w] << 24));
        __814.x = (int)(((char)(v__732 >> 0)));
        __814.y = (int)(((char)(v__732 >> 8)));
        __814.z = (int)(((char)(v__732 >> 16)));
        __814.w = (int)(((char)(v__732 >> 24)));
        int4 __827;
          int4 __828;
            int4 v__733 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__734 = make_int4(2, 2, 2, 2);
            __828.x = (v__733.x%v__734.x);
            __828.y = (v__733.y%v__734.y);
            __828.z = (v__733.z%v__734.z);
            __828.w = (v__733.w%v__734.w);
          int4 __829;
          ushort4 __830;
            ushort4 __831;
              ushort4 __832;
                int4 v__735 = make_int4(2, 2, 2, 2);
                int4 v__736 = make_int4(0, 0, 0, 0);
                __832.x = (v__735.x>=v__736.x);
                __832.y = (v__735.y>=v__736.y);
                __832.z = (v__735.z>=v__736.z);
                __832.w = (v__735.w>=v__736.w);
              ushort4 __833;
                int4 v__737 = make_int4(0, 0, 0, 0);
                __833.x = (__828.x>=v__737.x);
                __833.y = (__828.y>=v__737.y);
                __833.z = (__828.z>=v__737.z);
                __833.w = (__828.w>=v__737.w);
              __831.x = (__832.x&&__833.x);
              __831.y = (__832.y&&__833.y);
              __831.z = (__832.z&&__833.z);
              __831.w = (__832.w&&__833.w);
            ushort4 __834;
              ushort4 __835;
                int4 v__738 = make_int4(2, 2, 2, 2);
                int4 v__739 = make_int4(0, 0, 0, 0);
                __835.x = (v__738.x<v__739.x);
                __835.y = (v__738.y<v__739.y);
                __835.z = (v__738.z<v__739.z);
                __835.w = (v__738.w<v__739.w);
              ushort4 __836;
                int4 v__740 = make_int4(0, 0, 0, 0);
                __836.x = (__828.x<=v__740.x);
                __836.y = (__828.y<=v__740.y);
                __836.z = (__828.z<=v__740.z);
                __836.w = (__828.w<=v__740.w);
              __834.x = (__835.x&&__836.x);
              __834.y = (__835.y&&__836.y);
              __834.z = (__835.z&&__836.z);
              __834.w = (__835.w&&__836.w);
            __830.x = (__831.x||__834.x);
            __830.y = (__831.y||__834.y);
            __830.z = (__831.z||__834.z);
            __830.w = (__831.w||__834.w);
          int4 __837;
            int4 v__741 = make_int4(2, 2, 2, 2);
            __837.x = (__828.x+v__741.x);
            __837.y = (__828.y+v__741.y);
            __837.z = (__828.z+v__741.z);
            __837.w = (__828.w+v__741.w);
          __829.x = (bool(__830.x)?__828.x:__837.x);
          __829.y = (bool(__830.y)?__828.y:__837.y);
          __829.z = (bool(__830.z)?__828.z:__837.z);
          __829.w = (bool(__830.w)?__828.w:__837.w);
          int4 v__742 = make_int4(4, 4, 4, 4);
          __827.x = (__829.x*v__742.x);
          __827.y = (__829.y*v__742.y);
          __827.z = (__829.z*v__742.z);
          __827.w = (__829.w*v__742.w);
        __813.x = (__814.x >> __827.x);
        __813.y = (__814.y >> __827.y);
        __813.z = (__814.z >> __827.z);
        __813.w = (__814.w >> __827.w);
      int4 v__743 = make_int4(15, 15, 15, 15);
      __812.x = (__813.x & v__743.x);
      __812.y = (__813.y & v__743.y);
      __812.z = (__813.z & v__743.z);
      __812.w = (__813.w & v__743.w);
    ((half2*)(&(__811.x)))->x = (half)(__812.x);
    ((half2*)(&(__811.x)))->y = (half)(__812.y);
    ((half2*)(&(__811.y)))->x = (half)(__812.z);
    ((half2*)(&(__811.y)))->y = (half)(__812.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 6256)) = __811;
    uint2 __838;
    int4 __839;
      int4 __840;
        int4 __841;
        int4 __842;
          int4 v__744 = make_int4((((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 253952), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 253952), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 253952), (((((((int)blockIdx.y) * 2097152) + (((int)blockIdx.x) * 262144)) + (ax2_0_0 * 64)) + (((int)threadIdx.x) * 2)) + 253952));
          int4 __843;
            int4 v__745 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__746 = make_int4(2, 2, 2, 2);
            __843.x = (v__745.x%v__746.x);
            __843.y = (v__745.y%v__746.y);
            __843.z = (v__745.z%v__746.z);
            __843.w = (v__745.w%v__746.w);
          int4 __844;
            int4 v__747 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__748 = make_int4(2, 2, 2, 2);
            __844.x = (v__747.x/v__748.x);
            __844.y = (v__747.y/v__748.y);
            __844.z = (v__747.z/v__748.z);
            __844.w = (v__747.w/v__748.w);
          int4 __845;
          ushort4 __846;
            ushort4 __847;
              ushort4 __848;
                int4 v__749 = make_int4(2, 2, 2, 2);
                int4 v__750 = make_int4(0, 0, 0, 0);
                __848.x = (v__749.x>=v__750.x);
                __848.y = (v__749.y>=v__750.y);
                __848.z = (v__749.z>=v__750.z);
                __848.w = (v__749.w>=v__750.w);
              ushort4 __849;
                int4 v__751 = make_int4(0, 0, 0, 0);
                __849.x = (__843.x>=v__751.x);
                __849.y = (__843.y>=v__751.y);
                __849.z = (__843.z>=v__751.z);
                __849.w = (__843.w>=v__751.w);
              __847.x = (__848.x&&__849.x);
              __847.y = (__848.y&&__849.y);
              __847.z = (__848.z&&__849.z);
              __847.w = (__848.w&&__849.w);
            ushort4 __850;
              ushort4 __851;
                int4 v__752 = make_int4(2, 2, 2, 2);
                int4 v__753 = make_int4(0, 0, 0, 0);
                __851.x = (v__752.x<v__753.x);
                __851.y = (v__752.y<v__753.y);
                __851.z = (v__752.z<v__753.z);
                __851.w = (v__752.w<v__753.w);
              ushort4 __852;
                int4 v__754 = make_int4(0, 0, 0, 0);
                __852.x = (__843.x<=v__754.x);
                __852.y = (__843.y<=v__754.y);
                __852.z = (__843.z<=v__754.z);
                __852.w = (__843.w<=v__754.w);
              __850.x = (__851.x&&__852.x);
              __850.y = (__851.y&&__852.y);
              __850.z = (__851.z&&__852.z);
              __850.w = (__851.w&&__852.w);
            __846.x = (__847.x||__850.x);
            __846.y = (__847.y||__850.y);
            __846.z = (__847.z||__850.z);
            __846.w = (__847.w||__850.w);
          int4 __853;
            int4 v__755 = make_int4(1, 1, 1, 1);
            __853.x = (__844.x-v__755.x);
            __853.y = (__844.y-v__755.y);
            __853.z = (__844.z-v__755.z);
            __853.w = (__844.w-v__755.w);
          __845.x = (bool(__846.x)?__844.x:__853.x);
          __845.y = (bool(__846.y)?__844.y:__853.y);
          __845.z = (bool(__846.z)?__844.z:__853.z);
          __845.w = (bool(__846.w)?__844.w:__853.w);
          __842.x = (v__744.x+__845.x);
          __842.y = (v__744.y+__845.y);
          __842.z = (v__744.z+__845.z);
          __842.w = (v__744.w+__845.w);
        int v__756 = ((0x000000ff << 0) & (B[__842.x] << 0))|((0x000000ff << 8) & (B[__842.y] << 8))|((0x000000ff << 16) & (B[__842.z] << 16))|((0x000000ff << 24) & (B[__842.w] << 24));
        __841.x = (int)(((char)(v__756 >> 0)));
        __841.y = (int)(((char)(v__756 >> 8)));
        __841.z = (int)(((char)(v__756 >> 16)));
        __841.w = (int)(((char)(v__756 >> 24)));
        int4 __854;
          int4 __855;
            int4 v__757 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));
            int4 v__758 = make_int4(2, 2, 2, 2);
            __855.x = (v__757.x%v__758.x);
            __855.y = (v__757.y%v__758.y);
            __855.z = (v__757.z%v__758.z);
            __855.w = (v__757.w%v__758.w);
          int4 __856;
          ushort4 __857;
            ushort4 __858;
              ushort4 __859;
                int4 v__759 = make_int4(2, 2, 2, 2);
                int4 v__760 = make_int4(0, 0, 0, 0);
                __859.x = (v__759.x>=v__760.x);
                __859.y = (v__759.y>=v__760.y);
                __859.z = (v__759.z>=v__760.z);
                __859.w = (v__759.w>=v__760.w);
              ushort4 __860;
                int4 v__761 = make_int4(0, 0, 0, 0);
                __860.x = (__855.x>=v__761.x);
                __860.y = (__855.y>=v__761.y);
                __860.z = (__855.z>=v__761.z);
                __860.w = (__855.w>=v__761.w);
              __858.x = (__859.x&&__860.x);
              __858.y = (__859.y&&__860.y);
              __858.z = (__859.z&&__860.z);
              __858.w = (__859.w&&__860.w);
            ushort4 __861;
              ushort4 __862;
                int4 v__762 = make_int4(2, 2, 2, 2);
                int4 v__763 = make_int4(0, 0, 0, 0);
                __862.x = (v__762.x<v__763.x);
                __862.y = (v__762.y<v__763.y);
                __862.z = (v__762.z<v__763.z);
                __862.w = (v__762.w<v__763.w);
              ushort4 __863;
                int4 v__764 = make_int4(0, 0, 0, 0);
                __863.x = (__855.x<=v__764.x);
                __863.y = (__855.y<=v__764.y);
                __863.z = (__855.z<=v__764.z);
                __863.w = (__855.w<=v__764.w);
              __861.x = (__862.x&&__863.x);
              __861.y = (__862.y&&__863.y);
              __861.z = (__862.z&&__863.z);
              __861.w = (__862.w&&__863.w);
            __857.x = (__858.x||__861.x);
            __857.y = (__858.y||__861.y);
            __857.z = (__858.z||__861.z);
            __857.w = (__858.w||__861.w);
          int4 __864;
            int4 v__765 = make_int4(2, 2, 2, 2);
            __864.x = (__855.x+v__765.x);
            __864.y = (__855.y+v__765.y);
            __864.z = (__855.z+v__765.z);
            __864.w = (__855.w+v__765.w);
          __856.x = (bool(__857.x)?__855.x:__864.x);
          __856.y = (bool(__857.y)?__855.y:__864.y);
          __856.z = (bool(__857.z)?__855.z:__864.z);
          __856.w = (bool(__857.w)?__855.w:__864.w);
          int4 v__766 = make_int4(4, 4, 4, 4);
          __854.x = (__856.x*v__766.x);
          __854.y = (__856.y*v__766.y);
          __854.z = (__856.z*v__766.z);
          __854.w = (__856.w*v__766.w);
        __840.x = (__841.x >> __854.x);
        __840.y = (__841.y >> __854.y);
        __840.z = (__841.z >> __854.z);
        __840.w = (__841.w >> __854.w);
      int4 v__767 = make_int4(15, 15, 15, 15);
      __839.x = (__840.x & v__767.x);
      __839.y = (__840.y & v__767.y);
      __839.z = (__840.z & v__767.z);
      __839.w = (__840.w & v__767.w);
    ((half2*)(&(__838.x)))->x = (half)(__839.x);
    ((half2*)(&(__838.x)))->y = (half)(__839.y);
    ((half2*)(&(__838.y)))->x = (half)(__839.z);
    ((half2*)(&(__838.y)))->y = (half)(__839.w);
    *(uint2*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 4) + 6392)) = __838;
    __syncthreads();
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[0], (&(((half*)buf_dyn_shmem)[0])), 136);
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[1], (&(((half*)buf_dyn_shmem)[16])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[0], (&(((half*)buf_dyn_shmem)[2176])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[1], (&(((half*)buf_dyn_shmem)[2192])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[2], (&(((half*)buf_dyn_shmem)[4352])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[3], (&(((half*)buf_dyn_shmem)[4368])), 136);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[0], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[1], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[2], C_reindex_shared_dyn_wmma_accumulator[1]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[3], C_reindex_shared_dyn_wmma_accumulator[1]);
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[0], (&(((half*)buf_dyn_shmem)[32])), 136);
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[1], (&(((half*)buf_dyn_shmem)[48])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[0], (&(((half*)buf_dyn_shmem)[2208])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[1], (&(((half*)buf_dyn_shmem)[2224])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[2], (&(((half*)buf_dyn_shmem)[4384])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[3], (&(((half*)buf_dyn_shmem)[4400])), 136);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[0], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[1], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[2], C_reindex_shared_dyn_wmma_accumulator[1]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[3], C_reindex_shared_dyn_wmma_accumulator[1]);
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[0], (&(((half*)buf_dyn_shmem)[64])), 136);
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[1], (&(((half*)buf_dyn_shmem)[80])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[0], (&(((half*)buf_dyn_shmem)[2240])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[1], (&(((half*)buf_dyn_shmem)[2256])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[2], (&(((half*)buf_dyn_shmem)[4416])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[3], (&(((half*)buf_dyn_shmem)[4432])), 136);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[0], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[1], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[2], C_reindex_shared_dyn_wmma_accumulator[1]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[3], C_reindex_shared_dyn_wmma_accumulator[1]);
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[0], (&(((half*)buf_dyn_shmem)[96])), 136);
    nvcuda::wmma::load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a[1], (&(((half*)buf_dyn_shmem)[112])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[0], (&(((half*)buf_dyn_shmem)[2272])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[1], (&(((half*)buf_dyn_shmem)[2288])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[2], (&(((half*)buf_dyn_shmem)[4448])), 136);
    nvcuda::wmma::load_matrix_sync(B_decompress_reindex_shared_dyn_wmma_matrix_b[3], (&(((half*)buf_dyn_shmem)[4464])), 136);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[0], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[0], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[1], C_reindex_shared_dyn_wmma_accumulator[0]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[0], B_decompress_reindex_shared_dyn_wmma_matrix_b[2], C_reindex_shared_dyn_wmma_accumulator[1]);
    nvcuda::wmma::mma_sync(C_reindex_shared_dyn_wmma_accumulator[1], A_reindex_shared_dyn_wmma_matrix_a[1], B_decompress_reindex_shared_dyn_wmma_matrix_b[3], C_reindex_shared_dyn_wmma_accumulator[1]);
  }
  __syncthreads();
  nvcuda::wmma::store_matrix_sync((&(((half*)buf_dyn_shmem)[0])), C_reindex_shared_dyn_wmma_accumulator[0], 16, nvcuda::wmma::mem_row_major);
  nvcuda::wmma::store_matrix_sync((&(((half*)buf_dyn_shmem)[256])), C_reindex_shared_dyn_wmma_accumulator[1], 16, nvcuda::wmma::mem_row_major);
  __syncthreads();
  *(uint1*)(C + (((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2))) = *(uint1*)(((half*)buf_dyn_shmem) + (((int)threadIdx.x) * 2));
  *(uint1*)(C + ((((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 65536)) = *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 64));
  *(uint1*)(C + ((((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 131072)) = *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 128));
  *(uint1*)(C + ((((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 196608)) = *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 192));
  *(uint1*)(C + ((((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 16)) = *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 256));
  *(uint1*)(C + ((((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 65552)) = *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 320));
  *(uint1*)(C + ((((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 131088)) = *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 384));
  *(uint1*)(C + ((((((((int)threadIdx.x) >> 3) * 16384) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 196624)) = *(uint1*)(((half*)buf_dyn_shmem) + ((((int)threadIdx.x) * 2) + 448));
}

