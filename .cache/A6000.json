{
    "b4n6656k6656": {
        "m1": {
            "func_name": "tir_halfxint4_simt_bn4_k6656",
            "code": "#include <cuda_fp16.h>\nextern \"C\" __global__ void __launch_bounds__(128) tir_halfxint4_simt_bn4_k6656(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C) {\n  half in_thread_C_local[1];\n  half A_local[8];\n  half red_buf0[1];\n  in_thread_C_local[0] = __float2half_rn(0.000000e+00f);\n  for (int k_0 = 0; k_0 < 26; ++k_0) {\n    *(uint4*)(A_local + 0) = *(uint4*)(A + ((k_0 * 256) + (((int)threadIdx.x) * 8)));\n    for (int k_2 = 0; k_2 < 8; ++k_2) {\n      in_thread_C_local[0] = (in_thread_C_local[0] + (A_local[k_2] * ((((half)((((int)B[(((((((int)blockIdx.x) * 13312) + (((int)threadIdx.y) * 3328)) + (k_0 * 128)) + (((int)threadIdx.x) * 4)) + (k_2 >> 1))]) >> ((k_2 & 1) * 4)) & 15)) * Scales[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))]) - Zeros[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))])));\n    }\n  }\n  uint mask[1];\n  half t0[1];\n  red_buf0[0] = in_thread_C_local[0];\n  mask[0] = (__activemask() & ((uint)(0 << (((int)threadIdx.y) * 32))));\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 16, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 8, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 4, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 2, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 1, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  red_buf0[0] = __shfl_sync(mask[0], red_buf0[0], (((int)threadIdx.y) * 32), 32);\n  C[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))] = red_buf0[0];\n}\n\n",
            "params": {
                "num_warps": 4
            }
        },
        "m16": {
            "func_name": "tir_halfxint3_tensorop_16x64x64x2_t0_y1z4_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(128) tir_halfxint3_tensorop_16x64x64x2_t0_y1z4_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[1];\n  __shared__ half APad_shared[2304];\n  __shared__ half B_rescale_shared[9216];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[1];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  nvcuda::wmma::fill_fragment(C_wmma_accumulator[0], 0.000000e+00f);\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(APad_shared + (((((int)threadIdx.z) * 288) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))))\n    );\n    int pred_guard = (int)(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m);\n    __asm__ __volatile__(\n        \"{  .reg .pred p;\"\n        \"  setp.ne.b32 p, %0, 0;\"\n      #if TVM_ENABLE_L2_PREFETCH\n        \" @p cp.async.cg.shared.global.L2::128B [%1], [%2], %3;\"\n      #else\n        \" @p cp.async.cg.shared.global [%1], [%2], %3;\"\n      #endif\n      \"  @!p st.shared.v4.u32 [%1], {%4, %5, %6, %7};}\"\n        :: \"r\"(pred_guard), \"r\"(addr), \"l\"((void*)(A + (((((int)threadIdx.z) * 26624) + ((((int)threadIdx.x) >> 3) * 6656)) + ((((int)threadIdx.x) & 7) * 8)))), \"n\"(16), \"r\"(0), \"r\"(0), \"r\"(0),\"r\"(0)\n    );\n  }\n  for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 8; ++ax0_ax1_fused_2) {\n    uint2 __1;\n      uint2 __2;\n        uint2 __3;\n        int4 __4;\n          int4 __5;\n            int4 __6;\n            int4 __7;\n              int4 v_ = make_int4((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)));\n              int4 __8;\n                int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__2 = make_int4(2, 2, 2, 2);\n                __8.x = (v__1.x%v__2.x);\n                __8.y = (v__1.y%v__2.y);\n                __8.z = (v__1.z%v__2.z);\n                __8.w = (v__1.w%v__2.w);\n              int4 __9;\n                int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__4 = make_int4(2, 2, 2, 2);\n                __9.x = (v__3.x/v__4.x);\n                __9.y = (v__3.y/v__4.y);\n                __9.z = (v__3.z/v__4.z);\n                __9.w = (v__3.w/v__4.w);\n              int4 __10;\n              ushort4 __11;\n                ushort4 __12;\n                  ushort4 __13;\n                    int4 v__5 = make_int4(2, 2, 2, 2);\n                    int4 v__6 = make_int4(0, 0, 0, 0);\n                    __13.x = (v__5.x>=v__6.x);\n                    __13.y = (v__5.y>=v__6.y);\n                    __13.z = (v__5.z>=v__6.z);\n                    __13.w = (v__5.w>=v__6.w);\n                  ushort4 __14;\n                    int4 v__7 = make_int4(0, 0, 0, 0);\n                    __14.x = (__8.x>=v__7.x);\n                    __14.y = (__8.y>=v__7.y);\n                    __14.z = (__8.z>=v__7.z);\n                    __14.w = (__8.w>=v__7.w);\n                  __12.x = (__13.x&&__14.x);\n                  __12.y = (__13.y&&__14.y);\n                  __12.z = (__13.z&&__14.z);\n                  __12.w = (__13.w&&__14.w);\n                ushort4 __15;\n                  ushort4 __16;\n                    int4 v__8 = make_int4(2, 2, 2, 2);\n                    int4 v__9 = make_int4(0, 0, 0, 0);\n                    __16.x = (v__8.x<v__9.x);\n                    __16.y = (v__8.y<v__9.y);\n                    __16.z = (v__8.z<v__9.z);\n                    __16.w = (v__8.w<v__9.w);\n                  ushort4 __17;\n                    int4 v__10 = make_int4(0, 0, 0, 0);\n                    __17.x = (__8.x<=v__10.x);\n                    __17.y = (__8.y<=v__10.y);\n                    __17.z = (__8.z<=v__10.z);\n                    __17.w = (__8.w<=v__10.w);\n                  __15.x = (__16.x&&__17.x);\n                  __15.y = (__16.y&&__17.y);\n                  __15.z = (__16.z&&__17.z);\n                  __15.w = (__16.w&&__17.w);\n                __11.x = (__12.x||__15.x);\n                __11.y = (__12.y||__15.y);\n                __11.z = (__12.z||__15.z);\n                __11.w = (__12.w||__15.w);\n              int4 __18;\n                int4 v__11 = make_int4(1, 1, 1, 1);\n                __18.x = (__9.x-v__11.x);\n                __18.y = (__9.y-v__11.y);\n                __18.z = (__9.z-v__11.z);\n                __18.w = (__9.w-v__11.w);\n              __10.x = (bool(__11.x)?__9.x:__18.x);\n              __10.y = (bool(__11.y)?__9.y:__18.y);\n              __10.z = (bool(__11.z)?__9.z:__18.z);\n              __10.w = (bool(__11.w)?__9.w:__18.w);\n              __7.x = (v_.x+__10.x);\n              __7.y = (v_.y+__10.y);\n              __7.z = (v_.z+__10.z);\n              __7.w = (v_.w+__10.w);\n            int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n            __6.x = (int)(((char)(v__12 >> 0)));\n            __6.y = (int)(((char)(v__12 >> 8)));\n            __6.z = (int)(((char)(v__12 >> 16)));\n            __6.w = (int)(((char)(v__12 >> 24)));\n            int4 __19;\n              int4 __20;\n                int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__14 = make_int4(2, 2, 2, 2);\n                __20.x = (v__13.x%v__14.x);\n                __20.y = (v__13.y%v__14.y);\n                __20.z = (v__13.z%v__14.z);\n                __20.w = (v__13.w%v__14.w);\n              int4 __21;\n              ushort4 __22;\n                ushort4 __23;\n                  ushort4 __24;\n                    int4 v__15 = make_int4(2, 2, 2, 2);\n                    int4 v__16 = make_int4(0, 0, 0, 0);\n                    __24.x = (v__15.x>=v__16.x);\n                    __24.y = (v__15.y>=v__16.y);\n                    __24.z = (v__15.z>=v__16.z);\n                    __24.w = (v__15.w>=v__16.w);\n                  ushort4 __25;\n                    int4 v__17 = make_int4(0, 0, 0, 0);\n                    __25.x = (__20.x>=v__17.x);\n                    __25.y = (__20.y>=v__17.y);\n                    __25.z = (__20.z>=v__17.z);\n                    __25.w = (__20.w>=v__17.w);\n                  __23.x = (__24.x&&__25.x);\n                  __23.y = (__24.y&&__25.y);\n                  __23.z = (__24.z&&__25.z);\n                  __23.w = (__24.w&&__25.w);\n                ushort4 __26;\n                  ushort4 __27;\n                    int4 v__18 = make_int4(2, 2, 2, 2);\n                    int4 v__19 = make_int4(0, 0, 0, 0);\n                    __27.x = (v__18.x<v__19.x);\n                    __27.y = (v__18.y<v__19.y);\n                    __27.z = (v__18.z<v__19.z);\n                    __27.w = (v__18.w<v__19.w);\n                  ushort4 __28;\n                    int4 v__20 = make_int4(0, 0, 0, 0);\n                    __28.x = (__20.x<=v__20.x);\n                    __28.y = (__20.y<=v__20.y);\n                    __28.z = (__20.z<=v__20.z);\n                    __28.w = (__20.w<=v__20.w);\n                  __26.x = (__27.x&&__28.x);\n                  __26.y = (__27.y&&__28.y);\n                  __26.z = (__27.z&&__28.z);\n                  __26.w = (__27.w&&__28.w);\n                __22.x = (__23.x||__26.x);\n                __22.y = (__23.y||__26.y);\n                __22.z = (__23.z||__26.z);\n                __22.w = (__23.w||__26.w);\n              int4 __29;\n                int4 v__21 = make_int4(2, 2, 2, 2);\n                __29.x = (__20.x+v__21.x);\n                __29.y = (__20.y+v__21.y);\n                __29.z = (__20.z+v__21.z);\n                __29.w = (__20.w+v__21.w);\n              __21.x = (bool(__22.x)?__20.x:__29.x);\n              __21.y = (bool(__22.y)?__20.y:__29.y);\n              __21.z = (bool(__22.z)?__20.z:__29.z);\n              __21.w = (bool(__22.w)?__20.w:__29.w);\n              int4 v__22 = make_int4(4, 4, 4, 4);\n              __19.x = (__21.x*v__22.x);\n              __19.y = (__21.y*v__22.y);\n              __19.z = (__21.z*v__22.z);\n              __19.w = (__21.w*v__22.w);\n            __5.x = (__6.x >> __19.x);\n            __5.y = (__6.y >> __19.y);\n            __5.z = (__6.z >> __19.z);\n            __5.w = (__6.w >> __19.w);\n          int4 v__23 = make_int4(15, 15, 15, 15);\n          __4.x = (__5.x & v__23.x);\n          __4.y = (__5.y & v__23.y);\n          __4.z = (__5.z & v__23.z);\n          __4.w = (__5.w & v__23.w);\n        ((half2*)(&(__3.x)))->x = (half)(__4.x);\n        ((half2*)(&(__3.x)))->y = (half)(__4.y);\n        ((half2*)(&(__3.y)))->x = (half)(__4.z);\n        ((half2*)(&(__3.y)))->y = (half)(__4.w);\n        uint2 v__24 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n        ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n        ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n        ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n      uint2 v__25 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n      ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n      ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n      ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n      ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n    *(uint2*)(B_rescale_shared + ((((((int)threadIdx.z) * 1152) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  for (int k_0_0 = 0; k_0_0 < 103; ++k_0_0) {\n    __syncthreads();\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(APad_shared + ((((((k_0_0 + 1) & 1) * 1152) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))))\n    );\n    int pred_guard = (int)(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m);\n    __asm__ __volatile__(\n        \"{  .reg .pred p;\"\n        \"  setp.ne.b32 p, %0, 0;\"\n      #if TVM_ENABLE_L2_PREFETCH\n        \" @p cp.async.cg.shared.global.L2::128B [%1], [%2], %3;\"\n      #else\n        \" @p cp.async.cg.shared.global [%1], [%2], %3;\"\n      #endif\n      \"  @!p st.shared.v4.u32 [%1], {%4, %5, %6, %7};}\"\n        :: \"r\"(pred_guard), \"r\"(addr), \"l\"((void*)(A + (((((((int)threadIdx.z) * 26624) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 64))), \"n\"(16), \"r\"(0), \"r\"(0), \"r\"(0),\"r\"(0)\n    );\n  }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 8; ++ax0_ax1_fused_2_1) {\n      uint2 __30;\n        uint2 __31;\n          uint2 __32;\n          int4 __33;\n            int4 __34;\n              int4 __35;\n              int4 __36;\n                int4 __37;\n                  int4 v__26 = make_int4(((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                  int4 __38;\n                    int4 v__27 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                    int4 v__28 = make_int4(2, 2, 2, 2);\n                    __38.x = (v__27.x%v__28.x);\n                    __38.y = (v__27.y%v__28.y);\n                    __38.z = (v__27.z%v__28.z);\n                    __38.w = (v__27.w%v__28.w);\n                  int4 __39;\n                    int4 v__29 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                    int4 v__30 = make_int4(2, 2, 2, 2);\n                    __39.x = (v__29.x/v__30.x);\n                    __39.y = (v__29.y/v__30.y);\n                    __39.z = (v__29.z/v__30.z);\n                    __39.w = (v__29.w/v__30.w);\n                  int4 __40;\n                  ushort4 __41;\n                    ushort4 __42;\n                      ushort4 __43;\n                        int4 v__31 = make_int4(2, 2, 2, 2);\n                        int4 v__32 = make_int4(0, 0, 0, 0);\n                        __43.x = (v__31.x>=v__32.x);\n                        __43.y = (v__31.y>=v__32.y);\n                        __43.z = (v__31.z>=v__32.z);\n                        __43.w = (v__31.w>=v__32.w);\n                      ushort4 __44;\n                        int4 v__33 = make_int4(0, 0, 0, 0);\n                        __44.x = (__38.x>=v__33.x);\n                        __44.y = (__38.y>=v__33.y);\n                        __44.z = (__38.z>=v__33.z);\n                        __44.w = (__38.w>=v__33.w);\n                      __42.x = (__43.x&&__44.x);\n                      __42.y = (__43.y&&__44.y);\n                      __42.z = (__43.z&&__44.z);\n                      __42.w = (__43.w&&__44.w);\n                    ushort4 __45;\n                      ushort4 __46;\n                        int4 v__34 = make_int4(2, 2, 2, 2);\n                        int4 v__35 = make_int4(0, 0, 0, 0);\n                        __46.x = (v__34.x<v__35.x);\n                        __46.y = (v__34.y<v__35.y);\n                        __46.z = (v__34.z<v__35.z);\n                        __46.w = (v__34.w<v__35.w);\n                      ushort4 __47;\n                        int4 v__36 = make_int4(0, 0, 0, 0);\n                        __47.x = (__38.x<=v__36.x);\n                        __47.y = (__38.y<=v__36.y);\n                        __47.z = (__38.z<=v__36.z);\n                        __47.w = (__38.w<=v__36.w);\n                      __45.x = (__46.x&&__47.x);\n                      __45.y = (__46.y&&__47.y);\n                      __45.z = (__46.z&&__47.z);\n                      __45.w = (__46.w&&__47.w);\n                    __41.x = (__42.x||__45.x);\n                    __41.y = (__42.y||__45.y);\n                    __41.z = (__42.z||__45.z);\n                    __41.w = (__42.w||__45.w);\n                  int4 __48;\n                    int4 v__37 = make_int4(1, 1, 1, 1);\n                    __48.x = (__39.x-v__37.x);\n                    __48.y = (__39.y-v__37.y);\n                    __48.z = (__39.z-v__37.z);\n                    __48.w = (__39.w-v__37.w);\n                  __40.x = (bool(__41.x)?__39.x:__48.x);\n                  __40.y = (bool(__41.y)?__39.y:__48.y);\n                  __40.z = (bool(__41.z)?__39.z:__48.z);\n                  __40.w = (bool(__41.w)?__39.w:__48.w);\n                  __37.x = (v__26.x+__40.x);\n                  __37.y = (v__26.y+__40.y);\n                  __37.z = (v__26.z+__40.z);\n                  __37.w = (v__26.w+__40.w);\n                int4 v__38 = make_int4(32, 32, 32, 32);\n                __36.x = (__37.x+v__38.x);\n                __36.y = (__37.y+v__38.y);\n                __36.z = (__37.z+v__38.z);\n                __36.w = (__37.w+v__38.w);\n              int v__39 = ((0x000000ff << 0) & (B[__36.x] << 0))|((0x000000ff << 8) & (B[__36.y] << 8))|((0x000000ff << 16) & (B[__36.z] << 16))|((0x000000ff << 24) & (B[__36.w] << 24));\n              __35.x = (int)(((char)(v__39 >> 0)));\n              __35.y = (int)(((char)(v__39 >> 8)));\n              __35.z = (int)(((char)(v__39 >> 16)));\n              __35.w = (int)(((char)(v__39 >> 24)));\n              int4 __49;\n                int4 __50;\n                  int4 v__40 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__41 = make_int4(2, 2, 2, 2);\n                  __50.x = (v__40.x%v__41.x);\n                  __50.y = (v__40.y%v__41.y);\n                  __50.z = (v__40.z%v__41.z);\n                  __50.w = (v__40.w%v__41.w);\n                int4 __51;\n                ushort4 __52;\n                  ushort4 __53;\n                    ushort4 __54;\n                      int4 v__42 = make_int4(2, 2, 2, 2);\n                      int4 v__43 = make_int4(0, 0, 0, 0);\n                      __54.x = (v__42.x>=v__43.x);\n                      __54.y = (v__42.y>=v__43.y);\n                      __54.z = (v__42.z>=v__43.z);\n                      __54.w = (v__42.w>=v__43.w);\n                    ushort4 __55;\n                      int4 v__44 = make_int4(0, 0, 0, 0);\n                      __55.x = (__50.x>=v__44.x);\n                      __55.y = (__50.y>=v__44.y);\n                      __55.z = (__50.z>=v__44.z);\n                      __55.w = (__50.w>=v__44.w);\n                    __53.x = (__54.x&&__55.x);\n                    __53.y = (__54.y&&__55.y);\n                    __53.z = (__54.z&&__55.z);\n                    __53.w = (__54.w&&__55.w);\n                  ushort4 __56;\n                    ushort4 __57;\n                      int4 v__45 = make_int4(2, 2, 2, 2);\n                      int4 v__46 = make_int4(0, 0, 0, 0);\n                      __57.x = (v__45.x<v__46.x);\n                      __57.y = (v__45.y<v__46.y);\n                      __57.z = (v__45.z<v__46.z);\n                      __57.w = (v__45.w<v__46.w);\n                    ushort4 __58;\n                      int4 v__47 = make_int4(0, 0, 0, 0);\n                      __58.x = (__50.x<=v__47.x);\n                      __58.y = (__50.y<=v__47.y);\n                      __58.z = (__50.z<=v__47.z);\n                      __58.w = (__50.w<=v__47.w);\n                    __56.x = (__57.x&&__58.x);\n                    __56.y = (__57.y&&__58.y);\n                    __56.z = (__57.z&&__58.z);\n                    __56.w = (__57.w&&__58.w);\n                  __52.x = (__53.x||__56.x);\n                  __52.y = (__53.y||__56.y);\n                  __52.z = (__53.z||__56.z);\n                  __52.w = (__53.w||__56.w);\n                int4 __59;\n                  int4 v__48 = make_int4(2, 2, 2, 2);\n                  __59.x = (__50.x+v__48.x);\n                  __59.y = (__50.y+v__48.y);\n                  __59.z = (__50.z+v__48.z);\n                  __59.w = (__50.w+v__48.w);\n                __51.x = (bool(__52.x)?__50.x:__59.x);\n                __51.y = (bool(__52.y)?__50.y:__59.y);\n                __51.z = (bool(__52.z)?__50.z:__59.z);\n                __51.w = (bool(__52.w)?__50.w:__59.w);\n                int4 v__49 = make_int4(4, 4, 4, 4);\n                __49.x = (__51.x*v__49.x);\n                __49.y = (__51.y*v__49.y);\n                __49.z = (__51.z*v__49.z);\n                __49.w = (__51.w*v__49.w);\n              __34.x = (__35.x >> __49.x);\n              __34.y = (__35.y >> __49.y);\n              __34.z = (__35.z >> __49.z);\n              __34.w = (__35.w >> __49.w);\n            int4 v__50 = make_int4(15, 15, 15, 15);\n            __33.x = (__34.x & v__50.x);\n            __33.y = (__34.y & v__50.y);\n            __33.z = (__34.z & v__50.z);\n            __33.w = (__34.w & v__50.w);\n          ((half2*)(&(__32.x)))->x = (half)(__33.x);\n          ((half2*)(&(__32.x)))->y = (half)(__33.y);\n          ((half2*)(&(__32.y)))->x = (half)(__33.z);\n          ((half2*)(&(__32.y)))->y = (half)(__33.w);\n          uint2 v__51 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__31.x)))->x = (((half2*)(&(__32.x)))->x*((half2*)(&(v__51.x)))->x);\n          ((half2*)(&(__31.x)))->y = (((half2*)(&(__32.x)))->y*((half2*)(&(v__51.x)))->y);\n          ((half2*)(&(__31.y)))->x = (((half2*)(&(__32.y)))->x*((half2*)(&(v__51.y)))->x);\n          ((half2*)(&(__31.y)))->y = (((half2*)(&(__32.y)))->y*((half2*)(&(v__51.y)))->y);\n        uint2 v__52 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__30.x)))->x = (((half2*)(&(__31.x)))->x-((half2*)(&(v__52.x)))->x);\n        ((half2*)(&(__30.x)))->y = (((half2*)(&(__31.x)))->y-((half2*)(&(v__52.x)))->y);\n        ((half2*)(&(__30.y)))->x = (((half2*)(&(__31.y)))->x-((half2*)(&(v__52.y)))->x);\n        ((half2*)(&(__30.y)))->y = (((half2*)(&(__31.y)))->y-((half2*)(&(v__52.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((k_0_0 + 1) & 1) * 4608) + (((int)threadIdx.z) * 1152)) + (ax0_ax1_fused_2_1 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __30;\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[(((k_0_0 & 1) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((k_0_0 & 1) * 4608) + (((int)threadIdx.z) * 1152)) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n    }\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  for (int k_0_1_1 = 0; k_0_1_1 < 4; ++k_0_1_1) {\n    nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[((k_0_1_1 * 16) + 1152)])), 72);\n    nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[(((((int)threadIdx.z) * 1152) + (k_0_1_1 * 16)) + 4608)])), 72);\n    nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n  }\n  nvcuda::wmma::store_matrix_sync((&(C[((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[0], 6656, nvcuda::wmma::mem_row_major);\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 2,
                "block_row_warps": 1,
                "BM": 16
            }
        },
        "m32": {
            "func_name": "tir_halfxint3_tensorop_32x64x64x1_t0_y2z4_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(256) tir_halfxint3_tensorop_32x64x64x1_t0_y2z4_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[1];\n  __shared__ half APad_shared[2304];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[1];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  nvcuda::wmma::fill_fragment(C_wmma_accumulator[0], 0.000000e+00f);\n  for (int k_0_0 = 0; k_0_0 < 104; ++k_0_0) {\n    __syncthreads();\n    *(uint4*)(APad_shared + ((((((int)threadIdx.y) * 1152) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = (((((((int)threadIdx.y) * 16) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + (((((((int)threadIdx.y) * 106496) + (((int)threadIdx.z) * 26624)) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 4; ++ax0_ax1_fused_2) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[((((int)threadIdx.y) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n    }\n  }\n  nvcuda::wmma::store_matrix_sync((&(C[(((((int)threadIdx.y) * 106496) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[0], 6656, nvcuda::wmma::mem_row_major);\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 2,
                "BM": 32
            }
        },
        "m64": {
            "func_name": "tir_halfxint3_tensorop_64x64x64x1_t0_y4z4_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(512) tir_halfxint3_tensorop_64x64x64x1_t0_y4z4_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[1];\n  __shared__ half APad_shared[4608];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[1];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  nvcuda::wmma::fill_fragment(C_wmma_accumulator[0], 0.000000e+00f);\n  for (int k_0_0 = 0; k_0_0 < 104; ++k_0_0) {\n    __syncthreads();\n    *(uint4*)(APad_shared + ((((((int)threadIdx.y) * 1152) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = (((((((int)threadIdx.y) * 16) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + (((((((int)threadIdx.y) * 106496) + (((int)threadIdx.z) * 26624)) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 2; ++ax0_ax1_fused_2) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 13312)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 13312)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 13312)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 13312)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 1152) + (((int)threadIdx.z) * 288)) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[((((int)threadIdx.y) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n    }\n  }\n  nvcuda::wmma::store_matrix_sync((&(C[(((((int)threadIdx.y) * 106496) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[0], 6656, nvcuda::wmma::mem_row_major);\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 4,
                "BM": 64
            }
        },
        "m128": {
            "func_name": "tir_halfxint3_tensorop_64x64x64x1_t0_y2z2_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(128) tir_halfxint3_tensorop_64x64x64x1_t0_y2z2_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[4];\n  __shared__ half APad_shared[4608];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[2];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    for (int j_0_2_init = 0; j_0_2_init < 2; ++j_0_2_init) {\n      nvcuda::wmma::fill_fragment(C_wmma_accumulator[((i_0_2_init * 2) + j_0_2_init)], 0.000000e+00f);\n    }\n  }\n  for (int k_0_0 = 0; k_0_0 < 104; ++k_0_0) {\n    __syncthreads();\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 4; ++ax0_ax1_fused_2) {\n      *(uint4*)(APad_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 1152)) + (ax0_ax1_fused_2 * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = (((((((((int)blockIdx.y) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + (((((((((int)blockIdx.y) * 425984) + (((int)threadIdx.y) * 212992)) + (((int)threadIdx.z) * 106496)) + (ax0_ax1_fused_2 * 26624)) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 8; ++ax0_ax1_fused_2_1) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 1152)) + (ax0_ax1_fused_2_1 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[(((((int)threadIdx.y) * 2304) + (ax0_0 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {\n        nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[ax0_0_1], (&(B_rescale_shared[(((((int)threadIdx.z) * 2304) + (ax0_0_1 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        for (int j_0_2 = 0; j_0_2 < 2; ++j_0_2) {\n          nvcuda::wmma::mma_sync(C_wmma_accumulator[((i_0_2 * 2) + j_0_2)], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[j_0_2], C_wmma_accumulator[((i_0_2 * 2) + j_0_2)]);\n        }\n      }\n    }\n  }\n  for (int ax0_0_2 = 0; ax0_0_2 < 2; ++ax0_0_2) {\n    for (int ax1_0 = 0; ax1_0 < 2; ++ax1_0) {\n      nvcuda::wmma::store_matrix_sync((&(C[((((((((int)blockIdx.y) * 425984) + (((int)threadIdx.y) * 212992)) + (ax0_0_2 * 106496)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 32)) + (ax1_0 * 16))])), C_wmma_accumulator[((ax0_0_2 * 2) + ax1_0)], 6656, nvcuda::wmma::mem_row_major);\n    }\n  }\n}\n\n",
            "params": {
                "block_col_warps": 2,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 2,
                "BM": 64
            }
        },
        "m256": {
            "func_name": "tir_halfxint3_tensorop_64x64x64x1_t0_y2z2_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(128) tir_halfxint3_tensorop_64x64x64x1_t0_y2z2_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[4];\n  __shared__ half APad_shared[4608];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[2];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    for (int j_0_2_init = 0; j_0_2_init < 2; ++j_0_2_init) {\n      nvcuda::wmma::fill_fragment(C_wmma_accumulator[((i_0_2_init * 2) + j_0_2_init)], 0.000000e+00f);\n    }\n  }\n  for (int k_0_0 = 0; k_0_0 < 104; ++k_0_0) {\n    __syncthreads();\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 4; ++ax0_ax1_fused_2) {\n      *(uint4*)(APad_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 1152)) + (ax0_ax1_fused_2 * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = (((((((((int)blockIdx.y) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + (((((((((int)blockIdx.y) * 425984) + (((int)threadIdx.y) * 212992)) + (((int)threadIdx.z) * 106496)) + (ax0_ax1_fused_2 * 26624)) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 8; ++ax0_ax1_fused_2_1) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 1152)) + (ax0_ax1_fused_2_1 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[(((((int)threadIdx.y) * 2304) + (ax0_0 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {\n        nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[ax0_0_1], (&(B_rescale_shared[(((((int)threadIdx.z) * 2304) + (ax0_0_1 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        for (int j_0_2 = 0; j_0_2 < 2; ++j_0_2) {\n          nvcuda::wmma::mma_sync(C_wmma_accumulator[((i_0_2 * 2) + j_0_2)], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[j_0_2], C_wmma_accumulator[((i_0_2 * 2) + j_0_2)]);\n        }\n      }\n    }\n  }\n  for (int ax0_0_2 = 0; ax0_0_2 < 2; ++ax0_0_2) {\n    for (int ax1_0 = 0; ax1_0 < 2; ++ax1_0) {\n      nvcuda::wmma::store_matrix_sync((&(C[((((((((int)blockIdx.y) * 425984) + (((int)threadIdx.y) * 212992)) + (ax0_0_2 * 106496)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 32)) + (ax1_0 * 16))])), C_wmma_accumulator[((ax0_0_2 * 2) + ax1_0)], 6656, nvcuda::wmma::mem_row_major);\n    }\n  }\n}\n\n",
            "params": {
                "block_col_warps": 2,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 2,
                "BM": 64
            }
        }
    },
    "b4n6656k17920": {
        "m1": {
            "func_name": "tir_halfxint4_simt_bn4_k17920",
            "code": "#include <cuda_fp16.h>\nextern \"C\" __global__ void __launch_bounds__(128) tir_halfxint4_simt_bn4_k17920(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C) {\n  half in_thread_C_local[1];\n  half A_local[8];\n  half red_buf0[1];\n  in_thread_C_local[0] = __float2half_rn(0.000000e+00f);\n  for (int k_0 = 0; k_0 < 70; ++k_0) {\n    *(uint4*)(A_local + 0) = *(uint4*)(A + ((k_0 * 256) + (((int)threadIdx.x) * 8)));\n    for (int k_2 = 0; k_2 < 8; ++k_2) {\n      in_thread_C_local[0] = (in_thread_C_local[0] + (A_local[k_2] * ((((half)((((int)B[(((((((int)blockIdx.x) * 35840) + (((int)threadIdx.y) * 8960)) + (k_0 * 128)) + (((int)threadIdx.x) * 4)) + (k_2 >> 1))]) >> ((k_2 & 1) * 4)) & 15)) * Scales[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))]) - Zeros[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))])));\n    }\n  }\n  uint mask[1];\n  half t0[1];\n  red_buf0[0] = in_thread_C_local[0];\n  mask[0] = (__activemask() & ((uint)(0 << (((int)threadIdx.y) * 32))));\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 16, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 8, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 4, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 2, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 1, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  red_buf0[0] = __shfl_sync(mask[0], red_buf0[0], (((int)threadIdx.y) * 32), 32);\n  C[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))] = red_buf0[0];\n}\n\n",
            "params": {
                "num_warps": 4
            }
        },
        "m16": {
            "func_name": "tir_halfxint3_tensorop_16x64x64x3_t0_y1z4_K17920_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(128) tir_halfxint3_tensorop_16x64x64x3_t0_y1z4_K17920_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[1];\n  __shared__ half APad_shared[3456];\n  __shared__ half B_rescale_shared[13824];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[1];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  nvcuda::wmma::fill_fragment(C_wmma_accumulator[0], 0.000000e+00f);\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(APad_shared + (((((int)threadIdx.z) * 288) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))))\n    );\n    int pred_guard = (int)(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m);\n    __asm__ __volatile__(\n        \"{  .reg .pred p;\"\n        \"  setp.ne.b32 p, %0, 0;\"\n      #if TVM_ENABLE_L2_PREFETCH\n        \" @p cp.async.cg.shared.global.L2::128B [%1], [%2], %3;\"\n      #else\n        \" @p cp.async.cg.shared.global [%1], [%2], %3;\"\n      #endif\n      \"  @!p st.shared.v4.u32 [%1], {%4, %5, %6, %7};}\"\n        :: \"r\"(pred_guard), \"r\"(addr), \"l\"((void*)(A + (((((int)threadIdx.z) * 71680) + ((((int)threadIdx.x) >> 3) * 17920)) + ((((int)threadIdx.x) & 7) * 8)))), \"n\"(16), \"r\"(0), \"r\"(0), \"r\"(0),\"r\"(0)\n    );\n  }\n  for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 8; ++ax0_ax1_fused_2) {\n    uint2 __1;\n      uint2 __2;\n        uint2 __3;\n        int4 __4;\n          int4 __5;\n            int4 __6;\n            int4 __7;\n              int4 v_ = make_int4((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)));\n              int4 __8;\n                int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__2 = make_int4(2, 2, 2, 2);\n                __8.x = (v__1.x%v__2.x);\n                __8.y = (v__1.y%v__2.y);\n                __8.z = (v__1.z%v__2.z);\n                __8.w = (v__1.w%v__2.w);\n              int4 __9;\n                int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__4 = make_int4(2, 2, 2, 2);\n                __9.x = (v__3.x/v__4.x);\n                __9.y = (v__3.y/v__4.y);\n                __9.z = (v__3.z/v__4.z);\n                __9.w = (v__3.w/v__4.w);\n              int4 __10;\n              ushort4 __11;\n                ushort4 __12;\n                  ushort4 __13;\n                    int4 v__5 = make_int4(2, 2, 2, 2);\n                    int4 v__6 = make_int4(0, 0, 0, 0);\n                    __13.x = (v__5.x>=v__6.x);\n                    __13.y = (v__5.y>=v__6.y);\n                    __13.z = (v__5.z>=v__6.z);\n                    __13.w = (v__5.w>=v__6.w);\n                  ushort4 __14;\n                    int4 v__7 = make_int4(0, 0, 0, 0);\n                    __14.x = (__8.x>=v__7.x);\n                    __14.y = (__8.y>=v__7.y);\n                    __14.z = (__8.z>=v__7.z);\n                    __14.w = (__8.w>=v__7.w);\n                  __12.x = (__13.x&&__14.x);\n                  __12.y = (__13.y&&__14.y);\n                  __12.z = (__13.z&&__14.z);\n                  __12.w = (__13.w&&__14.w);\n                ushort4 __15;\n                  ushort4 __16;\n                    int4 v__8 = make_int4(2, 2, 2, 2);\n                    int4 v__9 = make_int4(0, 0, 0, 0);\n                    __16.x = (v__8.x<v__9.x);\n                    __16.y = (v__8.y<v__9.y);\n                    __16.z = (v__8.z<v__9.z);\n                    __16.w = (v__8.w<v__9.w);\n                  ushort4 __17;\n                    int4 v__10 = make_int4(0, 0, 0, 0);\n                    __17.x = (__8.x<=v__10.x);\n                    __17.y = (__8.y<=v__10.y);\n                    __17.z = (__8.z<=v__10.z);\n                    __17.w = (__8.w<=v__10.w);\n                  __15.x = (__16.x&&__17.x);\n                  __15.y = (__16.y&&__17.y);\n                  __15.z = (__16.z&&__17.z);\n                  __15.w = (__16.w&&__17.w);\n                __11.x = (__12.x||__15.x);\n                __11.y = (__12.y||__15.y);\n                __11.z = (__12.z||__15.z);\n                __11.w = (__12.w||__15.w);\n              int4 __18;\n                int4 v__11 = make_int4(1, 1, 1, 1);\n                __18.x = (__9.x-v__11.x);\n                __18.y = (__9.y-v__11.y);\n                __18.z = (__9.z-v__11.z);\n                __18.w = (__9.w-v__11.w);\n              __10.x = (bool(__11.x)?__9.x:__18.x);\n              __10.y = (bool(__11.y)?__9.y:__18.y);\n              __10.z = (bool(__11.z)?__9.z:__18.z);\n              __10.w = (bool(__11.w)?__9.w:__18.w);\n              __7.x = (v_.x+__10.x);\n              __7.y = (v_.y+__10.y);\n              __7.z = (v_.z+__10.z);\n              __7.w = (v_.w+__10.w);\n            int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n            __6.x = (int)(((char)(v__12 >> 0)));\n            __6.y = (int)(((char)(v__12 >> 8)));\n            __6.z = (int)(((char)(v__12 >> 16)));\n            __6.w = (int)(((char)(v__12 >> 24)));\n            int4 __19;\n              int4 __20;\n                int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__14 = make_int4(2, 2, 2, 2);\n                __20.x = (v__13.x%v__14.x);\n                __20.y = (v__13.y%v__14.y);\n                __20.z = (v__13.z%v__14.z);\n                __20.w = (v__13.w%v__14.w);\n              int4 __21;\n              ushort4 __22;\n                ushort4 __23;\n                  ushort4 __24;\n                    int4 v__15 = make_int4(2, 2, 2, 2);\n                    int4 v__16 = make_int4(0, 0, 0, 0);\n                    __24.x = (v__15.x>=v__16.x);\n                    __24.y = (v__15.y>=v__16.y);\n                    __24.z = (v__15.z>=v__16.z);\n                    __24.w = (v__15.w>=v__16.w);\n                  ushort4 __25;\n                    int4 v__17 = make_int4(0, 0, 0, 0);\n                    __25.x = (__20.x>=v__17.x);\n                    __25.y = (__20.y>=v__17.y);\n                    __25.z = (__20.z>=v__17.z);\n                    __25.w = (__20.w>=v__17.w);\n                  __23.x = (__24.x&&__25.x);\n                  __23.y = (__24.y&&__25.y);\n                  __23.z = (__24.z&&__25.z);\n                  __23.w = (__24.w&&__25.w);\n                ushort4 __26;\n                  ushort4 __27;\n                    int4 v__18 = make_int4(2, 2, 2, 2);\n                    int4 v__19 = make_int4(0, 0, 0, 0);\n                    __27.x = (v__18.x<v__19.x);\n                    __27.y = (v__18.y<v__19.y);\n                    __27.z = (v__18.z<v__19.z);\n                    __27.w = (v__18.w<v__19.w);\n                  ushort4 __28;\n                    int4 v__20 = make_int4(0, 0, 0, 0);\n                    __28.x = (__20.x<=v__20.x);\n                    __28.y = (__20.y<=v__20.y);\n                    __28.z = (__20.z<=v__20.z);\n                    __28.w = (__20.w<=v__20.w);\n                  __26.x = (__27.x&&__28.x);\n                  __26.y = (__27.y&&__28.y);\n                  __26.z = (__27.z&&__28.z);\n                  __26.w = (__27.w&&__28.w);\n                __22.x = (__23.x||__26.x);\n                __22.y = (__23.y||__26.y);\n                __22.z = (__23.z||__26.z);\n                __22.w = (__23.w||__26.w);\n              int4 __29;\n                int4 v__21 = make_int4(2, 2, 2, 2);\n                __29.x = (__20.x+v__21.x);\n                __29.y = (__20.y+v__21.y);\n                __29.z = (__20.z+v__21.z);\n                __29.w = (__20.w+v__21.w);\n              __21.x = (bool(__22.x)?__20.x:__29.x);\n              __21.y = (bool(__22.y)?__20.y:__29.y);\n              __21.z = (bool(__22.z)?__20.z:__29.z);\n              __21.w = (bool(__22.w)?__20.w:__29.w);\n              int4 v__22 = make_int4(4, 4, 4, 4);\n              __19.x = (__21.x*v__22.x);\n              __19.y = (__21.y*v__22.y);\n              __19.z = (__21.z*v__22.z);\n              __19.w = (__21.w*v__22.w);\n            __5.x = (__6.x >> __19.x);\n            __5.y = (__6.y >> __19.y);\n            __5.z = (__6.z >> __19.z);\n            __5.w = (__6.w >> __19.w);\n          int4 v__23 = make_int4(15, 15, 15, 15);\n          __4.x = (__5.x & v__23.x);\n          __4.y = (__5.y & v__23.y);\n          __4.z = (__5.z & v__23.z);\n          __4.w = (__5.w & v__23.w);\n        ((half2*)(&(__3.x)))->x = (half)(__4.x);\n        ((half2*)(&(__3.x)))->y = (half)(__4.y);\n        ((half2*)(&(__3.y)))->x = (half)(__4.z);\n        ((half2*)(&(__3.y)))->y = (half)(__4.w);\n        uint2 v__24 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n        ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n        ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n        ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n      uint2 v__25 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n      ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n      ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n      ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n      ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n    *(uint2*)(B_rescale_shared + ((((((int)threadIdx.z) * 1152) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(APad_shared + ((((((int)threadIdx.z) * 288) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8)) + 1152)))\n    );\n    int pred_guard = (int)(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m);\n    __asm__ __volatile__(\n        \"{  .reg .pred p;\"\n        \"  setp.ne.b32 p, %0, 0;\"\n      #if TVM_ENABLE_L2_PREFETCH\n        \" @p cp.async.cg.shared.global.L2::128B [%1], [%2], %3;\"\n      #else\n        \" @p cp.async.cg.shared.global [%1], [%2], %3;\"\n      #endif\n      \"  @!p st.shared.v4.u32 [%1], {%4, %5, %6, %7};}\"\n        :: \"r\"(pred_guard), \"r\"(addr), \"l\"((void*)(A + ((((((int)threadIdx.z) * 71680) + ((((int)threadIdx.x) >> 3) * 17920)) + ((((int)threadIdx.x) & 7) * 8)) + 64))), \"n\"(16), \"r\"(0), \"r\"(0), \"r\"(0),\"r\"(0)\n    );\n  }\n  for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 8; ++ax0_ax1_fused_2_1) {\n    uint2 __30;\n      uint2 __31;\n        uint2 __32;\n        int4 __33;\n          int4 __34;\n            int4 __35;\n            int4 __36;\n              int4 v__26 = make_int4(((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)) + 32), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)) + 32), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)) + 32), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + ((((int)threadIdx.x) & 15) * 2)) + 32));\n              int4 __37;\n                int4 v__27 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__28 = make_int4(2, 2, 2, 2);\n                __37.x = (v__27.x%v__28.x);\n                __37.y = (v__27.y%v__28.y);\n                __37.z = (v__27.z%v__28.z);\n                __37.w = (v__27.w%v__28.w);\n              int4 __38;\n                int4 v__29 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__30 = make_int4(2, 2, 2, 2);\n                __38.x = (v__29.x/v__30.x);\n                __38.y = (v__29.y/v__30.y);\n                __38.z = (v__29.z/v__30.z);\n                __38.w = (v__29.w/v__30.w);\n              int4 __39;\n              ushort4 __40;\n                ushort4 __41;\n                  ushort4 __42;\n                    int4 v__31 = make_int4(2, 2, 2, 2);\n                    int4 v__32 = make_int4(0, 0, 0, 0);\n                    __42.x = (v__31.x>=v__32.x);\n                    __42.y = (v__31.y>=v__32.y);\n                    __42.z = (v__31.z>=v__32.z);\n                    __42.w = (v__31.w>=v__32.w);\n                  ushort4 __43;\n                    int4 v__33 = make_int4(0, 0, 0, 0);\n                    __43.x = (__37.x>=v__33.x);\n                    __43.y = (__37.y>=v__33.y);\n                    __43.z = (__37.z>=v__33.z);\n                    __43.w = (__37.w>=v__33.w);\n                  __41.x = (__42.x&&__43.x);\n                  __41.y = (__42.y&&__43.y);\n                  __41.z = (__42.z&&__43.z);\n                  __41.w = (__42.w&&__43.w);\n                ushort4 __44;\n                  ushort4 __45;\n                    int4 v__34 = make_int4(2, 2, 2, 2);\n                    int4 v__35 = make_int4(0, 0, 0, 0);\n                    __45.x = (v__34.x<v__35.x);\n                    __45.y = (v__34.y<v__35.y);\n                    __45.z = (v__34.z<v__35.z);\n                    __45.w = (v__34.w<v__35.w);\n                  ushort4 __46;\n                    int4 v__36 = make_int4(0, 0, 0, 0);\n                    __46.x = (__37.x<=v__36.x);\n                    __46.y = (__37.y<=v__36.y);\n                    __46.z = (__37.z<=v__36.z);\n                    __46.w = (__37.w<=v__36.w);\n                  __44.x = (__45.x&&__46.x);\n                  __44.y = (__45.y&&__46.y);\n                  __44.z = (__45.z&&__46.z);\n                  __44.w = (__45.w&&__46.w);\n                __40.x = (__41.x||__44.x);\n                __40.y = (__41.y||__44.y);\n                __40.z = (__41.z||__44.z);\n                __40.w = (__41.w||__44.w);\n              int4 __47;\n                int4 v__37 = make_int4(1, 1, 1, 1);\n                __47.x = (__38.x-v__37.x);\n                __47.y = (__38.y-v__37.y);\n                __47.z = (__38.z-v__37.z);\n                __47.w = (__38.w-v__37.w);\n              __39.x = (bool(__40.x)?__38.x:__47.x);\n              __39.y = (bool(__40.y)?__38.y:__47.y);\n              __39.z = (bool(__40.z)?__38.z:__47.z);\n              __39.w = (bool(__40.w)?__38.w:__47.w);\n              __36.x = (v__26.x+__39.x);\n              __36.y = (v__26.y+__39.y);\n              __36.z = (v__26.z+__39.z);\n              __36.w = (v__26.w+__39.w);\n            int v__38 = ((0x000000ff << 0) & (B[__36.x] << 0))|((0x000000ff << 8) & (B[__36.y] << 8))|((0x000000ff << 16) & (B[__36.z] << 16))|((0x000000ff << 24) & (B[__36.w] << 24));\n            __35.x = (int)(((char)(v__38 >> 0)));\n            __35.y = (int)(((char)(v__38 >> 8)));\n            __35.z = (int)(((char)(v__38 >> 16)));\n            __35.w = (int)(((char)(v__38 >> 24)));\n            int4 __48;\n              int4 __49;\n                int4 v__39 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__40 = make_int4(2, 2, 2, 2);\n                __49.x = (v__39.x%v__40.x);\n                __49.y = (v__39.y%v__40.y);\n                __49.z = (v__39.z%v__40.z);\n                __49.w = (v__39.w%v__40.w);\n              int4 __50;\n              ushort4 __51;\n                ushort4 __52;\n                  ushort4 __53;\n                    int4 v__41 = make_int4(2, 2, 2, 2);\n                    int4 v__42 = make_int4(0, 0, 0, 0);\n                    __53.x = (v__41.x>=v__42.x);\n                    __53.y = (v__41.y>=v__42.y);\n                    __53.z = (v__41.z>=v__42.z);\n                    __53.w = (v__41.w>=v__42.w);\n                  ushort4 __54;\n                    int4 v__43 = make_int4(0, 0, 0, 0);\n                    __54.x = (__49.x>=v__43.x);\n                    __54.y = (__49.y>=v__43.y);\n                    __54.z = (__49.z>=v__43.z);\n                    __54.w = (__49.w>=v__43.w);\n                  __52.x = (__53.x&&__54.x);\n                  __52.y = (__53.y&&__54.y);\n                  __52.z = (__53.z&&__54.z);\n                  __52.w = (__53.w&&__54.w);\n                ushort4 __55;\n                  ushort4 __56;\n                    int4 v__44 = make_int4(2, 2, 2, 2);\n                    int4 v__45 = make_int4(0, 0, 0, 0);\n                    __56.x = (v__44.x<v__45.x);\n                    __56.y = (v__44.y<v__45.y);\n                    __56.z = (v__44.z<v__45.z);\n                    __56.w = (v__44.w<v__45.w);\n                  ushort4 __57;\n                    int4 v__46 = make_int4(0, 0, 0, 0);\n                    __57.x = (__49.x<=v__46.x);\n                    __57.y = (__49.y<=v__46.y);\n                    __57.z = (__49.z<=v__46.z);\n                    __57.w = (__49.w<=v__46.w);\n                  __55.x = (__56.x&&__57.x);\n                  __55.y = (__56.y&&__57.y);\n                  __55.z = (__56.z&&__57.z);\n                  __55.w = (__56.w&&__57.w);\n                __51.x = (__52.x||__55.x);\n                __51.y = (__52.y||__55.y);\n                __51.z = (__52.z||__55.z);\n                __51.w = (__52.w||__55.w);\n              int4 __58;\n                int4 v__47 = make_int4(2, 2, 2, 2);\n                __58.x = (__49.x+v__47.x);\n                __58.y = (__49.y+v__47.y);\n                __58.z = (__49.z+v__47.z);\n                __58.w = (__49.w+v__47.w);\n              __50.x = (bool(__51.x)?__49.x:__58.x);\n              __50.y = (bool(__51.y)?__49.y:__58.y);\n              __50.z = (bool(__51.z)?__49.z:__58.z);\n              __50.w = (bool(__51.w)?__49.w:__58.w);\n              int4 v__48 = make_int4(4, 4, 4, 4);\n              __48.x = (__50.x*v__48.x);\n              __48.y = (__50.y*v__48.y);\n              __48.z = (__50.z*v__48.z);\n              __48.w = (__50.w*v__48.w);\n            __34.x = (__35.x >> __48.x);\n            __34.y = (__35.y >> __48.y);\n            __34.z = (__35.z >> __48.z);\n            __34.w = (__35.w >> __48.w);\n          int4 v__49 = make_int4(15, 15, 15, 15);\n          __33.x = (__34.x & v__49.x);\n          __33.y = (__34.y & v__49.y);\n          __33.z = (__34.z & v__49.z);\n          __33.w = (__34.w & v__49.w);\n        ((half2*)(&(__32.x)))->x = (half)(__33.x);\n        ((half2*)(&(__32.x)))->y = (half)(__33.y);\n        ((half2*)(&(__32.y)))->x = (half)(__33.z);\n        ((half2*)(&(__32.y)))->y = (half)(__33.w);\n        uint2 v__50 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__31.x)))->x = (((half2*)(&(__32.x)))->x*((half2*)(&(v__50.x)))->x);\n        ((half2*)(&(__31.x)))->y = (((half2*)(&(__32.x)))->y*((half2*)(&(v__50.x)))->y);\n        ((half2*)(&(__31.y)))->x = (((half2*)(&(__32.y)))->x*((half2*)(&(v__50.y)))->x);\n        ((half2*)(&(__31.y)))->y = (((half2*)(&(__32.y)))->y*((half2*)(&(v__50.y)))->y);\n      uint2 v__51 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n      ((half2*)(&(__30.x)))->x = (((half2*)(&(__31.x)))->x-((half2*)(&(v__51.x)))->x);\n      ((half2*)(&(__30.x)))->y = (((half2*)(&(__31.x)))->y-((half2*)(&(v__51.x)))->y);\n      ((half2*)(&(__30.y)))->x = (((half2*)(&(__31.y)))->x-((half2*)(&(v__51.y)))->x);\n      ((half2*)(&(__30.y)))->y = (((half2*)(&(__31.y)))->y-((half2*)(&(v__51.y)))->y);\n    *(uint2*)(B_rescale_shared + (((((((int)threadIdx.z) * 1152) + (ax0_ax1_fused_2_1 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4)) + 4608)) = __30;\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  for (int k_0_0 = 0; k_0_0 < 278; ++k_0_0) {\n    __syncthreads();\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(APad_shared + ((((((k_0_0 + 2) % 3) * 1152) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))))\n    );\n    int pred_guard = (int)(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m);\n    __asm__ __volatile__(\n        \"{  .reg .pred p;\"\n        \"  setp.ne.b32 p, %0, 0;\"\n      #if TVM_ENABLE_L2_PREFETCH\n        \" @p cp.async.cg.shared.global.L2::128B [%1], [%2], %3;\"\n      #else\n        \" @p cp.async.cg.shared.global [%1], [%2], %3;\"\n      #endif\n      \"  @!p st.shared.v4.u32 [%1], {%4, %5, %6, %7};}\"\n        :: \"r\"(pred_guard), \"r\"(addr), \"l\"((void*)(A + (((((((int)threadIdx.z) * 71680) + ((((int)threadIdx.x) >> 3) * 17920)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 128))), \"n\"(16), \"r\"(0), \"r\"(0), \"r\"(0),\"r\"(0)\n    );\n  }\n    for (int ax0_ax1_fused_2_2 = 0; ax0_ax1_fused_2_2 < 8; ++ax0_ax1_fused_2_2) {\n      uint2 __59;\n        uint2 __60;\n          uint2 __61;\n          int4 __62;\n            int4 __63;\n              int4 __64;\n              int4 __65;\n                int4 __66;\n                  int4 v__52 = make_int4(((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                  int4 __67;\n                    int4 v__53 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                    int4 v__54 = make_int4(2, 2, 2, 2);\n                    __67.x = (v__53.x%v__54.x);\n                    __67.y = (v__53.y%v__54.y);\n                    __67.z = (v__53.z%v__54.z);\n                    __67.w = (v__53.w%v__54.w);\n                  int4 __68;\n                    int4 v__55 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                    int4 v__56 = make_int4(2, 2, 2, 2);\n                    __68.x = (v__55.x/v__56.x);\n                    __68.y = (v__55.y/v__56.y);\n                    __68.z = (v__55.z/v__56.z);\n                    __68.w = (v__55.w/v__56.w);\n                  int4 __69;\n                  ushort4 __70;\n                    ushort4 __71;\n                      ushort4 __72;\n                        int4 v__57 = make_int4(2, 2, 2, 2);\n                        int4 v__58 = make_int4(0, 0, 0, 0);\n                        __72.x = (v__57.x>=v__58.x);\n                        __72.y = (v__57.y>=v__58.y);\n                        __72.z = (v__57.z>=v__58.z);\n                        __72.w = (v__57.w>=v__58.w);\n                      ushort4 __73;\n                        int4 v__59 = make_int4(0, 0, 0, 0);\n                        __73.x = (__67.x>=v__59.x);\n                        __73.y = (__67.y>=v__59.y);\n                        __73.z = (__67.z>=v__59.z);\n                        __73.w = (__67.w>=v__59.w);\n                      __71.x = (__72.x&&__73.x);\n                      __71.y = (__72.y&&__73.y);\n                      __71.z = (__72.z&&__73.z);\n                      __71.w = (__72.w&&__73.w);\n                    ushort4 __74;\n                      ushort4 __75;\n                        int4 v__60 = make_int4(2, 2, 2, 2);\n                        int4 v__61 = make_int4(0, 0, 0, 0);\n                        __75.x = (v__60.x<v__61.x);\n                        __75.y = (v__60.y<v__61.y);\n                        __75.z = (v__60.z<v__61.z);\n                        __75.w = (v__60.w<v__61.w);\n                      ushort4 __76;\n                        int4 v__62 = make_int4(0, 0, 0, 0);\n                        __76.x = (__67.x<=v__62.x);\n                        __76.y = (__67.y<=v__62.y);\n                        __76.z = (__67.z<=v__62.z);\n                        __76.w = (__67.w<=v__62.w);\n                      __74.x = (__75.x&&__76.x);\n                      __74.y = (__75.y&&__76.y);\n                      __74.z = (__75.z&&__76.z);\n                      __74.w = (__75.w&&__76.w);\n                    __70.x = (__71.x||__74.x);\n                    __70.y = (__71.y||__74.y);\n                    __70.z = (__71.z||__74.z);\n                    __70.w = (__71.w||__74.w);\n                  int4 __77;\n                    int4 v__63 = make_int4(1, 1, 1, 1);\n                    __77.x = (__68.x-v__63.x);\n                    __77.y = (__68.y-v__63.y);\n                    __77.z = (__68.z-v__63.z);\n                    __77.w = (__68.w-v__63.w);\n                  __69.x = (bool(__70.x)?__68.x:__77.x);\n                  __69.y = (bool(__70.y)?__68.y:__77.y);\n                  __69.z = (bool(__70.z)?__68.z:__77.z);\n                  __69.w = (bool(__70.w)?__68.w:__77.w);\n                  __66.x = (v__52.x+__69.x);\n                  __66.y = (v__52.y+__69.y);\n                  __66.z = (v__52.z+__69.z);\n                  __66.w = (v__52.w+__69.w);\n                int4 v__64 = make_int4(64, 64, 64, 64);\n                __65.x = (__66.x+v__64.x);\n                __65.y = (__66.y+v__64.y);\n                __65.z = (__66.z+v__64.z);\n                __65.w = (__66.w+v__64.w);\n              int v__65 = ((0x000000ff << 0) & (B[__65.x] << 0))|((0x000000ff << 8) & (B[__65.y] << 8))|((0x000000ff << 16) & (B[__65.z] << 16))|((0x000000ff << 24) & (B[__65.w] << 24));\n              __64.x = (int)(((char)(v__65 >> 0)));\n              __64.y = (int)(((char)(v__65 >> 8)));\n              __64.z = (int)(((char)(v__65 >> 16)));\n              __64.w = (int)(((char)(v__65 >> 24)));\n              int4 __78;\n                int4 __79;\n                  int4 v__66 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__67 = make_int4(2, 2, 2, 2);\n                  __79.x = (v__66.x%v__67.x);\n                  __79.y = (v__66.y%v__67.y);\n                  __79.z = (v__66.z%v__67.z);\n                  __79.w = (v__66.w%v__67.w);\n                int4 __80;\n                ushort4 __81;\n                  ushort4 __82;\n                    ushort4 __83;\n                      int4 v__68 = make_int4(2, 2, 2, 2);\n                      int4 v__69 = make_int4(0, 0, 0, 0);\n                      __83.x = (v__68.x>=v__69.x);\n                      __83.y = (v__68.y>=v__69.y);\n                      __83.z = (v__68.z>=v__69.z);\n                      __83.w = (v__68.w>=v__69.w);\n                    ushort4 __84;\n                      int4 v__70 = make_int4(0, 0, 0, 0);\n                      __84.x = (__79.x>=v__70.x);\n                      __84.y = (__79.y>=v__70.y);\n                      __84.z = (__79.z>=v__70.z);\n                      __84.w = (__79.w>=v__70.w);\n                    __82.x = (__83.x&&__84.x);\n                    __82.y = (__83.y&&__84.y);\n                    __82.z = (__83.z&&__84.z);\n                    __82.w = (__83.w&&__84.w);\n                  ushort4 __85;\n                    ushort4 __86;\n                      int4 v__71 = make_int4(2, 2, 2, 2);\n                      int4 v__72 = make_int4(0, 0, 0, 0);\n                      __86.x = (v__71.x<v__72.x);\n                      __86.y = (v__71.y<v__72.y);\n                      __86.z = (v__71.z<v__72.z);\n                      __86.w = (v__71.w<v__72.w);\n                    ushort4 __87;\n                      int4 v__73 = make_int4(0, 0, 0, 0);\n                      __87.x = (__79.x<=v__73.x);\n                      __87.y = (__79.y<=v__73.y);\n                      __87.z = (__79.z<=v__73.z);\n                      __87.w = (__79.w<=v__73.w);\n                    __85.x = (__86.x&&__87.x);\n                    __85.y = (__86.y&&__87.y);\n                    __85.z = (__86.z&&__87.z);\n                    __85.w = (__86.w&&__87.w);\n                  __81.x = (__82.x||__85.x);\n                  __81.y = (__82.y||__85.y);\n                  __81.z = (__82.z||__85.z);\n                  __81.w = (__82.w||__85.w);\n                int4 __88;\n                  int4 v__74 = make_int4(2, 2, 2, 2);\n                  __88.x = (__79.x+v__74.x);\n                  __88.y = (__79.y+v__74.y);\n                  __88.z = (__79.z+v__74.z);\n                  __88.w = (__79.w+v__74.w);\n                __80.x = (bool(__81.x)?__79.x:__88.x);\n                __80.y = (bool(__81.y)?__79.y:__88.y);\n                __80.z = (bool(__81.z)?__79.z:__88.z);\n                __80.w = (bool(__81.w)?__79.w:__88.w);\n                int4 v__75 = make_int4(4, 4, 4, 4);\n                __78.x = (__80.x*v__75.x);\n                __78.y = (__80.y*v__75.y);\n                __78.z = (__80.z*v__75.z);\n                __78.w = (__80.w*v__75.w);\n              __63.x = (__64.x >> __78.x);\n              __63.y = (__64.y >> __78.y);\n              __63.z = (__64.z >> __78.z);\n              __63.w = (__64.w >> __78.w);\n            int4 v__76 = make_int4(15, 15, 15, 15);\n            __62.x = (__63.x & v__76.x);\n            __62.y = (__63.y & v__76.y);\n            __62.z = (__63.z & v__76.z);\n            __62.w = (__63.w & v__76.w);\n          ((half2*)(&(__61.x)))->x = (half)(__62.x);\n          ((half2*)(&(__61.x)))->y = (half)(__62.y);\n          ((half2*)(&(__61.y)))->x = (half)(__62.z);\n          ((half2*)(&(__61.y)))->y = (half)(__62.w);\n          uint2 v__77 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__60.x)))->x = (((half2*)(&(__61.x)))->x*((half2*)(&(v__77.x)))->x);\n          ((half2*)(&(__60.x)))->y = (((half2*)(&(__61.x)))->y*((half2*)(&(v__77.x)))->y);\n          ((half2*)(&(__60.y)))->x = (((half2*)(&(__61.y)))->x*((half2*)(&(v__77.y)))->x);\n          ((half2*)(&(__60.y)))->y = (((half2*)(&(__61.y)))->y*((half2*)(&(v__77.y)))->y);\n        uint2 v__78 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__59.x)))->x = (((half2*)(&(__60.x)))->x-((half2*)(&(v__78.x)))->x);\n        ((half2*)(&(__59.x)))->y = (((half2*)(&(__60.x)))->y-((half2*)(&(v__78.x)))->y);\n        ((half2*)(&(__59.y)))->x = (((half2*)(&(__60.y)))->x-((half2*)(&(v__78.y)))->x);\n        ((half2*)(&(__59.y)))->y = (((half2*)(&(__60.y)))->y-((half2*)(&(v__78.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((k_0_0 + 2) % 3) * 4608) + (((int)threadIdx.z) * 1152)) + (ax0_ax1_fused_2_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __59;\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 2;\");\n\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[(((k_0_0 % 3) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((k_0_0 % 3) * 4608) + (((int)threadIdx.z) * 1152)) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n    }\n  }\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  for (int k_0_1_1 = 0; k_0_1_1 < 4; ++k_0_1_1) {\n    nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[((k_0_1_1 * 16) + 2304)])), 72);\n    nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[(((((int)threadIdx.z) * 1152) + (k_0_1_1 * 16)) + 9216)])), 72);\n    nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  for (int k_0_1_2 = 0; k_0_1_2 < 4; ++k_0_1_2) {\n    nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[(k_0_1_2 * 16)])), 72);\n    nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1_2 * 16))])), 72);\n    nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n  }\n  nvcuda::wmma::store_matrix_sync((&(C[((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[0], 6656, nvcuda::wmma::mem_row_major);\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 3,
                "block_row_warps": 1,
                "BM": 16
            }
        },
        "m32": {
            "func_name": "tir_halfxint3_tensorop_32x64x64x1_t0_y2z4_K17920_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(256) tir_halfxint3_tensorop_32x64x64x1_t0_y2z4_K17920_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[1];\n  __shared__ half APad_shared[2304];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[1];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  nvcuda::wmma::fill_fragment(C_wmma_accumulator[0], 0.000000e+00f);\n  for (int k_0_0 = 0; k_0_0 < 280; ++k_0_0) {\n    __syncthreads();\n    *(uint4*)(APad_shared + ((((((int)threadIdx.y) * 1152) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = (((((((int)threadIdx.y) * 16) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + (((((((int)threadIdx.y) * 286720) + (((int)threadIdx.z) * 71680)) + ((((int)threadIdx.x) >> 3) * 17920)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 4; ++ax0_ax1_fused_2) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[((((int)threadIdx.y) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n    }\n  }\n  nvcuda::wmma::store_matrix_sync((&(C[(((((int)threadIdx.y) * 106496) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[0], 6656, nvcuda::wmma::mem_row_major);\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 2,
                "BM": 32
            }
        },
        "m64": {
            "func_name": "tir_halfxint3_tensorop_32x64x64x1_t0_y2z4_K17920_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(256) tir_halfxint3_tensorop_32x64x64x1_t0_y2z4_K17920_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[1];\n  __shared__ half APad_shared[2304];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[1];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  nvcuda::wmma::fill_fragment(C_wmma_accumulator[0], 0.000000e+00f);\n  for (int k_0_0 = 0; k_0_0 < 280; ++k_0_0) {\n    __syncthreads();\n    *(uint4*)(APad_shared + ((((((int)threadIdx.y) * 1152) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = ((((((((int)blockIdx.y) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + ((((((((int)blockIdx.y) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + ((((int)threadIdx.x) >> 3) * 17920)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 4; ++ax0_ax1_fused_2) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[((((int)threadIdx.y) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n    }\n  }\n  nvcuda::wmma::store_matrix_sync((&(C[((((((int)blockIdx.y) * 212992) + (((int)threadIdx.y) * 106496)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[0], 6656, nvcuda::wmma::mem_row_major);\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 2,
                "BM": 32
            }
        },
        "m128": {
            "func_name": "tir_halfxint3_tensorop_64x64x64x1_t0_y2z4_K17920_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(256) tir_halfxint3_tensorop_64x64x64x1_t0_y2z4_K17920_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[2];\n  __shared__ half APad_shared[4608];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    nvcuda::wmma::fill_fragment(C_wmma_accumulator[i_0_2_init], 0.000000e+00f);\n  }\n  for (int k_0_0 = 0; k_0_0 < 280; ++k_0_0) {\n    __syncthreads();\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 2; ++ax0_ax1_fused_2) {\n      *(uint4*)(APad_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2 * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = (((((((((int)blockIdx.y) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + (((((((((int)blockIdx.y) * 1146880) + (((int)threadIdx.y) * 573440)) + (((int)threadIdx.z) * 143360)) + (ax0_ax1_fused_2 * 71680)) + ((((int)threadIdx.x) >> 3) * 17920)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 4; ++ax0_ax1_fused_2_1) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 286720)) + (((int)threadIdx.z) * 71680)) + (ax0_ax1_fused_2_1 * 17920)) + ((((int)threadIdx.x) >> 4) * 8960)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2_1 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[(((((int)threadIdx.y) * 2304) + (ax0_0 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1 * 16))])), 72);\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        nvcuda::wmma::mma_sync(C_wmma_accumulator[i_0_2], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[i_0_2]);\n      }\n    }\n  }\n  for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {\n    nvcuda::wmma::store_matrix_sync((&(C[(((((((int)blockIdx.y) * 425984) + (((int)threadIdx.y) * 212992)) + (ax0_0_1 * 106496)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[ax0_0_1], 6656, nvcuda::wmma::mem_row_major);\n  }\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 2,
                "BM": 64
            }
        },
        "m256": {
            "func_name": "tir_halfxint3_tensorop_128x64x32x1_t0_y4z1_K17920_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(128) tir_halfxint3_tensorop_128x64x32x1_t0_y4z1_K17920_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[8];\n  __shared__ half APad_shared[5120];\n  __shared__ half B_rescale_shared[2560];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[4];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    for (int j_0_2_init = 0; j_0_2_init < 4; ++j_0_2_init) {\n      nvcuda::wmma::fill_fragment(C_wmma_accumulator[((i_0_2_init * 4) + j_0_2_init)], 0.000000e+00f);\n    }\n  }\n  for (int k_0_0 = 0; k_0_0 < 560; ++k_0_0) {\n    __syncthreads();\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 4; ++ax0_ax1_fused_2) {\n      *(uint4*)(APad_shared + ((((((int)threadIdx.y) * 1280) + (ax0_ax1_fused_2 * 320)) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8))) = ((((((((int)blockIdx.y) * 128) + (((int)threadIdx.y) * 32)) + (ax0_ax1_fused_2 * 8)) + (((int)threadIdx.x) >> 2)) < m) ? *(uint4*)(A + ((((((((int)blockIdx.y) * 2293760) + (((int)threadIdx.y) * 573440)) + (ax0_ax1_fused_2 * 143360)) + ((((int)threadIdx.x) >> 2) * 17920)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 3) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 4; ++ax0_ax1_fused_2_1) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4(((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 143360)) + (ax0_ax1_fused_2_1 * 35840)) + ((((int)threadIdx.x) >> 3) * 8960)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 143360)) + (ax0_ax1_fused_2_1 * 35840)) + ((((int)threadIdx.x) >> 3) * 8960)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 143360)) + (ax0_ax1_fused_2_1 * 35840)) + ((((int)threadIdx.x) >> 3) * 8960)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)), ((((((((int)blockIdx.x) * 573440) + (((int)threadIdx.y) * 143360)) + (ax0_ax1_fused_2_1 * 35840)) + ((((int)threadIdx.x) >> 3) * 8960)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]), __pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + ((((((int)threadIdx.y) * 640) + (ax0_ax1_fused_2_1 * 160)) + ((((int)threadIdx.x) >> 3) * 40)) + ((((int)threadIdx.x) & 7) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 2; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[(((((int)threadIdx.y) * 1280) + (ax0_0 * 640)) + (k_0_1 * 16))])), 40);\n      }\n      for (int ax0_0_1 = 0; ax0_0_1 < 4; ++ax0_0_1) {\n        nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[ax0_0_1], (&(B_rescale_shared[((ax0_0_1 * 640) + (k_0_1 * 16))])), 40);\n      }\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        for (int j_0_2 = 0; j_0_2 < 4; ++j_0_2) {\n          nvcuda::wmma::mma_sync(C_wmma_accumulator[((i_0_2 * 4) + j_0_2)], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[j_0_2], C_wmma_accumulator[((i_0_2 * 4) + j_0_2)]);\n        }\n      }\n    }\n  }\n  for (int ax0_0_2 = 0; ax0_0_2 < 2; ++ax0_0_2) {\n    for (int ax1_0 = 0; ax1_0 < 4; ++ax1_0) {\n      nvcuda::wmma::store_matrix_sync((&(C[(((((((int)blockIdx.y) * 851968) + (((int)threadIdx.y) * 212992)) + (ax0_0_2 * 106496)) + (((int)blockIdx.x) * 64)) + (ax1_0 * 16))])), C_wmma_accumulator[((ax0_0_2 * 4) + ax1_0)], 6656, nvcuda::wmma::mem_row_major);\n    }\n  }\n}\n\n",
            "params": {
                "block_col_warps": 1,
                "BN": 64,
                "BK": 32,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 4,
                "BM": 128
            }
        }
    },
    "b4n17920k6656": {
        "m1": {
            "func_name": "tir_halfxint4_simt_bn4_k6656",
            "code": "#include <cuda_fp16.h>\nextern \"C\" __global__ void __launch_bounds__(128) tir_halfxint4_simt_bn4_k6656(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C) {\n  half in_thread_C_local[1];\n  half A_local[8];\n  half red_buf0[1];\n  in_thread_C_local[0] = __float2half_rn(0.000000e+00f);\n  for (int k_0 = 0; k_0 < 26; ++k_0) {\n    *(uint4*)(A_local + 0) = *(uint4*)(A + ((k_0 * 256) + (((int)threadIdx.x) * 8)));\n    for (int k_2 = 0; k_2 < 8; ++k_2) {\n      in_thread_C_local[0] = (in_thread_C_local[0] + (A_local[k_2] * ((((half)((((int)B[(((((((int)blockIdx.x) * 13312) + (((int)threadIdx.y) * 3328)) + (k_0 * 128)) + (((int)threadIdx.x) * 4)) + (k_2 >> 1))]) >> ((k_2 & 1) * 4)) & 15)) * Scales[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))]) - Zeros[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))])));\n    }\n  }\n  uint mask[1];\n  half t0[1];\n  red_buf0[0] = in_thread_C_local[0];\n  mask[0] = (__activemask() & ((uint)(0 << (((int)threadIdx.y) * 32))));\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 16, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 8, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 4, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 2, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 1, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  red_buf0[0] = __shfl_sync(mask[0], red_buf0[0], (((int)threadIdx.y) * 32), 32);\n  C[((((int)blockIdx.x) * 4) + ((int)threadIdx.y))] = red_buf0[0];\n}\n\n",
            "params": {
                "num_warps": 4
            }
        },
        "m16": {
            "func_name": "tir_halfxint3_tensorop_16x64x64x1_t0_y1z4_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(128) tir_halfxint3_tensorop_16x64x64x1_t0_y1z4_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[1];\n  __shared__ half APad_shared[1152];\n  __shared__ half B_rescale_shared[4608];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[1];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  nvcuda::wmma::fill_fragment(C_wmma_accumulator[0], 0.000000e+00f);\n  for (int k_0_0 = 0; k_0_0 < 104; ++k_0_0) {\n    __syncthreads();\n    *(uint4*)(APad_shared + (((((int)threadIdx.z) * 288) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = ((((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + ((((((int)threadIdx.z) * 26624) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 8; ++ax0_ax1_fused_2) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4(((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + ((((((int)threadIdx.z) * 1152) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[0], (&(APad_shared[(k_0_1 * 16)])), 72);\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1 * 16))])), 72);\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[0], APad_shared_wmma_matrix_a[0], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[0]);\n    }\n  }\n  nvcuda::wmma::store_matrix_sync((&(C[((((int)blockIdx.x) * 64) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[0], 17920, nvcuda::wmma::mem_row_major);\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 64,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 1,
                "BM": 16
            }
        },
        "m32": {
            "func_name": "tir_halfxint3_tensorop_32x128x64x2_t0_y1z8_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(256) tir_halfxint3_tensorop_32x128x64x2_t0_y1z8_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[2];\n  __shared__ half APad_shared[4608];\n  __shared__ half B_rescale_shared[18432];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    nvcuda::wmma::fill_fragment(C_wmma_accumulator[i_0_2_init], 0.000000e+00f);\n  }\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(APad_shared + (((((int)threadIdx.z) * 288) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))))\n    );\n    int pred_guard = (int)(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m);\n    __asm__ __volatile__(\n        \"{  .reg .pred p;\"\n        \"  setp.ne.b32 p, %0, 0;\"\n      #if TVM_ENABLE_L2_PREFETCH\n        \" @p cp.async.cg.shared.global.L2::128B [%1], [%2], %3;\"\n      #else\n        \" @p cp.async.cg.shared.global [%1], [%2], %3;\"\n      #endif\n      \"  @!p st.shared.v4.u32 [%1], {%4, %5, %6, %7};}\"\n        :: \"r\"(pred_guard), \"r\"(addr), \"l\"((void*)(A + (((((int)threadIdx.z) * 26624) + ((((int)threadIdx.x) >> 3) * 6656)) + ((((int)threadIdx.x) & 7) * 8)))), \"n\"(16), \"r\"(0), \"r\"(0), \"r\"(0),\"r\"(0)\n    );\n  }\n  for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 8; ++ax0_ax1_fused_2) {\n    uint2 __1;\n      uint2 __2;\n        uint2 __3;\n        int4 __4;\n          int4 __5;\n            int4 __6;\n            int4 __7;\n              int4 v_ = make_int4((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)), (((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + ((((int)threadIdx.x) & 15) * 2)));\n              int4 __8;\n                int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__2 = make_int4(2, 2, 2, 2);\n                __8.x = (v__1.x%v__2.x);\n                __8.y = (v__1.y%v__2.y);\n                __8.z = (v__1.z%v__2.z);\n                __8.w = (v__1.w%v__2.w);\n              int4 __9;\n                int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__4 = make_int4(2, 2, 2, 2);\n                __9.x = (v__3.x/v__4.x);\n                __9.y = (v__3.y/v__4.y);\n                __9.z = (v__3.z/v__4.z);\n                __9.w = (v__3.w/v__4.w);\n              int4 __10;\n              ushort4 __11;\n                ushort4 __12;\n                  ushort4 __13;\n                    int4 v__5 = make_int4(2, 2, 2, 2);\n                    int4 v__6 = make_int4(0, 0, 0, 0);\n                    __13.x = (v__5.x>=v__6.x);\n                    __13.y = (v__5.y>=v__6.y);\n                    __13.z = (v__5.z>=v__6.z);\n                    __13.w = (v__5.w>=v__6.w);\n                  ushort4 __14;\n                    int4 v__7 = make_int4(0, 0, 0, 0);\n                    __14.x = (__8.x>=v__7.x);\n                    __14.y = (__8.y>=v__7.y);\n                    __14.z = (__8.z>=v__7.z);\n                    __14.w = (__8.w>=v__7.w);\n                  __12.x = (__13.x&&__14.x);\n                  __12.y = (__13.y&&__14.y);\n                  __12.z = (__13.z&&__14.z);\n                  __12.w = (__13.w&&__14.w);\n                ushort4 __15;\n                  ushort4 __16;\n                    int4 v__8 = make_int4(2, 2, 2, 2);\n                    int4 v__9 = make_int4(0, 0, 0, 0);\n                    __16.x = (v__8.x<v__9.x);\n                    __16.y = (v__8.y<v__9.y);\n                    __16.z = (v__8.z<v__9.z);\n                    __16.w = (v__8.w<v__9.w);\n                  ushort4 __17;\n                    int4 v__10 = make_int4(0, 0, 0, 0);\n                    __17.x = (__8.x<=v__10.x);\n                    __17.y = (__8.y<=v__10.y);\n                    __17.z = (__8.z<=v__10.z);\n                    __17.w = (__8.w<=v__10.w);\n                  __15.x = (__16.x&&__17.x);\n                  __15.y = (__16.y&&__17.y);\n                  __15.z = (__16.z&&__17.z);\n                  __15.w = (__16.w&&__17.w);\n                __11.x = (__12.x||__15.x);\n                __11.y = (__12.y||__15.y);\n                __11.z = (__12.z||__15.z);\n                __11.w = (__12.w||__15.w);\n              int4 __18;\n                int4 v__11 = make_int4(1, 1, 1, 1);\n                __18.x = (__9.x-v__11.x);\n                __18.y = (__9.y-v__11.y);\n                __18.z = (__9.z-v__11.z);\n                __18.w = (__9.w-v__11.w);\n              __10.x = (bool(__11.x)?__9.x:__18.x);\n              __10.y = (bool(__11.y)?__9.y:__18.y);\n              __10.z = (bool(__11.z)?__9.z:__18.z);\n              __10.w = (bool(__11.w)?__9.w:__18.w);\n              __7.x = (v_.x+__10.x);\n              __7.y = (v_.y+__10.y);\n              __7.z = (v_.z+__10.z);\n              __7.w = (v_.w+__10.w);\n            int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n            __6.x = (int)(((char)(v__12 >> 0)));\n            __6.y = (int)(((char)(v__12 >> 8)));\n            __6.z = (int)(((char)(v__12 >> 16)));\n            __6.w = (int)(((char)(v__12 >> 24)));\n            int4 __19;\n              int4 __20;\n                int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                int4 v__14 = make_int4(2, 2, 2, 2);\n                __20.x = (v__13.x%v__14.x);\n                __20.y = (v__13.y%v__14.y);\n                __20.z = (v__13.z%v__14.z);\n                __20.w = (v__13.w%v__14.w);\n              int4 __21;\n              ushort4 __22;\n                ushort4 __23;\n                  ushort4 __24;\n                    int4 v__15 = make_int4(2, 2, 2, 2);\n                    int4 v__16 = make_int4(0, 0, 0, 0);\n                    __24.x = (v__15.x>=v__16.x);\n                    __24.y = (v__15.y>=v__16.y);\n                    __24.z = (v__15.z>=v__16.z);\n                    __24.w = (v__15.w>=v__16.w);\n                  ushort4 __25;\n                    int4 v__17 = make_int4(0, 0, 0, 0);\n                    __25.x = (__20.x>=v__17.x);\n                    __25.y = (__20.y>=v__17.y);\n                    __25.z = (__20.z>=v__17.z);\n                    __25.w = (__20.w>=v__17.w);\n                  __23.x = (__24.x&&__25.x);\n                  __23.y = (__24.y&&__25.y);\n                  __23.z = (__24.z&&__25.z);\n                  __23.w = (__24.w&&__25.w);\n                ushort4 __26;\n                  ushort4 __27;\n                    int4 v__18 = make_int4(2, 2, 2, 2);\n                    int4 v__19 = make_int4(0, 0, 0, 0);\n                    __27.x = (v__18.x<v__19.x);\n                    __27.y = (v__18.y<v__19.y);\n                    __27.z = (v__18.z<v__19.z);\n                    __27.w = (v__18.w<v__19.w);\n                  ushort4 __28;\n                    int4 v__20 = make_int4(0, 0, 0, 0);\n                    __28.x = (__20.x<=v__20.x);\n                    __28.y = (__20.y<=v__20.y);\n                    __28.z = (__20.z<=v__20.z);\n                    __28.w = (__20.w<=v__20.w);\n                  __26.x = (__27.x&&__28.x);\n                  __26.y = (__27.y&&__28.y);\n                  __26.z = (__27.z&&__28.z);\n                  __26.w = (__27.w&&__28.w);\n                __22.x = (__23.x||__26.x);\n                __22.y = (__23.y||__26.y);\n                __22.z = (__23.z||__26.z);\n                __22.w = (__23.w||__26.w);\n              int4 __29;\n                int4 v__21 = make_int4(2, 2, 2, 2);\n                __29.x = (__20.x+v__21.x);\n                __29.y = (__20.y+v__21.y);\n                __29.z = (__20.z+v__21.z);\n                __29.w = (__20.w+v__21.w);\n              __21.x = (bool(__22.x)?__20.x:__29.x);\n              __21.y = (bool(__22.y)?__20.y:__29.y);\n              __21.z = (bool(__22.z)?__20.z:__29.z);\n              __21.w = (bool(__22.w)?__20.w:__29.w);\n              int4 v__22 = make_int4(4, 4, 4, 4);\n              __19.x = (__21.x*v__22.x);\n              __19.y = (__21.y*v__22.y);\n              __19.z = (__21.z*v__22.z);\n              __19.w = (__21.w*v__22.w);\n            __5.x = (__6.x >> __19.x);\n            __5.y = (__6.y >> __19.y);\n            __5.z = (__6.z >> __19.z);\n            __5.w = (__6.w >> __19.w);\n          int4 v__23 = make_int4(15, 15, 15, 15);\n          __4.x = (__5.x & v__23.x);\n          __4.y = (__5.y & v__23.y);\n          __4.z = (__5.z & v__23.z);\n          __4.w = (__5.w & v__23.w);\n        ((half2*)(&(__3.x)))->x = (half)(__4.x);\n        ((half2*)(&(__3.x)))->y = (half)(__4.y);\n        ((half2*)(&(__3.y)))->x = (half)(__4.z);\n        ((half2*)(&(__3.y)))->y = (half)(__4.w);\n        uint2 v__24 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n        ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n        ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n        ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n      uint2 v__25 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n      ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n      ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n      ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n      ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n    *(uint2*)(B_rescale_shared + ((((((int)threadIdx.z) * 1152) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  for (int k_0_0 = 0; k_0_0 < 103; ++k_0_0) {\n    __syncthreads();\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(APad_shared + ((((((k_0_0 + 1) & 1) * 2304) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))))\n    );\n    int pred_guard = (int)(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 3)) < m);\n    __asm__ __volatile__(\n        \"{  .reg .pred p;\"\n        \"  setp.ne.b32 p, %0, 0;\"\n      #if TVM_ENABLE_L2_PREFETCH\n        \" @p cp.async.cg.shared.global.L2::128B [%1], [%2], %3;\"\n      #else\n        \" @p cp.async.cg.shared.global [%1], [%2], %3;\"\n      #endif\n      \"  @!p st.shared.v4.u32 [%1], {%4, %5, %6, %7};}\"\n        :: \"r\"(pred_guard), \"r\"(addr), \"l\"((void*)(A + (((((((int)threadIdx.z) * 26624) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 64))), \"n\"(16), \"r\"(0), \"r\"(0), \"r\"(0),\"r\"(0)\n    );\n  }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 8; ++ax0_ax1_fused_2_1) {\n      uint2 __30;\n        uint2 __31;\n          uint2 __32;\n          int4 __33;\n            int4 __34;\n              int4 __35;\n              int4 __36;\n                int4 __37;\n                  int4 v__26 = make_int4(((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), ((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                  int4 __38;\n                    int4 v__27 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                    int4 v__28 = make_int4(2, 2, 2, 2);\n                    __38.x = (v__27.x%v__28.x);\n                    __38.y = (v__27.y%v__28.y);\n                    __38.z = (v__27.z%v__28.z);\n                    __38.w = (v__27.w%v__28.w);\n                  int4 __39;\n                    int4 v__29 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                    int4 v__30 = make_int4(2, 2, 2, 2);\n                    __39.x = (v__29.x/v__30.x);\n                    __39.y = (v__29.y/v__30.y);\n                    __39.z = (v__29.z/v__30.z);\n                    __39.w = (v__29.w/v__30.w);\n                  int4 __40;\n                  ushort4 __41;\n                    ushort4 __42;\n                      ushort4 __43;\n                        int4 v__31 = make_int4(2, 2, 2, 2);\n                        int4 v__32 = make_int4(0, 0, 0, 0);\n                        __43.x = (v__31.x>=v__32.x);\n                        __43.y = (v__31.y>=v__32.y);\n                        __43.z = (v__31.z>=v__32.z);\n                        __43.w = (v__31.w>=v__32.w);\n                      ushort4 __44;\n                        int4 v__33 = make_int4(0, 0, 0, 0);\n                        __44.x = (__38.x>=v__33.x);\n                        __44.y = (__38.y>=v__33.y);\n                        __44.z = (__38.z>=v__33.z);\n                        __44.w = (__38.w>=v__33.w);\n                      __42.x = (__43.x&&__44.x);\n                      __42.y = (__43.y&&__44.y);\n                      __42.z = (__43.z&&__44.z);\n                      __42.w = (__43.w&&__44.w);\n                    ushort4 __45;\n                      ushort4 __46;\n                        int4 v__34 = make_int4(2, 2, 2, 2);\n                        int4 v__35 = make_int4(0, 0, 0, 0);\n                        __46.x = (v__34.x<v__35.x);\n                        __46.y = (v__34.y<v__35.y);\n                        __46.z = (v__34.z<v__35.z);\n                        __46.w = (v__34.w<v__35.w);\n                      ushort4 __47;\n                        int4 v__36 = make_int4(0, 0, 0, 0);\n                        __47.x = (__38.x<=v__36.x);\n                        __47.y = (__38.y<=v__36.y);\n                        __47.z = (__38.z<=v__36.z);\n                        __47.w = (__38.w<=v__36.w);\n                      __45.x = (__46.x&&__47.x);\n                      __45.y = (__46.y&&__47.y);\n                      __45.z = (__46.z&&__47.z);\n                      __45.w = (__46.w&&__47.w);\n                    __41.x = (__42.x||__45.x);\n                    __41.y = (__42.y||__45.y);\n                    __41.z = (__42.z||__45.z);\n                    __41.w = (__42.w||__45.w);\n                  int4 __48;\n                    int4 v__37 = make_int4(1, 1, 1, 1);\n                    __48.x = (__39.x-v__37.x);\n                    __48.y = (__39.y-v__37.y);\n                    __48.z = (__39.z-v__37.z);\n                    __48.w = (__39.w-v__37.w);\n                  __40.x = (bool(__41.x)?__39.x:__48.x);\n                  __40.y = (bool(__41.y)?__39.y:__48.y);\n                  __40.z = (bool(__41.z)?__39.z:__48.z);\n                  __40.w = (bool(__41.w)?__39.w:__48.w);\n                  __37.x = (v__26.x+__40.x);\n                  __37.y = (v__26.y+__40.y);\n                  __37.z = (v__26.z+__40.z);\n                  __37.w = (v__26.w+__40.w);\n                int4 v__38 = make_int4(32, 32, 32, 32);\n                __36.x = (__37.x+v__38.x);\n                __36.y = (__37.y+v__38.y);\n                __36.z = (__37.z+v__38.z);\n                __36.w = (__37.w+v__38.w);\n              int v__39 = ((0x000000ff << 0) & (B[__36.x] << 0))|((0x000000ff << 8) & (B[__36.y] << 8))|((0x000000ff << 16) & (B[__36.z] << 16))|((0x000000ff << 24) & (B[__36.w] << 24));\n              __35.x = (int)(((char)(v__39 >> 0)));\n              __35.y = (int)(((char)(v__39 >> 8)));\n              __35.z = (int)(((char)(v__39 >> 16)));\n              __35.w = (int)(((char)(v__39 >> 24)));\n              int4 __49;\n                int4 __50;\n                  int4 v__40 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__41 = make_int4(2, 2, 2, 2);\n                  __50.x = (v__40.x%v__41.x);\n                  __50.y = (v__40.y%v__41.y);\n                  __50.z = (v__40.z%v__41.z);\n                  __50.w = (v__40.w%v__41.w);\n                int4 __51;\n                ushort4 __52;\n                  ushort4 __53;\n                    ushort4 __54;\n                      int4 v__42 = make_int4(2, 2, 2, 2);\n                      int4 v__43 = make_int4(0, 0, 0, 0);\n                      __54.x = (v__42.x>=v__43.x);\n                      __54.y = (v__42.y>=v__43.y);\n                      __54.z = (v__42.z>=v__43.z);\n                      __54.w = (v__42.w>=v__43.w);\n                    ushort4 __55;\n                      int4 v__44 = make_int4(0, 0, 0, 0);\n                      __55.x = (__50.x>=v__44.x);\n                      __55.y = (__50.y>=v__44.y);\n                      __55.z = (__50.z>=v__44.z);\n                      __55.w = (__50.w>=v__44.w);\n                    __53.x = (__54.x&&__55.x);\n                    __53.y = (__54.y&&__55.y);\n                    __53.z = (__54.z&&__55.z);\n                    __53.w = (__54.w&&__55.w);\n                  ushort4 __56;\n                    ushort4 __57;\n                      int4 v__45 = make_int4(2, 2, 2, 2);\n                      int4 v__46 = make_int4(0, 0, 0, 0);\n                      __57.x = (v__45.x<v__46.x);\n                      __57.y = (v__45.y<v__46.y);\n                      __57.z = (v__45.z<v__46.z);\n                      __57.w = (v__45.w<v__46.w);\n                    ushort4 __58;\n                      int4 v__47 = make_int4(0, 0, 0, 0);\n                      __58.x = (__50.x<=v__47.x);\n                      __58.y = (__50.y<=v__47.y);\n                      __58.z = (__50.z<=v__47.z);\n                      __58.w = (__50.w<=v__47.w);\n                    __56.x = (__57.x&&__58.x);\n                    __56.y = (__57.y&&__58.y);\n                    __56.z = (__57.z&&__58.z);\n                    __56.w = (__57.w&&__58.w);\n                  __52.x = (__53.x||__56.x);\n                  __52.y = (__53.y||__56.y);\n                  __52.z = (__53.z||__56.z);\n                  __52.w = (__53.w||__56.w);\n                int4 __59;\n                  int4 v__48 = make_int4(2, 2, 2, 2);\n                  __59.x = (__50.x+v__48.x);\n                  __59.y = (__50.y+v__48.y);\n                  __59.z = (__50.z+v__48.z);\n                  __59.w = (__50.w+v__48.w);\n                __51.x = (bool(__52.x)?__50.x:__59.x);\n                __51.y = (bool(__52.y)?__50.y:__59.y);\n                __51.z = (bool(__52.z)?__50.z:__59.z);\n                __51.w = (bool(__52.w)?__50.w:__59.w);\n                int4 v__49 = make_int4(4, 4, 4, 4);\n                __49.x = (__51.x*v__49.x);\n                __49.y = (__51.y*v__49.y);\n                __49.z = (__51.z*v__49.z);\n                __49.w = (__51.w*v__49.w);\n              __34.x = (__35.x >> __49.x);\n              __34.y = (__35.y >> __49.y);\n              __34.z = (__35.z >> __49.z);\n              __34.w = (__35.w >> __49.w);\n            int4 v__50 = make_int4(15, 15, 15, 15);\n            __33.x = (__34.x & v__50.x);\n            __33.y = (__34.y & v__50.y);\n            __33.z = (__34.z & v__50.z);\n            __33.w = (__34.w & v__50.w);\n          ((half2*)(&(__32.x)))->x = (half)(__33.x);\n          ((half2*)(&(__32.x)))->y = (half)(__33.y);\n          ((half2*)(&(__32.y)))->x = (half)(__33.z);\n          ((half2*)(&(__32.y)))->y = (half)(__33.w);\n          uint2 v__51 = make_uint2(__pack_half2(Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__31.x)))->x = (((half2*)(&(__32.x)))->x*((half2*)(&(v__51.x)))->x);\n          ((half2*)(&(__31.x)))->y = (((half2*)(&(__32.x)))->y*((half2*)(&(v__51.x)))->y);\n          ((half2*)(&(__31.y)))->x = (((half2*)(&(__32.y)))->x*((half2*)(&(v__51.y)))->x);\n          ((half2*)(&(__31.y)))->y = (((half2*)(&(__32.y)))->y*((half2*)(&(v__51.y)))->y);\n        uint2 v__52 = make_uint2(__pack_half2(Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[((((((int)blockIdx.x) * 128) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__30.x)))->x = (((half2*)(&(__31.x)))->x-((half2*)(&(v__52.x)))->x);\n        ((half2*)(&(__30.x)))->y = (((half2*)(&(__31.x)))->y-((half2*)(&(v__52.x)))->y);\n        ((half2*)(&(__30.y)))->x = (((half2*)(&(__31.y)))->x-((half2*)(&(v__52.y)))->x);\n        ((half2*)(&(__30.y)))->y = (((half2*)(&(__31.y)))->y-((half2*)(&(v__52.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((k_0_0 + 1) & 1) * 9216) + (((int)threadIdx.z) * 1152)) + (ax0_ax1_fused_2_1 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __30;\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[((((k_0_0 & 1) * 2304) + (ax0_0 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((k_0_0 & 1) * 9216) + (((int)threadIdx.z) * 1152)) + (k_0_1 * 16))])), 72);\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        nvcuda::wmma::mma_sync(C_wmma_accumulator[i_0_2], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[i_0_2]);\n      }\n    }\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  for (int k_0_1_1 = 0; k_0_1_1 < 4; ++k_0_1_1) {\n    for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {\n      nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0_1], (&(APad_shared[(((ax0_0_1 * 1152) + (k_0_1_1 * 16)) + 2304)])), 72);\n    }\n    nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[(((((int)threadIdx.z) * 1152) + (k_0_1_1 * 16)) + 9216)])), 72);\n    for (int i_0_2_1 = 0; i_0_2_1 < 2; ++i_0_2_1) {\n      nvcuda::wmma::mma_sync(C_wmma_accumulator[i_0_2_1], APad_shared_wmma_matrix_a[i_0_2_1], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[i_0_2_1]);\n    }\n  }\n  for (int ax0_0_2 = 0; ax0_0_2 < 2; ++ax0_0_2) {\n    nvcuda::wmma::store_matrix_sync((&(C[(((ax0_0_2 * 286720) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[ax0_0_2], 17920, nvcuda::wmma::mem_row_major);\n  }\n}\n\n",
            "params": {
                "block_col_warps": 8,
                "BN": 128,
                "BK": 64,
                "raster": 0,
                "stage": 2,
                "block_row_warps": 1,
                "BM": 32
            }
        },
        "m64": {
            "func_name": "tir_halfxint3_tensorop_64x128x64x1_t0_y2z8_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(512) tir_halfxint3_tensorop_64x128x64x1_t0_y2z8_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[2];\n  __shared__ half APad_shared[4608];\n  __shared__ half B_rescale_shared[9216];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[1];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    nvcuda::wmma::fill_fragment(C_wmma_accumulator[i_0_2_init], 0.000000e+00f);\n  }\n  for (int k_0_0 = 0; k_0_0 < 104; ++k_0_0) {\n    __syncthreads();\n    *(uint4*)(APad_shared + ((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = (((((((int)threadIdx.y) * 32) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + (((((((int)threadIdx.y) * 212992) + (((int)threadIdx.z) * 26624)) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 4; ++ax0_ax1_fused_2) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 212992)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 212992)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 212992)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 212992)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 64)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 4608) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[(((((int)threadIdx.y) * 2304) + (ax0_0 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[0], (&(B_rescale_shared[((((int)threadIdx.z) * 1152) + (k_0_1 * 16))])), 72);\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        nvcuda::wmma::mma_sync(C_wmma_accumulator[i_0_2], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[0], C_wmma_accumulator[i_0_2]);\n      }\n    }\n  }\n  for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {\n    nvcuda::wmma::store_matrix_sync((&(C[((((((int)threadIdx.y) * 573440) + (ax0_0_1 * 286720)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.z) * 16))])), C_wmma_accumulator[ax0_0_1], 17920, nvcuda::wmma::mem_row_major);\n  }\n}\n\n",
            "params": {
                "block_col_warps": 8,
                "BN": 128,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 2,
                "BM": 64
            }
        },
        "m128": {
            "func_name": "tir_halfxint3_tensorop_128x128x64x1_t0_y4z4_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(512) tir_halfxint3_tensorop_128x128x64x1_t0_y4z4_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[4];\n  __shared__ half APad_shared[9216];\n  __shared__ half B_rescale_shared[9216];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[2];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    for (int j_0_2_init = 0; j_0_2_init < 2; ++j_0_2_init) {\n      nvcuda::wmma::fill_fragment(C_wmma_accumulator[((i_0_2_init * 2) + j_0_2_init)], 0.000000e+00f);\n    }\n  }\n  for (int k_0_0 = 0; k_0_0 < 104; ++k_0_0) {\n    __syncthreads();\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 2; ++ax0_ax1_fused_2) {\n      *(uint4*)(APad_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2 * 288)) + ((((int)threadIdx.x) >> 3) * 72)) + ((((int)threadIdx.x) & 7) * 8))) = ((((((((int)threadIdx.y) * 32) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2 * 4)) + (((int)threadIdx.x) >> 3)) < m) ? *(uint4*)(A + ((((((((int)threadIdx.y) * 212992) + (((int)threadIdx.z) * 53248)) + (ax0_ax1_fused_2 * 26624)) + ((((int)threadIdx.x) >> 3) * 6656)) + (k_0_0 * 64)) + ((((int)threadIdx.x) & 7) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 4; ++ax0_ax1_fused_2_1) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)), (((((((((int)blockIdx.x) * 425984) + (((int)threadIdx.y) * 106496)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 6656)) + ((((int)threadIdx.x) >> 4) * 3328)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 15) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Scales[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))], Zeros[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 2)) + (((int)threadIdx.x) >> 4))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 2304) + (((int)threadIdx.z) * 576)) + (ax0_ax1_fused_2_1 * 144)) + ((((int)threadIdx.x) >> 4) * 72)) + ((((int)threadIdx.x) & 15) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 4; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[(((((int)threadIdx.y) * 2304) + (ax0_0 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {\n        nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[ax0_0_1], (&(B_rescale_shared[(((((int)threadIdx.z) * 2304) + (ax0_0_1 * 1152)) + (k_0_1 * 16))])), 72);\n      }\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        for (int j_0_2 = 0; j_0_2 < 2; ++j_0_2) {\n          nvcuda::wmma::mma_sync(C_wmma_accumulator[((i_0_2 * 2) + j_0_2)], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[j_0_2], C_wmma_accumulator[((i_0_2 * 2) + j_0_2)]);\n        }\n      }\n    }\n  }\n  for (int ax0_0_2 = 0; ax0_0_2 < 2; ++ax0_0_2) {\n    for (int ax1_0 = 0; ax1_0 < 2; ++ax1_0) {\n      nvcuda::wmma::store_matrix_sync((&(C[(((((((int)threadIdx.y) * 573440) + (ax0_0_2 * 286720)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.z) * 32)) + (ax1_0 * 16))])), C_wmma_accumulator[((ax0_0_2 * 2) + ax1_0)], 17920, nvcuda::wmma::mem_row_major);\n    }\n  }\n}\n\n",
            "params": {
                "block_col_warps": 4,
                "BN": 128,
                "BK": 64,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 4,
                "BM": 128
            }
        },
        "m256": {
            "func_name": "tir_halfxint3_tensorop_128x64x32x1_t0_y4z2_K6656_align8",
            "code": "#include <cuda_fp16.h>\n#include <mma.h>\n\n            static inline __device__ __host__ unsigned\n            __pack_half2(const half x, const half y) {\n            unsigned v0 = *((unsigned short *)&x);\n            unsigned v1 = *((unsigned short *)&y);\n            return (v1 << 16) | v0;\n        }extern \"C\" __global__ void __launch_bounds__(256) tir_halfxint3_tensorop_128x64x32x1_t0_y4z2_K6656_align8(half* __restrict__ A, signed char* __restrict__ B, half* __restrict__ Scales, half* __restrict__ Zeros, half* __restrict__ C, int m) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> C_wmma_accumulator[4];\n  __shared__ half APad_shared[5120];\n  __shared__ half B_rescale_shared[2560];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::row_major> APad_shared_wmma_matrix_a[2];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::col_major> B_rescale_shared_wmma_matrix_b[2];\n  for (int i_0_2_init = 0; i_0_2_init < 2; ++i_0_2_init) {\n    for (int j_0_2_init = 0; j_0_2_init < 2; ++j_0_2_init) {\n      nvcuda::wmma::fill_fragment(C_wmma_accumulator[((i_0_2_init * 2) + j_0_2_init)], 0.000000e+00f);\n    }\n  }\n  for (int k_0_0 = 0; k_0_0 < 208; ++k_0_0) {\n    __syncthreads();\n    for (int ax0_ax1_fused_2 = 0; ax0_ax1_fused_2 < 2; ++ax0_ax1_fused_2) {\n      *(uint4*)(APad_shared + (((((((int)threadIdx.y) * 1280) + (((int)threadIdx.z) * 640)) + (ax0_ax1_fused_2 * 320)) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8))) = (((((((((int)blockIdx.y) * 128) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.z) * 16)) + (ax0_ax1_fused_2 * 8)) + (((int)threadIdx.x) >> 2)) < m) ? *(uint4*)(A + (((((((((int)blockIdx.y) * 851968) + (((int)threadIdx.y) * 212992)) + (((int)threadIdx.z) * 106496)) + (ax0_ax1_fused_2 * 53248)) + ((((int)threadIdx.x) >> 2) * 6656)) + (k_0_0 * 32)) + ((((int)threadIdx.x) & 3) * 8))) : make_uint4(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)), __pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f))));\n    }\n    for (int ax0_ax1_fused_2_1 = 0; ax0_ax1_fused_2_1 < 2; ++ax0_ax1_fused_2_1) {\n      uint2 __1;\n        uint2 __2;\n          uint2 __3;\n          int4 __4;\n            int4 __5;\n              int4 __6;\n              int4 __7;\n                int4 v_ = make_int4((((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 13312)) + ((((int)threadIdx.x) >> 3) * 3328)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 13312)) + ((((int)threadIdx.x) >> 3) * 3328)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 13312)) + ((((int)threadIdx.x) >> 3) * 3328)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)), (((((((((int)blockIdx.x) * 212992) + (((int)threadIdx.y) * 53248)) + (((int)threadIdx.z) * 26624)) + (ax0_ax1_fused_2_1 * 13312)) + ((((int)threadIdx.x) >> 3) * 3328)) + (k_0_0 * 16)) + ((((int)threadIdx.x) & 7) * 2)));\n                int4 __8;\n                  int4 v__1 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__2 = make_int4(2, 2, 2, 2);\n                  __8.x = (v__1.x%v__2.x);\n                  __8.y = (v__1.y%v__2.y);\n                  __8.z = (v__1.z%v__2.z);\n                  __8.w = (v__1.w%v__2.w);\n                int4 __9;\n                  int4 v__3 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__4 = make_int4(2, 2, 2, 2);\n                  __9.x = (v__3.x/v__4.x);\n                  __9.y = (v__3.y/v__4.y);\n                  __9.z = (v__3.z/v__4.z);\n                  __9.w = (v__3.w/v__4.w);\n                int4 __10;\n                ushort4 __11;\n                  ushort4 __12;\n                    ushort4 __13;\n                      int4 v__5 = make_int4(2, 2, 2, 2);\n                      int4 v__6 = make_int4(0, 0, 0, 0);\n                      __13.x = (v__5.x>=v__6.x);\n                      __13.y = (v__5.y>=v__6.y);\n                      __13.z = (v__5.z>=v__6.z);\n                      __13.w = (v__5.w>=v__6.w);\n                    ushort4 __14;\n                      int4 v__7 = make_int4(0, 0, 0, 0);\n                      __14.x = (__8.x>=v__7.x);\n                      __14.y = (__8.y>=v__7.y);\n                      __14.z = (__8.z>=v__7.z);\n                      __14.w = (__8.w>=v__7.w);\n                    __12.x = (__13.x&&__14.x);\n                    __12.y = (__13.y&&__14.y);\n                    __12.z = (__13.z&&__14.z);\n                    __12.w = (__13.w&&__14.w);\n                  ushort4 __15;\n                    ushort4 __16;\n                      int4 v__8 = make_int4(2, 2, 2, 2);\n                      int4 v__9 = make_int4(0, 0, 0, 0);\n                      __16.x = (v__8.x<v__9.x);\n                      __16.y = (v__8.y<v__9.y);\n                      __16.z = (v__8.z<v__9.z);\n                      __16.w = (v__8.w<v__9.w);\n                    ushort4 __17;\n                      int4 v__10 = make_int4(0, 0, 0, 0);\n                      __17.x = (__8.x<=v__10.x);\n                      __17.y = (__8.y<=v__10.y);\n                      __17.z = (__8.z<=v__10.z);\n                      __17.w = (__8.w<=v__10.w);\n                    __15.x = (__16.x&&__17.x);\n                    __15.y = (__16.y&&__17.y);\n                    __15.z = (__16.z&&__17.z);\n                    __15.w = (__16.w&&__17.w);\n                  __11.x = (__12.x||__15.x);\n                  __11.y = (__12.y||__15.y);\n                  __11.z = (__12.z||__15.z);\n                  __11.w = (__12.w||__15.w);\n                int4 __18;\n                  int4 v__11 = make_int4(1, 1, 1, 1);\n                  __18.x = (__9.x-v__11.x);\n                  __18.y = (__9.y-v__11.y);\n                  __18.z = (__9.z-v__11.z);\n                  __18.w = (__9.w-v__11.w);\n                __10.x = (bool(__11.x)?__9.x:__18.x);\n                __10.y = (bool(__11.y)?__9.y:__18.y);\n                __10.z = (bool(__11.z)?__9.z:__18.z);\n                __10.w = (bool(__11.w)?__9.w:__18.w);\n                __7.x = (v_.x+__10.x);\n                __7.y = (v_.y+__10.y);\n                __7.z = (v_.z+__10.z);\n                __7.w = (v_.w+__10.w);\n              int v__12 = ((0x000000ff << 0) & (B[__7.x] << 0))|((0x000000ff << 8) & (B[__7.y] << 8))|((0x000000ff << 16) & (B[__7.z] << 16))|((0x000000ff << 24) & (B[__7.w] << 24));\n              __6.x = (int)(((char)(v__12 >> 0)));\n              __6.y = (int)(((char)(v__12 >> 8)));\n              __6.z = (int)(((char)(v__12 >> 16)));\n              __6.w = (int)(((char)(v__12 >> 24)));\n              int4 __19;\n                int4 __20;\n                  int4 v__13 = make_int4((0)+(1*0), (0)+(1*1), (0)+(1*2), (0)+(1*3));\n                  int4 v__14 = make_int4(2, 2, 2, 2);\n                  __20.x = (v__13.x%v__14.x);\n                  __20.y = (v__13.y%v__14.y);\n                  __20.z = (v__13.z%v__14.z);\n                  __20.w = (v__13.w%v__14.w);\n                int4 __21;\n                ushort4 __22;\n                  ushort4 __23;\n                    ushort4 __24;\n                      int4 v__15 = make_int4(2, 2, 2, 2);\n                      int4 v__16 = make_int4(0, 0, 0, 0);\n                      __24.x = (v__15.x>=v__16.x);\n                      __24.y = (v__15.y>=v__16.y);\n                      __24.z = (v__15.z>=v__16.z);\n                      __24.w = (v__15.w>=v__16.w);\n                    ushort4 __25;\n                      int4 v__17 = make_int4(0, 0, 0, 0);\n                      __25.x = (__20.x>=v__17.x);\n                      __25.y = (__20.y>=v__17.y);\n                      __25.z = (__20.z>=v__17.z);\n                      __25.w = (__20.w>=v__17.w);\n                    __23.x = (__24.x&&__25.x);\n                    __23.y = (__24.y&&__25.y);\n                    __23.z = (__24.z&&__25.z);\n                    __23.w = (__24.w&&__25.w);\n                  ushort4 __26;\n                    ushort4 __27;\n                      int4 v__18 = make_int4(2, 2, 2, 2);\n                      int4 v__19 = make_int4(0, 0, 0, 0);\n                      __27.x = (v__18.x<v__19.x);\n                      __27.y = (v__18.y<v__19.y);\n                      __27.z = (v__18.z<v__19.z);\n                      __27.w = (v__18.w<v__19.w);\n                    ushort4 __28;\n                      int4 v__20 = make_int4(0, 0, 0, 0);\n                      __28.x = (__20.x<=v__20.x);\n                      __28.y = (__20.y<=v__20.y);\n                      __28.z = (__20.z<=v__20.z);\n                      __28.w = (__20.w<=v__20.w);\n                    __26.x = (__27.x&&__28.x);\n                    __26.y = (__27.y&&__28.y);\n                    __26.z = (__27.z&&__28.z);\n                    __26.w = (__27.w&&__28.w);\n                  __22.x = (__23.x||__26.x);\n                  __22.y = (__23.y||__26.y);\n                  __22.z = (__23.z||__26.z);\n                  __22.w = (__23.w||__26.w);\n                int4 __29;\n                  int4 v__21 = make_int4(2, 2, 2, 2);\n                  __29.x = (__20.x+v__21.x);\n                  __29.y = (__20.y+v__21.y);\n                  __29.z = (__20.z+v__21.z);\n                  __29.w = (__20.w+v__21.w);\n                __21.x = (bool(__22.x)?__20.x:__29.x);\n                __21.y = (bool(__22.y)?__20.y:__29.y);\n                __21.z = (bool(__22.z)?__20.z:__29.z);\n                __21.w = (bool(__22.w)?__20.w:__29.w);\n                int4 v__22 = make_int4(4, 4, 4, 4);\n                __19.x = (__21.x*v__22.x);\n                __19.y = (__21.y*v__22.y);\n                __19.z = (__21.z*v__22.z);\n                __19.w = (__21.w*v__22.w);\n              __5.x = (__6.x >> __19.x);\n              __5.y = (__6.y >> __19.y);\n              __5.z = (__6.z >> __19.z);\n              __5.w = (__6.w >> __19.w);\n            int4 v__23 = make_int4(15, 15, 15, 15);\n            __4.x = (__5.x & v__23.x);\n            __4.y = (__5.y & v__23.y);\n            __4.z = (__5.z & v__23.z);\n            __4.w = (__5.w & v__23.w);\n          ((half2*)(&(__3.x)))->x = (half)(__4.x);\n          ((half2*)(&(__3.x)))->y = (half)(__4.y);\n          ((half2*)(&(__3.y)))->x = (half)(__4.z);\n          ((half2*)(&(__3.y)))->y = (half)(__4.w);\n          uint2 v__24 = make_uint2(__pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]), __pack_half2(Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Scales[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]));\n          ((half2*)(&(__2.x)))->x = (((half2*)(&(__3.x)))->x*((half2*)(&(v__24.x)))->x);\n          ((half2*)(&(__2.x)))->y = (((half2*)(&(__3.x)))->y*((half2*)(&(v__24.x)))->y);\n          ((half2*)(&(__2.y)))->x = (((half2*)(&(__3.y)))->x*((half2*)(&(v__24.y)))->x);\n          ((half2*)(&(__2.y)))->y = (((half2*)(&(__3.y)))->y*((half2*)(&(v__24.y)))->y);\n        uint2 v__25 = make_uint2(__pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]), __pack_half2(Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))], Zeros[(((((((int)blockIdx.x) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.z) * 8)) + (ax0_ax1_fused_2_1 * 4)) + (((int)threadIdx.x) >> 3))]));\n        ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x-((half2*)(&(v__25.x)))->x);\n        ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y-((half2*)(&(v__25.x)))->y);\n        ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x-((half2*)(&(v__25.y)))->x);\n        ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y-((half2*)(&(v__25.y)))->y);\n      *(uint2*)(B_rescale_shared + (((((((int)threadIdx.y) * 640) + (((int)threadIdx.z) * 320)) + (ax0_ax1_fused_2_1 * 160)) + ((((int)threadIdx.x) >> 3) * 40)) + ((((int)threadIdx.x) & 7) * 4))) = __1;\n    }\n    __syncthreads();\n    for (int k_0_1 = 0; k_0_1 < 2; ++k_0_1) {\n      for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {\n        nvcuda::wmma::load_matrix_sync(APad_shared_wmma_matrix_a[ax0_0], (&(APad_shared[(((((int)threadIdx.y) * 1280) + (ax0_0 * 640)) + (k_0_1 * 16))])), 40);\n      }\n      for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {\n        nvcuda::wmma::load_matrix_sync(B_rescale_shared_wmma_matrix_b[ax0_0_1], (&(B_rescale_shared[(((((int)threadIdx.z) * 1280) + (ax0_0_1 * 640)) + (k_0_1 * 16))])), 40);\n      }\n      for (int i_0_2 = 0; i_0_2 < 2; ++i_0_2) {\n        for (int j_0_2 = 0; j_0_2 < 2; ++j_0_2) {\n          nvcuda::wmma::mma_sync(C_wmma_accumulator[((i_0_2 * 2) + j_0_2)], APad_shared_wmma_matrix_a[i_0_2], B_rescale_shared_wmma_matrix_b[j_0_2], C_wmma_accumulator[((i_0_2 * 2) + j_0_2)]);\n        }\n      }\n    }\n  }\n  for (int ax0_0_2 = 0; ax0_0_2 < 2; ++ax0_0_2) {\n    for (int ax1_0 = 0; ax1_0 < 2; ++ax1_0) {\n      nvcuda::wmma::store_matrix_sync((&(C[((((((((int)blockIdx.y) * 2293760) + (((int)threadIdx.y) * 573440)) + (ax0_0_2 * 286720)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.z) * 32)) + (ax1_0 * 16))])), C_wmma_accumulator[((ax0_0_2 * 2) + ax1_0)], 17920, nvcuda::wmma::mem_row_major);\n    }\n  }\n}\n\n",
            "params": {
                "block_col_warps": 2,
                "BN": 64,
                "BK": 32,
                "raster": 0,
                "stage": 1,
                "block_row_warps": 4,
                "BM": 128
            }
        }
    }
}